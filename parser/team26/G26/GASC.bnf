//Comentario de prueba

<init> ::= <start>

<start> ::=
          <listadesentencias>
        | ε

<listadesentencias> ::= 
                         <listadesentencias> <sentencias>

<sentencias> ::=
                  <create>
                | <show>
                | <alter>
                | <drop>
                | <delete>
                | <insert>
                | <update>
                | <select>


<create> ::=
            CREATE <createprima>

<createprima> ::=
                 OR REPLACE DATABASE <creaciondb>
                |DATABASE <creaciondb>
                |TABLE <creaciontable>

<creaciondb> ::=
                IF NOT EXIST ID <owneropcional> <modeopcional>
                |ID <owneropcional> <modeopcional>

<owneropcional> ::=
                    OWNER <igualopcional> ID
                    |ε

<modeopcional>::=
                    MODE <igualopcional> NUMERO
                    | ε

<igualopcional>::= 
                    =
                    |ε

<show>::= 
        SHOW DATABASES <likeopcional>

<likeopcional> ::= 
                LIKE CADENA                                                    // CADENA refiriendose a Regex
                | ε


<alter> ::=  ALTER <altertipo>


<altertipo> ::= DATABASE <alterdb>
                |TABLE <altertable>

<alterdb> ::= ID <tipodealteracion>

<tipodealteracion> ::= RENAME TO ID
                 |  OWNER TO <tipodeowner>

<tipodeowner> ::= ID
            | CURRENT_USER
            | SESSION_USER

<drop>::= DROP <droptipo>


<droptipo> ::= DATABASE <dropdb>
             | TABLE   ID

<dropdb>::= IF EXISTS ID
        | ID

<creaciontable> ::= ID PARENDER <tuplas> <extratuplas> PARENIZQ <inheritsopcional> PTCOMA

<inheritsopcional>::= INHERIT PARENDER ID PARENIZQ
                    | ε

<extratuplas> ::= UNIQUE PARENDER <listadeid> PARENIZQ
                |PRIMARY KEY PARENDER <listadeid> PARENIZQ
                |FOREIGN <parametrosdelforeign>
                |<parametrosdecheck>

<parametrosdelforeign>::= KEY PARENDER <listadeid> PARENIZQ REFERENCES ID PARENDER <listadeid> PARENIZQ

<parametrosdecheck>::= CONSTRAINT ID CHECK PARENDER <condicioness> PARENIZQ
                    | CHECK PARENDER  <condiciones> PARENIZQ
                    | ε

<listadeid> ::= <listadeid> COMA ID 
                | ID

<tuplas>::= <tuplas> COMA <tuplasprima>
            | <tuplasprima>

<tuplasprima>::= ID <tipo> <ordentupla>

<tipo>::= SMALLINT
        | INTEFER 
        | BIGINT 
        | DECIMAL 
        | NUMERIC 
        | REAL 
        | DOUEBLE <precision> 
        | MONEY
        //char types
        | CHARACTER VARYING PARENDER  NUMERO PARENIZQ 
        | VARCHAR  PARENDER  NUMERO PARENIZQ 
        | CHARACTER PARENDER  NUMERO PARENIZQ 
        | CHAR  PARENDER  NUMERO PARENIZQ 
        | TEXT
        //Date/Time Types
        | TIMESTAMP  <precision> 
        | TIMESTAMPZ  <precision> 
        | DATE
        | TIME  <precision> 
        | INTERVAL  <fields> <precision> 

<precision>::= PARENDER  NUMERO PARENIZQ
            | ε

<fields> ::= YEAR  <to>
        | MONTH <to>
        | DAY <to>
        | HOUR <to>
        | MINUTE <to>
        | SECOND 
        | ε

TO ::=  'to' FIELDSPR 
        | ε

FIELDSPR ::= 'month'
        | 'hour'
        | 'minute'
        | 'second'

//DEESTO NO ESTOY SEGURO

<condiciones> ::= <condiciones> <comparacionlogica> <condicion>
                | <condicion>

<comparacionlogica> ::= AND
                       | OR

<condicion> ::= NOT <condicionS> 
               | <condicionS>

<condicionS> ::= <argument> <comparacionoperators>

//< > = <= >= <>
<comparacionoperators> ::= MENOR <argument>
                        | MAYOR <argument>
                        | IGUAL <argument>
                        | MENORIGUAL <argument>
                        | MAYORIGUAL <argument>
                        | DIFERENTE <argument>
                        | BETWEEN <argument> AND <argument>
                        | NOT BETWEEN <argument> AND <argument>
                        | BETWEEN SYMMETRIC <argument> AND <argument>
                        | IS DISTINCT FROM <argument>
                        | IS NOT DISTINCT FROM <argument>
                        | IS NULL
                        | IS NOT NULL
                        | ISNULL
                        | NOTNULL
                        | IS TRUE
                        | IS NOT TRUE
                        | IS FALSE
                        | IS NOT FALSE
                        | IS UNKNOWN
                        | IS NOT UNKNOWN

<argument> ::= ID
        | ID.ID
        | <argument> MAS <argument>
        | <argument> MENOS <argument>
        | <argument> BARRA <argument>
        | <argument> ASTERISCO <argument> 
        | <argument> PORCENTAJE <argument>
        | <argument> POWER <argument>
        | MAS <argument>
        | MENOS <argument>
        | '(' <argument> ')'
        | NUMERO
        | CADENA