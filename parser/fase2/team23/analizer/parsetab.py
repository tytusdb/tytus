
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftR_UNIONR_INTERSECTR_EXCEPTrightR_NOTleftR_ANDR_ORleftR_BETWEENR_ISleftS_IGUALOL_DISTINTODEOL_MAYORQUEOL_MENORQUEOL_MAYORIGUALQUEOL_MENORIGUALQUEleftOC_CONCATENARleftO_SUMAO_RESTAleftO_PRODUCTOO_DIVISIONO_MODULARrightUO_SUMAUO_RESTAleftO_EXPONENTECHARACTER COMMENT DECIMAL ID IDEspecial INTEGER OC_AND OC_CONCATENAR OC_NOT OC_OR OC_SHIFTL OC_SHIFTR OC_XOR OL_DISTINTODE OL_ESIGUAL OL_MAYORIGUALQUE OL_MAYORQUE OL_MENORIGUALQUE OL_MENORQUE O_DIVISION O_EXPONENTE O_MODULAR O_PRODUCTO O_RESTA O_SUMA R_ADD R_ALIAS R_ALL R_ALTER R_AND R_ANY R_AS R_ASC R_BEGIN R_BETWEEN R_BY R_CASE R_CHECK R_COLUMN R_CONSTANT R_CONSTRAINT R_COUNT R_CREATE R_CURRENT_DATE R_CURRENT_TIME R_CURRENT_USER R_DATABASE R_DATABASES R_DATE_PART R_DAY R_DECLARE R_DEFAULT R_DELETE R_DESC R_DISTINCT R_DROP R_ELSE R_ELSIF R_END R_ENUM R_EXCEPT R_EXECUTE R_EXISTS R_EXTRACT R_FALSE R_FIRST R_FOR R_FOREIGN R_FROM R_FULL R_FUNCTION R_GROUP R_HASH R_HAVING R_HOUR R_IF R_IN R_INDEX R_INHERITS R_INNER R_INSERT R_INTERSECT R_INTERVAL R_INTO R_IS R_ISNULL R_JOIN R_KEY R_LANGUAGE R_LAST R_LEFT R_LIKE R_LIMIT R_MINUTE R_MODE R_MONTH R_NATURAL R_NOT R_NOTNULL R_NOW R_NULL R_NULLS R_OFFSET R_ON R_OR R_ORDER R_OUTER R_OWNER R_PRIMARY R_PROCEDURE R_PROM R_REFERENCES R_RENAME R_REPLACE R_RETURN R_RETURNS R_RIGHT R_SECOND R_SELECT R_SESSION_USER R_SET R_SHOW R_SOME R_SUM R_SYMMETRIC R_TABLE R_THEN R_TIMESTAMP R_TO R_TRUE R_TRUNCATE R_TYPE R_UNION R_UNIQUE R_UNKNOWN R_UPDATE R_USE R_USING R_VALUES R_WHEN R_WHERE R_YEAR STRING S_COMA S_DOLAR S_DOSPUNTOS S_IGUAL S_PARDER S_PARIZQ S_PUNTO S_PUNTOCOMA T_BIGINT T_BOOLEAN T_CHAR T_CHARACTER T_DATE T_DECIMAL T_DOUBLE T_INTEGER T_MONEY T_NUMERIC T_PRECISION T_REAL T_SMALLINT T_TEXT T_TIME T_VARCHAR T_VARYINGinit : stmtListstmtList : stmtList stmtstmtList : stmt\n    stmt : createStmt  S_PUNTOCOMA\n        | showStmt S_PUNTOCOMA\n        | alterStmt S_PUNTOCOMA\n        | dropStmt S_PUNTOCOMA\n        | insertStmt S_PUNTOCOMA\n        | updateStmt S_PUNTOCOMA\n        | deleteStmt S_PUNTOCOMA\n        | truncateStmt S_PUNTOCOMA\n        | useStmt S_PUNTOCOMA\n        | selectStmt S_PUNTOCOMA\n        | functionStmt\n        | procedureStmt \n        | executePL S_PUNTOCOMA\n        | ifStmt R_END R_IF S_PUNTOCOMA\n        | asignacionStmt S_PUNTOCOMA\n    ifStmt : R_IF S_PARIZQ expresion S_PARDER R_THEN List_body  else_else_ : R_ELSE List_body\n           | Lista_elsif_\n           |\n    \n    Lista_elsif_ : Lista_elsif_ elsif_\n    \n    Lista_elsif_ : elsif_\n    elsif_ : R_ELSIF S_PARIZQ expresion S_PARDER R_THEN List_body\n\n    \n    List_body : List_body body\n    \n    List_body : body\n    \n    body : createStmt  S_PUNTOCOMA\n        | showStmt S_PUNTOCOMA\n        | alterStmt S_PUNTOCOMA\n        | dropStmt S_PUNTOCOMA\n        | insertStmt S_PUNTOCOMA\n        | updateStmt S_PUNTOCOMA\n        | deleteStmt S_PUNTOCOMA\n        | truncateStmt S_PUNTOCOMA\n        | useStmt S_PUNTOCOMA\n        | selectStmt S_PUNTOCOMA\n        | functionStmt S_PUNTOCOMA\n        | ifStmt R_END R_IF S_PUNTOCOMA\n        | expresion S_PUNTOCOMA\n    \n    idOrString : ID\n    | STRING\n    | CHARACTER\n    createStmt : R_CREATE createBody\n    createBody : createOpts\n    createOpts : unique_index R_INDEX ID R_ON ID using_hash_index S_PARIZQ idList indexasc_desc indexNullS S_PARDER whereClunique_index : R_UNIQUE\n                    | using_hash_index : R_USING R_HASH\n                    | indexNullS : R_NULLS R_FIRST\n    | R_NULLS R_LAST\n    |\n    indexasc_desc : R_DESC\n    | R_ASC\n    |\n    createOpts : R_TABLE ifNotExists idOrString S_PARIZQ createTableList S_PARDER inheritsOpt \n    createOpts : orReplace R_DATABASE ifNotExists idOrString createOwner createMode\n    \n    orReplace : R_OR R_REPLACE\n    \n    orReplace :\n    \n    createOpts : R_TYPE ifNotExists ID R_AS R_ENUM S_PARIZQ paramsList S_PARDER\n    \n    ifNotExists : R_IF R_NOT R_EXISTS\n    \n    ifNotExists :\n    \n    inheritsOpt : R_INHERITS S_PARIZQ ID S_PARDER\n    \n    inheritsOpt :\n    \n    createOwner : R_OWNER ID\n    | R_OWNER STRING\n    \n    createOwner :  R_OWNER S_IGUAL ID\n    | R_OWNER S_IGUAL STRING\n    \n    createOwner :\n    \n    createMode : R_MODE INTEGER\n    \n    createMode : R_MODE S_IGUAL INTEGER\n    \n    createMode :\n    createTableList : createTableList S_COMA createTablecreateTableList :  createTable\n    createTable :  ID types createColumns\n    \n    createTable : createConstraint\n    | createUnique\n    | createPrimary\n    | createForeign\n    \n    createColumns : colOptionsList\n    \n    createColumns :\n    createConstraint : constrName R_CHECK S_PARIZQ booleanCheck S_PARDERcreateUnique : R_UNIQUE S_PARIZQ idList S_PARDERcreatePrimary : R_PRIMARY R_KEY S_PARIZQ idList S_PARDER\n    createForeign : constrName R_FOREIGN R_KEY S_PARIZQ idList S_PARDER R_REFERENCES ID S_PARIZQ idList S_PARDER\n    \n    constrName : R_CONSTRAINT ID\n    \n    constrName :\n    idList : idList S_COMA IDidList : ID\n    types :  ID\n    \n    types : T_SMALLINT\n    | T_INTEGER\n    | T_BIGINT\n    | T_REAL\n    | T_DOUBLE T_PRECISION\n    | T_MONEY\n    | T_TEXT\n    | T_BOOLEAN\n    | R_TIMESTAMP\n    | T_DATE\n    | T_TIME\n    \n    types : T_DECIMAL optParams\n    | T_NUMERIC optParams\n    | T_VARCHAR optParams\n    | T_CHARACTER optParams\n    | T_CHAR optParams\n    \n    types : T_CHARACTER T_VARYING optParams\n    \n    types : R_INTERVAL intervalFields\n    \n    intervalFields :  R_YEAR\n    | R_MONTH\n    | R_DAY\n    | R_HOUR\n    | R_MINUTE\n    | R_SECOND\n    \n    intervalFields :\n    optParams : S_PARIZQ literalList S_PARDERoptParams : colOptionsList : colOptionsList colOptionscolOptionsList : colOptions\n    colOptions : defaultVal\n    | nullOpt\n    | constraintOpt\n    | primaryOpt\n    | referencesOpt\n    defaultVal : R_DEFAULT literal\n    nullOpt : R_NOT R_NULL\n    \n    nullOpt : R_NULL\n    \n    constraintOpt : constrName R_UNIQUE\n    \n    constraintOpt : constrName R_CHECK S_PARIZQ booleanCheck S_PARDER\n    primaryOpt : R_PRIMARY R_KEYreferencesOpt : R_REFERENCES ID\n    expresion : datatype\n            | expBool\n    \n    expresion : S_PARIZQ selectStmt S_PARDER\n    \n    funcCall : ID S_PARIZQ paramsList S_PARDER\n    \n    funcCall : ID S_PARIZQ S_PARDER\n            | R_NOW S_PARIZQ S_PARDER\n    \n    funcCall : R_COUNT S_PARIZQ datatype S_PARDER\n            | R_COUNT S_PARIZQ O_PRODUCTO S_PARDER\n            | R_SUM S_PARIZQ datatype S_PARDER\n            | R_PROM S_PARIZQ datatype S_PARDER\n    \n    extract : R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER\n    \n    extract : R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER\n    \n    timeStamp : R_TIMESTAMP STRING\n          | R_INTERVAL STRING\n    \n    optsExtract : R_YEAR\n                  | R_MONTH\n                  | R_DAY\n                  | R_HOUR\n                  | R_MINUTE\n                  | R_SECOND\n    \n    datePart : R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER\n    \n    dateSource : R_TIMESTAMP STRING\n          | T_DATE STRING\n          | T_TIME STRING\n          | R_INTERVAL STRING\n          | R_NOW S_PARIZQ S_PARDER\n    \n    current : R_CURRENT_DATE\n          | R_CURRENT_TIME\n    \n    current : timeStamp\n    literalList : literalList S_COMA literalliteralList : literal\n    literal :  INTEGER\n    | STRING\n    | DECIMAL\n    | CHARACTER\n    | R_TRUE\n    | R_FALSE\n    | R_NULL\n    paramsList : paramsList S_COMA datatypeparamsList : datatype\n    datatype : datatype O_SUMA datatype\n    | datatype O_RESTA datatype\n    | datatype O_PRODUCTO datatype\n    | datatype O_DIVISION datatype\n    | datatype O_EXPONENTE datatype\n    | datatype O_MODULAR datatype\n    \n    datatype : datatype OC_CONCATENAR datatype\n    \n    datatype : R_CASE caseList optElse R_END\n    \n    caseList : caseList caseWhen\n            | caseWhen\n    caseWhen : R_WHEN expBool R_THEN literaloptElse : R_ELSE literal\n    |\n    \n    datatype : O_RESTA datatype %prec UO_RESTA\n    | O_SUMA datatype %prec UO_SUMA\n    \n    datatype : columnName\n    | literal\n    | funcCall\n    | extract\n    | datePart\n    | current\n    \n    datatype : S_PARIZQ datatype S_PARDER\n    \n    expComp : datatype OL_MENORQUE datatype\n    | datatype OL_MAYORQUE datatype\n    | datatype OL_MAYORIGUALQUE datatype\n    | datatype OL_MENORIGUALQUE datatype\n    | datatype S_IGUAL datatype\n    | datatype OL_DISTINTODE datatype\n    \n    expComp : datatype R_IS R_DISTINCT R_FROM datatype\n    \n    expComp : datatype R_IS R_NOT R_DISTINCT R_FROM datatype\n    \n    expComp :  datatype R_BETWEEN datatype R_AND datatype\n    \n    expComp : datatype R_NOT R_BETWEEN datatype R_AND datatype\n    | datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype\n    \n    expComp : datatype R_ISNULL\n    | datatype R_NOTNULL\n    \n    expComp : datatype R_IS R_NULL\n    | datatype R_IS R_TRUE\n    | datatype R_IS R_FALSE\n    | datatype R_IS R_UNKNOWN\n    \n    expComp : datatype R_IS R_NOT R_NULL\n    | datatype R_IS R_NOT R_TRUE\n    | datatype R_IS R_NOT R_FALSE\n    | datatype R_IS R_NOT R_UNKNOWN\n    \n    expSubq : datatype OL_MENORQUE  subqValues S_PARIZQ selectStmt S_PARDER\n              | datatype OL_MAYORQUE  subqValues S_PARIZQ selectStmt S_PARDER\n              | datatype OL_MAYORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER\n              | datatype OL_MENORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER\n              | datatype OL_ESIGUAL  subqValues S_PARIZQ selectStmt S_PARDER\n              | datatype OL_DISTINTODE subqValues S_PARIZQ selectStmt S_PARDER\n              | datatype R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER\n              | datatype R_NOT R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER\n              | datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER\n              | datatype R_IS R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER\n              | datatype R_IS R_NOT R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER\n              | datatype R_IS R_NULL subqValues S_PARIZQ selectStmt S_PARDER\n              | datatype R_IS R_NOT R_NULL subqValues S_PARIZQ selectStmt S_PARDER\n              | datatype R_ISNULL subqValues S_PARIZQ selectStmt S_PARDER\n              | datatype R_NOTNULL subqValues S_PARIZQ selectStmt S_PARDER\n              | datatype R_IS R_TRUE subqValues S_PARIZQ selectStmt S_PARDER\n              | datatype R_IS R_NOT R_TRUE subqValues S_PARIZQ selectStmt S_PARDER\n              | datatype R_IS R_FALSE subqValues S_PARIZQ selectStmt S_PARDER\n              | datatype R_IS R_NOT R_FALSE subqValues S_PARIZQ selectStmt S_PARDER\n              | datatype R_IS R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER\n              | datatype R_IS R_NOT R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER\n              | stringExp R_LIKE STRING\n    \n    stringExp : STRING\n          | columnName\n    \n    subqValues : R_ALL\n                  | R_ANY\n                  | R_SOME\n    \n    boolean : R_EXISTS S_PARIZQ selectStmt S_PARDER\n    \n    boolean : datatype R_IN S_PARIZQ selectStmt S_PARDER\n    \n    boolean : datatype R_NOT R_IN S_PARIZQ selectStmt S_PARDER\n    \n    boolean : expComp\n            | expSubq\n    \n    expBool : expBool R_AND expBool\n            | expBool R_OR expBool\n    \n    expBool : R_NOT expBool\n    \n    expBool : S_PARIZQ expBool S_PARDER\n    \n    expBool : expBool optBoolPredicate\n    \n    expBool : boolean\n    \n    optBoolPredicate : R_IS R_TRUE\n    | R_IS R_FALSE\n    | R_IS R_UNKNOWN\n    \n    optBoolPredicate : R_IS R_NOT R_TRUE\n    | R_IS R_NOT R_FALSE\n    | R_IS R_NOT R_UNKNOWN\n    \n    columnName : ID\n    \n    columnName : ID S_PUNTO ID\n    \n    booleanCheck : idOrLiteral OL_MENORQUE idOrLiteral\n    | idOrLiteral OL_MAYORQUE idOrLiteral\n    | idOrLiteral OL_MAYORIGUALQUE idOrLiteral\n    | idOrLiteral OL_MENORIGUALQUE idOrLiteral\n    | idOrLiteral S_IGUAL idOrLiteral\n    | idOrLiteral OL_DISTINTODE idOrLiteral\n    \n    booleanCheck : idOrLiteral R_IS R_DISTINCT R_FROM idOrLiteral\n    \n    booleanCheck : idOrLiteral R_IS R_NOT R_DISTINCT R_FROM idOrLiteral\n    \n    idOrLiteral : ID\n    | INTEGER\n    | STRING\n    | DECIMAL\n    | CHARACTER\n    | R_TRUE\n    | R_FALSE\n    alterStmt : R_ALTER R_DATABASE idOrString alterDb\n    | R_ALTER R_TABLE idOrString alterTableList\n    alterDb : R_RENAME R_TO idOrString\n    | R_OWNER R_TO ownerOPts\n    \n    ownerOPts : idOrString\n    | R_CURRENT_USER\n    | R_SESSION_USER\n    \n    alterTableList : alterTableList S_COMA alterTable\n    \n    alterTableList : alterTable\n    \n    alterTable : R_ADD alterAdd\n    | R_ALTER alterAlter\n    | R_DROP alterDrop\n    | R_RENAME alterRename\n    \n    alterAdd : R_COLUMN ID types\n    \n    alterAdd : createConstraint\n    | createPrimary\n    | createForeign\n    \n    alterAdd : constrName R_UNIQUE S_PARIZQ ID S_PARDER\n    \n    alterAlter : R_COLUMN ID R_SET nullOpt\n    | R_COLUMN ID R_SET defaultVal\n    | R_COLUMN ID R_TYPE types\n    \n    alterDrop : R_CONSTRAINT ID\n    | R_COLUMN ID\n    \n    alterRename : R_COLUMN ID R_TO ID\n    \n    dropStmt : R_DROP R_TABLE ifExists idOrString\n    | R_DROP R_DATABASE ifExists idOrString\n    ifExists : R_IF R_EXISTS\n    |\n    selectStmt : R_SELECT R_DISTINCT selectParams fromCl whereCl groupByCl orderByCl limitClselectStmt : R_SELECT selectParams fromCl whereCl groupByCl orderByCl limitClselectStmt : R_SELECT selectParams fromCl joinList whereCl groupByCl orderByCl limitClselectStmt : R_SELECT selectParams fromCl joinList whereCl groupByCl limitClselectStmt : selectStmt R_UNION allOpt selectStmtselectStmt : selectStmt R_INTERSECT allOpt selectStmtselectStmt : selectStmt R_EXCEPT allOpt selectStmtselectStmt : S_PARIZQ selectStmt S_PARDER\n    fromCl : R_FROM tableExp\n    selectStmt : R_SELECT selectParamsallOpt : R_ALL\n    |\n    selectParams : O_PRODUCTOselectParams : selectListselectList : selectList S_COMA selectListParams optAliasselectList : selectListParams optAliasselectListParams : expresionselectListParams : ID S_PUNTO O_PRODUCTO\n    optAlias : R_AS idOrString\n    \n    optAlias : idOrString\n    optAlias : tableExp : tableExp S_COMA fromBody tableExp : fromBody fromBody : ID optAliasfromBody : S_PARIZQ selectStmt S_PARDER R_AS idOrStringjoinList : joinList2joinList2 : joinList2 joinCl\n    | joinCljoinCl : joinOpt R_JOIN columnName optAlias R_ON expBool\n    | joinOpt R_JOIN columnName optAlias R_USING S_PARIZQ nameList S_PARDER\n    | R_NATURAL joinOpt R_JOIN columnName optAlias\n    nameList : nameList S_COMA columnName\n    | columnName\n    joinOpt : R_INNER\n    | R_LEFT\n    | R_LEFT R_OUTER\n    | R_RIGHT\n    | R_RIGHT R_OUTER\n    | R_FULL\n    | R_FULL R_OUTER\n    whereCl : R_WHERE expBoolwhereCl : \n    groupByCl : R_GROUP R_BY groupList havingCl\n    \n    groupByCl :\n    \n    groupList :  groupList S_COMA columnName\n            | groupList S_COMA INTEGER\n    \n    groupList :  columnName\n              | INTEGER\n    havingCl : R_HAVING expBoolhavingCl :orderByCl : R_ORDER R_BY orderListorderByCl : orderList : orderList S_COMA orderByElemorderList : orderByElem\n    orderByElem : columnName orderOpts orderNull\n                | INTEGER orderOpts orderNull\n    orderOpts : R_ASC\n                 | R_DESC\n    orderOpts : orderNull : R_NULL R_FIRST\n                 | R_NULL R_LASTorderNull : limitCl : R_LIMIT INTEGER offsetLimit\n               | R_LIMIT R_ALL offsetLimit\n    limitCl :offsetLimit : R_OFFSET INTEGERoffsetLimit :insertStmt : R_INSERT R_INTO ID paramsColumn R_VALUES S_PARIZQ paramsList S_PARDERparamsColumn : S_PARIZQ idList S_PARDERparamsColumn :updateStmt : R_UPDATE fromBody R_SET updateCols whereClupdateCols : updateCols S_COMA updateValsupdateCols : updateVals updateVals : ID S_IGUAL updateExpupdateExp : datatype\n    | R_DEFAULT\n    deleteStmt : R_DELETE fromCl whereCltruncateStmt : R_TRUNCATE tableOpt IDtableOpt : R_TABLE\n    |\n    showStmt : R_SHOW R_DATABASES likeOptlikeOpt : R_LIKE STRING\n    |\n    useStmt : R_USE IDfunctionStmt : R_CREATE R_FUNCTION ID S_PARIZQ params_list S_PARDER returnsStmt R_AS S_DOLAR S_DOLAR bloqueFunctionfunctionStmt : R_CREATE R_FUNCTION ID S_PARIZQ S_PARDER returnsStmt R_AS S_DOLAR S_DOLAR bloqueFunctionbloqueFunction : declareStmt R_BEGIN beginStmt R_END S_PUNTOCOMA labelEndparams_list : params_list S_COMA param_itemparams_list : param_itemparam_item : ID typesreturnsStmt : R_RETURNS typesreturnsStmt : declareStmt : R_DECLARE declaracion_listdeclareStmt : declaracion_list : declaracion_list declaracion_itemdeclaracion_list : declaracion_itemdeclaracion_item : ID constant_opt types null_opt default_item S_PUNTOCOMAdeclaracion_item : ID R_ALIAS R_FOR alias_declaracion S_PUNTOCOMAconstant_opt : R_CONSTANTconstant_opt : null_opt : R_NOT R_NULLnull_opt : default_opt : R_DEFAULT  \n                   | S_DOSPUNTOS S_IGUAL\n                   | S_IGUALdefault_item : default_opt expresiondefault_item : alias_declaracion : ID \n                         | IDEspecialbeginStmt : beginStmt beginItembeginStmt : beginItembeginItem : stmt\n                 | returnStmt S_PUNTOCOMAreturnStmt : R_RETURN expresionlabelEnd : labelEnd : S_DOLAR S_DOLAR R_LANGUAGE ID S_PUNTOCOMAasignacionStmt : ID S_DOSPUNTOS S_IGUAL expresionprocedureStmt : R_CREATE orReplace R_PROCEDURE ID S_PARIZQ params_list S_PARDER languageProcedure R_AS S_DOLAR S_DOLAR beginWord beginStmt endProcedure dolarEndProcedureprocedureStmt : R_CREATE orReplace R_PROCEDURE ID S_PARIZQ S_PARDER languageProcedure R_AS S_DOLAR S_DOLAR beginWord beginStmt endProcedure dolarEndProcedureendProcedure : endProcedure : R_END S_PUNTOCOMAdolarEndProcedure : dolarEndProcedure : S_DOLAR S_DOLAR S_PUNTOCOMAbeginWord : beginWord : R_BEGINlanguageProcedure : R_LANGUAGE IDlanguageProcedure : executePL : R_EXECUTE ID S_PARIZQ executeParams S_PARDERexecutePL : R_EXECUTE ID S_PARIZQ S_PARDERexecuteParams : executeParams S_COMA executeItemexecuteParams : executeItemexecuteItem : expresion'
    
_lr_action_items = {'R_CREATE':([0,2,3,14,15,33,34,35,36,37,38,39,40,41,42,43,47,50,217,335,425,426,545,547,548,552,553,554,555,556,557,558,559,560,561,562,651,734,789,793,820,821,822,826,827,828,843,844,845,846,853,854,864,865,869,870,875,881,883,884,886,895,902,905,],[20,20,-3,-14,-15,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-16,-18,-17,439,439,-27,-40,-26,439,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,439,-39,-390,-428,439,-389,20,-428,20,-429,439,20,-415,-416,20,20,-414,-417,20,-426,-419,-426,-423,-425,-391,-422,-427,-420,]),'R_SHOW':([0,2,3,14,15,33,34,35,36,37,38,39,40,41,42,43,47,50,217,335,425,426,545,547,548,552,553,554,555,556,557,558,559,560,561,562,651,734,789,793,820,821,822,826,827,828,843,844,845,846,853,854,864,865,869,870,875,881,883,884,886,895,902,905,],[21,21,-3,-14,-15,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-16,-18,-17,21,21,-27,-40,-26,21,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,21,-39,-390,-428,21,-389,21,-428,21,-429,21,21,-415,-416,21,21,-414,-417,21,-426,-419,-426,-423,-425,-391,-422,-427,-420,]),'R_ALTER':([0,2,3,14,15,33,34,35,36,37,38,39,40,41,42,43,47,50,138,139,140,141,217,335,350,425,426,545,547,548,552,553,554,555,556,557,558,559,560,561,562,651,734,789,793,820,821,822,826,827,828,843,844,845,846,853,854,864,865,869,870,875,881,883,884,886,895,902,905,],[22,22,-3,-14,-15,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-16,-18,-41,-42,-43,231,-17,22,231,22,-27,-40,-26,22,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,22,-39,-390,-428,22,-389,22,-428,22,-429,22,22,-415,-416,22,22,-414,-417,22,-426,-419,-426,-423,-425,-391,-422,-427,-420,]),'R_DROP':([0,2,3,14,15,33,34,35,36,37,38,39,40,41,42,43,47,50,138,139,140,141,217,335,350,425,426,545,547,548,552,553,554,555,556,557,558,559,560,561,562,651,734,789,793,820,821,822,826,827,828,843,844,845,846,853,854,864,865,869,870,875,881,883,884,886,895,902,905,],[23,23,-3,-14,-15,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-16,-18,-41,-42,-43,235,-17,23,235,23,-27,-40,-26,23,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,23,-39,-390,-428,23,-389,23,-428,23,-429,23,23,-415,-416,23,23,-414,-417,23,-426,-419,-426,-423,-425,-391,-422,-427,-420,]),'R_INSERT':([0,2,3,14,15,33,34,35,36,37,38,39,40,41,42,43,47,50,217,335,425,426,545,547,548,552,553,554,555,556,557,558,559,560,561,562,651,734,789,793,820,821,822,826,827,828,843,844,845,846,853,854,864,865,869,870,875,881,883,884,886,895,902,905,],[24,24,-3,-14,-15,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-16,-18,-17,24,24,-27,-40,-26,24,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,24,-39,-390,-428,24,-389,24,-428,24,-429,24,24,-415,-416,24,24,-414,-417,24,-426,-419,-426,-423,-425,-391,-422,-427,-420,]),'R_UPDATE':([0,2,3,14,15,33,34,35,36,37,38,39,40,41,42,43,47,50,217,335,425,426,545,547,548,552,553,554,555,556,557,558,559,560,561,562,651,734,789,793,820,821,822,826,827,828,843,844,845,846,853,854,864,865,869,870,875,881,883,884,886,895,902,905,],[27,27,-3,-14,-15,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-16,-18,-17,27,27,-27,-40,-26,27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,27,-39,-390,-428,27,-389,27,-428,27,-429,27,27,-415,-416,27,27,-414,-417,27,-426,-419,-426,-423,-425,-391,-422,-427,-420,]),'R_DELETE':([0,2,3,14,15,33,34,35,36,37,38,39,40,41,42,43,47,50,217,335,425,426,545,547,548,552,553,554,555,556,557,558,559,560,561,562,651,734,789,793,820,821,822,826,827,828,843,844,845,846,853,854,864,865,869,870,875,881,883,884,886,895,902,905,],[28,28,-3,-14,-15,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-16,-18,-17,28,28,-27,-40,-26,28,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,28,-39,-390,-428,28,-389,28,-428,28,-429,28,28,-415,-416,28,28,-414,-417,28,-426,-419,-426,-423,-425,-391,-422,-427,-420,]),'R_TRUNCATE':([0,2,3,14,15,33,34,35,36,37,38,39,40,41,42,43,47,50,217,335,425,426,545,547,548,552,553,554,555,556,557,558,559,560,561,562,651,734,789,793,820,821,822,826,827,828,843,844,845,846,853,854,864,865,869,870,875,881,883,884,886,895,902,905,],[29,29,-3,-14,-15,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-16,-18,-17,29,29,-27,-40,-26,29,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,29,-39,-390,-428,29,-389,29,-428,29,-429,29,29,-415,-416,29,29,-414,-417,29,-426,-419,-426,-423,-425,-391,-422,-427,-420,]),'R_USE':([0,2,3,14,15,33,34,35,36,37,38,39,40,41,42,43,47,50,217,335,425,426,545,547,548,552,553,554,555,556,557,558,559,560,561,562,651,734,789,793,820,821,822,826,827,828,843,844,845,846,853,854,864,865,869,870,875,881,883,884,886,895,902,905,],[30,30,-3,-14,-15,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-16,-18,-17,30,30,-27,-40,-26,30,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,30,-39,-390,-428,30,-389,30,-428,30,-429,30,30,-415,-416,30,30,-414,-417,30,-426,-419,-426,-423,-425,-391,-422,-427,-420,]),'R_SELECT':([0,2,3,14,15,26,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,50,70,85,120,121,122,123,188,209,217,274,335,386,388,389,390,391,392,405,406,407,423,425,426,525,526,527,528,545,547,548,552,553,554,555,556,557,558,559,560,561,562,629,630,631,632,651,720,730,734,777,779,785,789,793,820,821,822,826,827,828,843,844,845,846,853,854,864,865,869,870,875,881,883,884,886,895,902,905,],[31,31,-3,-14,-15,31,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-316,-316,-316,-16,-18,31,31,31,-315,31,31,31,31,-17,31,31,31,31,31,31,31,31,31,31,31,31,31,-27,31,31,31,31,-40,-26,31,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,31,31,31,31,31,31,31,-39,31,31,31,-390,-428,31,-389,31,-428,31,-429,31,31,-415,-416,31,31,-414,-417,31,-426,-419,-426,-423,-425,-391,-422,-427,-420,]),'S_PARIZQ':([0,2,3,14,15,18,26,27,31,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,49,50,70,72,76,82,85,86,87,95,104,105,106,107,108,110,113,119,120,121,122,123,126,127,138,139,140,145,146,154,160,163,164,165,166,167,168,169,170,171,173,174,175,176,177,178,180,184,185,188,194,199,201,204,205,206,209,213,217,221,224,249,274,275,276,278,279,280,281,283,285,287,290,298,299,300,301,335,364,369,384,386,388,389,390,391,392,393,399,400,401,402,403,405,406,407,422,423,425,426,453,454,455,456,457,467,476,477,486,487,489,494,513,520,521,522,523,524,525,526,527,528,530,542,545,547,548,551,552,553,554,555,556,557,558,559,560,561,562,571,592,598,604,627,629,630,631,632,637,651,653,668,670,714,716,717,719,720,721,730,731,734,748,777,779,785,789,793,820,821,822,826,827,828,843,844,845,846,848,853,854,861,864,865,869,870,875,881,883,884,886,889,890,892,895,901,902,905,],[26,26,-3,-14,-15,49,26,70,85,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-316,-316,-316,-16,85,-18,26,70,85,163,188,194,194,201,203,204,205,206,207,208,209,213,26,-315,26,26,163,220,-41,-42,-43,241,85,201,85,194,194,194,194,194,194,194,194,274,194,194,194,194,194,194,194,201,201,188,194,201,201,194,194,194,26,85,-17,340,343,70,26,386,194,388,-240,-241,-242,389,390,391,392,194,405,406,407,423,494,194,194,26,26,26,26,26,26,194,525,526,527,528,194,26,26,26,85,188,423,-27,567,567,567,567,567,-50,597,598,602,603,605,194,194,194,629,630,631,632,26,26,26,26,194,649,-40,-26,423,653,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,567,667,194,701,720,26,26,26,26,730,423,85,-49,743,201,201,776,777,26,779,26,785,-39,798,26,26,26,-390,-428,423,-389,26,-428,26,-429,423,26,-415,-416,85,26,26,874,-414,-417,26,-426,-419,-426,-423,-425,-391,85,-407,-409,-422,-408,-427,-420,]),'R_EXECUTE':([0,2,3,14,15,33,34,35,36,37,38,39,40,41,42,43,47,50,217,789,793,821,822,826,827,828,844,845,846,853,854,864,865,869,870,875,881,883,884,886,895,902,905,],[32,32,-3,-14,-15,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-16,-18,-17,-390,-428,-389,32,-428,32,-429,32,-415,-416,32,32,-414,-417,32,-426,-419,-426,-423,-425,-391,-422,-427,-420,]),'R_IF':([0,2,3,14,15,33,34,35,36,37,38,39,40,41,42,43,47,48,50,57,58,63,64,129,217,335,425,426,545,547,548,552,553,554,555,556,557,558,559,560,561,562,563,651,734,789,793,820,821,822,826,827,828,843,844,845,846,853,854,864,865,869,870,875,881,883,884,886,895,902,905,],[18,18,-3,-14,-15,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-16,124,-18,133,133,143,143,133,-17,18,18,-27,-40,-26,18,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,654,18,-39,-390,-428,18,-389,18,-428,18,-429,18,18,-415,-416,18,18,-414,-417,18,-426,-419,-426,-423,-425,-391,-422,-427,-420,]),'ID':([0,2,3,14,15,27,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,47,49,50,52,57,58,61,62,63,64,65,69,72,73,74,76,80,81,82,83,84,85,86,87,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,109,111,112,114,115,126,128,129,131,132,134,142,144,146,148,150,154,160,162,163,164,165,166,167,168,169,170,173,174,175,176,177,178,180,181,182,184,185,186,188,192,193,194,195,196,199,200,201,204,205,206,210,211,213,217,219,220,222,238,241,249,261,262,263,265,267,268,269,270,271,272,273,276,277,282,284,286,288,289,293,294,295,296,298,302,303,304,305,306,308,309,310,316,330,335,336,340,342,343,344,346,347,349,352,358,360,361,363,368,369,370,377,383,384,393,395,396,397,398,403,408,409,410,411,414,415,416,417,418,420,422,423,425,426,460,462,466,470,485,494,496,505,507,508,509,511,513,519,520,529,530,545,547,548,552,553,554,555,556,557,558,559,560,561,562,586,591,595,597,598,600,602,603,605,606,612,619,620,621,622,623,624,625,626,628,638,639,640,641,642,643,644,651,653,667,685,701,713,714,716,726,727,728,729,734,743,755,756,757,758,759,760,767,776,780,781,782,783,789,791,793,798,816,818,820,821,822,823,824,825,826,827,828,833,835,839,840,841,842,843,844,845,846,848,849,850,852,853,854,860,864,865,868,869,870,874,875,881,883,884,886,889,890,892,894,895,899,901,902,903,905,],[25,25,-3,-14,-15,69,-384,75,82,119,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-16,126,-18,127,-63,-63,138,138,-304,-304,145,138,69,157,-383,82,138,-321,-260,-133,-134,126,126,126,-188,-189,-190,-191,-192,-193,126,-253,-164,-165,-166,-167,-168,-169,-170,-161,-159,-160,-246,-247,-260,221,-63,223,138,226,138,138,126,245,138,126,82,262,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,-206,-207,126,126,-252,126,-187,-188,126,-165,-186,126,-250,126,126,126,126,-145,-146,126,-17,262,336,138,-303,366,69,138,-261,-322,-137,-173,-174,-175,-176,-177,-178,-179,126,-195,-196,-197,-198,-199,-200,-208,-209,-210,-211,126,-248,-249,-254,-255,-256,-135,-194,-251,-138,-237,126,440,336,467,470,-62,138,138,483,485,490,491,492,493,245,126,138,508,-136,126,126,-212,-213,-214,-215,126,-257,-258,-259,-180,-139,-140,-141,-142,508,-243,126,126,126,-27,336,440,589,440,440,126,608,508,138,-260,508,-244,126,-201,126,-203,126,-40,-26,126,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,662,665,470,366,126,440,691,694,366,703,508,138,-245,-204,-216,-217,-218,-219,-221,-202,-205,-229,-230,-220,-143,-144,-153,126,126,366,750,366,508,126,126,-227,-231,-233,-235,-39,797,694,694,694,694,694,694,508,508,-228,-232,-234,-236,-390,825,-428,694,-225,-222,126,-389,25,825,-400,-404,-428,25,-429,694,861,508,-223,-226,-224,126,25,-415,-416,126,-399,440,-403,25,25,694,-414,-417,878,25,-426,366,-419,-426,-423,-425,-391,126,-407,-409,-402,-422,-401,-408,-427,904,-420,]),'$endspecial':([868,],[880,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'init':([0,],[1,]),'stmtList':([0,],[2,]),'stmt':([0,2,822,827,844,853,854,869,],[3,33,846,846,846,846,846,846,]),'createStmt':([0,2,335,425,548,651,820,822,827,843,844,853,854,869,],[4,4,427,427,427,427,427,4,4,427,4,4,4,4,]),'showStmt':([0,2,335,425,548,651,820,822,827,843,844,853,854,869,],[5,5,428,428,428,428,428,5,5,428,5,5,5,5,]),'alterStmt':([0,2,335,425,548,651,820,822,827,843,844,853,854,869,],[6,6,429,429,429,429,429,6,6,429,6,6,6,6,]),'dropStmt':([0,2,335,425,548,651,820,822,827,843,844,853,854,869,],[7,7,430,430,430,430,430,7,7,430,7,7,7,7,]),'insertStmt':([0,2,335,425,548,651,820,822,827,843,844,853,854,869,],[8,8,431,431,431,431,431,8,8,431,8,8,8,8,]),'updateStmt':([0,2,335,425,548,651,820,822,827,843,844,853,854,869,],[9,9,432,432,432,432,432,9,9,432,9,9,9,9,]),'deleteStmt':([0,2,335,425,548,651,820,822,827,843,844,853,854,869,],[10,10,433,433,433,433,433,10,10,433,10,10,10,10,]),'truncateStmt':([0,2,335,425,548,651,820,822,827,843,844,853,854,869,],[11,11,434,434,434,434,434,11,11,434,11,11,11,11,]),'useStmt':([0,2,335,425,548,651,820,822,827,843,844,853,854,869,],[12,12,435,435,435,435,435,12,12,435,12,12,12,12,]),'selectStmt':([0,2,26,70,85,120,122,123,188,209,274,335,386,388,389,390,391,392,405,406,407,423,425,525,526,527,528,548,629,630,631,632,651,720,730,777,779,785,820,822,827,843,844,853,854,869,],[13,13,67,152,189,214,215,216,67,329,385,436,512,514,515,516,517,518,531,532,533,544,436,633,634,635,636,436,722,723,724,725,436,778,784,815,817,819,436,13,13,436,13,13,13,13,]),'functionStmt':([0,2,335,425,548,651,820,822,827,843,844,853,854,869,],[14,14,437,437,437,437,437,14,14,437,14,14,14,14,]),'procedureStmt':([0,2,822,827,844,853,854,869,],[15,15,15,15,15,15,15,15,]),'executePL':([0,2,822,827,844,853,854,869,],[16,16,16,16,16,16,16,16,]),'ifStmt':([0,2,335,425,548,651,820,822,827,843,844,853,854,869,],[17,17,438,438,438,438,438,17,17,438,17,17,17,17,]),'asignacionStmt':([0,2,822,827,844,853,854,869,],[19,19,19,19,19,19,19,19,]),'createBody':([20,439,],[51,51,]),'orReplace':([20,439,],[53,564,]),'createOpts':([20,439,],[54,54,]),'unique_index':([20,439,],[56,56,]),'fromBody':([27,72,249,],[68,156,371,]),'fromCl':([28,77,158,],[71,159,250,]),'tableOpt':([29,],[73,]),'selectParams':([31,76,],[77,158,]),'selectList':([31,76,],[79,79,]),'selectListParams':([31,76,160,],[80,80,261,]),'expresion':([31,49,76,146,160,213,335,422,425,548,651,653,820,843,848,889,],[81,125,81,242,81,334,424,334,424,424,424,733,424,424,866,900,]),'datatype':([31,49,76,85,86,87,95,146,154,160,163,164,165,166,167,168,169,170,173,174,175,176,177,178,180,184,185,188,194,199,201,204,205,206,213,276,298,335,369,384,393,403,422,423,425,494,513,520,530,548,598,651,653,714,716,820,843,848,889,],[83,83,83,190,192,196,202,83,202,83,266,267,268,269,270,271,272,273,277,282,284,286,288,289,297,202,202,190,311,202,190,317,319,320,83,387,404,83,499,510,519,529,83,190,83,266,621,628,638,83,266,83,83,202,202,83,83,83,83,]),'expBool':([31,49,76,85,95,146,154,160,184,185,188,199,201,213,335,422,423,425,548,651,653,714,716,820,843,848,889,],[84,84,84,191,200,84,248,84,302,303,191,315,191,84,84,84,191,84,84,84,84,774,775,84,84,84,84,]),'columnName':([31,49,76,85,86,87,95,146,154,160,163,164,165,166,167,168,169,170,173,174,175,176,177,178,180,184,185,188,194,199,201,204,205,206,213,276,298,335,369,377,384,393,403,418,422,423,425,494,505,509,513,520,530,548,598,612,651,653,713,714,716,767,776,820,839,843,848,889,],[89,89,89,89,193,193,89,89,89,89,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,89,89,89,193,89,89,193,193,193,89,193,193,89,193,507,193,193,193,536,89,89,89,193,614,619,193,193,193,89,193,710,89,89,772,89,89,710,813,89,862,89,89,89,]),'literal':([31,49,76,85,86,87,95,146,154,160,163,164,165,166,167,168,169,170,173,174,175,176,177,178,180,184,185,188,194,199,201,204,205,206,213,276,298,314,335,369,384,393,403,413,422,423,425,494,513,520,530,548,567,598,651,653,680,714,716,736,820,843,848,889,],[90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,412,90,90,90,90,90,534,90,90,90,90,90,90,90,90,656,90,90,90,745,90,90,787,90,90,90,90,]),'funcCall':([31,49,76,85,86,87,95,146,154,160,163,164,165,166,167,168,169,170,173,174,175,176,177,178,180,184,185,188,194,199,201,204,205,206,213,276,298,335,369,384,393,403,422,423,425,494,513,520,530,548,598,651,653,714,716,820,843,848,889,],[91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,]),'extract':([31,49,76,85,86,87,95,146,154,160,163,164,165,166,167,168,169,170,173,174,175,176,177,178,180,184,185,188,194,199,201,204,205,206,213,276,298,335,369,384,393,403,422,423,425,494,513,520,530,548,598,651,653,714,716,820,843,848,889,],[92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,]),'datePart':([31,49,76,85,86,87,95,146,154,160,163,164,165,166,167,168,169,170,173,174,175,176,177,178,180,184,185,188,194,199,201,204,205,206,213,276,298,335,369,384,393,403,422,423,425,494,513,520,530,548,598,651,653,714,716,820,843,848,889,],[93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,]),'current':([31,49,76,85,86,87,95,146,154,160,163,164,165,166,167,168,169,170,173,174,175,176,177,178,180,184,185,188,194,199,201,204,205,206,213,276,298,335,369,384,393,403,422,423,425,494,513,520,530,548,598,651,653,714,716,820,843,848,889,],[94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,]),'boolean':([31,49,76,85,95,146,154,160,184,185,188,199,201,213,335,422,423,425,548,651,653,714,716,820,843,848,889,],[96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,]),'timeStamp':([31,49,76,85,86,87,95,146,154,160,163,164,165,166,167,168,169,170,173,174,175,176,177,178,180,184,185,188,194,199,201,204,205,206,213,276,298,335,369,384,393,403,418,422,423,425,494,513,520,530,548,598,651,653,714,716,820,843,848,889,],[109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,535,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,]),'expComp':([31,49,76,85,95,146,154,160,184,185,188,199,201,213,335,422,423,425,548,651,653,714,716,820,843,848,889,],[114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,]),'expSubq':([31,49,76,85,95,146,154,160,184,185,188,199,201,213,335,422,423,425,548,651,653,714,716,820,843,848,889,],[115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,]),'stringExp':([31,49,76,85,95,146,154,160,184,185,188,199,201,213,335,422,423,425,548,651,653,714,716,820,843,848,889,],[118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,]),'allOpt':([44,45,46,],[120,122,123,]),'ifNotExists':([57,58,129,],[132,134,222,]),'likeOpt':([60,],[135,]),'idOrString':([61,62,69,80,132,142,144,150,222,261,346,347,370,507,619,],[137,141,151,151,224,237,239,246,341,151,478,480,501,151,151,]),'ifExists':([63,64,],[142,144,]),'optAlias':([69,80,261,507,619,],[149,161,382,618,718,]),'whereCl':([71,159,243,250,252,855,],[153,251,367,372,375,872,]),'tableExp':([72,],[155,]),'optBoolPredicate':([84,191,200,248,302,303,315,774,775,],[186,186,186,186,186,186,186,186,186,]),'caseList':([88,],[197,]),'caseWhen':([88,197,],[198,313,]),'alterDb':([137,],[228,]),'alterTableList':([141,],[232,]),'alterTable':([141,350,],[233,484,]),'paramsColumn':([145,],[240,]),'updateCols':([148,],[243,]),'updateVals':([148,368,],[244,497,]),'joinList':([159,],[252,]),'joinList2':([159,],[253,]),'joinCl':([159,253,],[254,376,]),'joinOpt':([159,253,256,],[255,255,378,]),'paramsList':([163,494,598,],[264,607,687,]),'subqValues':([173,174,175,176,178,181,182,183,293,294,295,296,395,396,397,398,519,529,621,628,638,],[278,283,285,287,290,299,300,301,399,400,401,402,521,522,523,524,627,637,719,721,731,]),'optElse':([197,],[312,]),'optsExtract':([207,],[321,]),'executeParams':([213,],[331,]),'executeItem':([213,422,],[333,543,]),'params_list':([220,340,],[337,463,]),'param_item':([220,340,460,],[339,339,581,]),'alterAlter':([231,],[348,]),'alterAdd':([234,],[351,]),'createConstraint':([234,343,595,],[353,471,471,]),'createPrimary':([234,343,595,],[354,473,473,]),'createForeign':([234,343,595,],[355,474,474,]),'constrName':([234,343,595,596,673,],[356,475,475,683,683,]),'alterDrop':([235,],[359,]),'alterRename':([236,],[362,]),'idList':([241,597,605,667,701,874,],[365,686,702,742,762,885,]),'groupByCl':([251,372,375,],[373,502,506,]),'List_body':([335,548,820,],[425,651,843,]),'body':([335,425,548,651,820,843,],[426,547,426,547,426,547,]),'types':([336,462,470,485,600,850,],[441,583,596,601,690,867,]),'returnsStmt':([338,459,],[461,580,]),'createOwner':([341,],[465,]),'createTableList':([343,],[468,]),'createTable':([343,595,],[469,671,]),'createUnique':([343,595,],[472,472,]),'ownerOPts':([347,],[479,]),'updateExp':([369,],[498,]),'orderByCl':([373,502,506,],[503,609,616,]),'dateSource':([419,],[537,]),'else_':([425,],[546,]),'Lista_elsif_':([425,],[549,]),'elsif_':([425,549,],[550,652,]),'optParams':([453,454,455,456,457,571,],[566,568,569,570,572,657,]),'intervalFields':([458,],[573,]),'languageProcedure':([464,584,],[585,660,]),'createMode':([465,],[587,]),'using_hash_index':([467,],[592,]),'limitCl':([503,506,609,616,],[610,617,705,715,]),'groupList':([505,],[613,]),'literalList':([567,],[655,]),'inheritsOpt':([594,],[669,]),'createColumns':([596,],[672,]),'colOptionsList':([596,],[673,]),'colOptions':([596,673,],[674,744,]),'defaultVal':([596,599,673,],[675,689,675,]),'nullOpt':([596,599,673,],[676,688,676,]),'constraintOpt':([596,673,],[677,677,]),'primaryOpt':([596,673,],[678,678,]),'referencesOpt':([596,673,],[679,679,]),'booleanCheck':([603,798,],[692,832,]),'idOrLiteral':([603,755,756,757,758,759,760,798,833,860,],[693,799,800,801,802,803,804,693,859,873,]),'orderList':([612,],[708,]),'orderByElem':([612,767,],[709,809,]),'havingCl':([613,],[712,]),'offsetLimit':([706,707,],[764,766,]),'orderOpts':([710,711,],[768,771,]),'bloqueFunction':([738,788,],[789,821,]),'declareStmt':([738,788,],[790,790,]),'indexasc_desc':([742,],[794,]),'orderNull':([768,771,],[810,812,]),'nameList':([776,],[814,]),'declaracion_list':([791,],[823,]),'declaracion_item':([791,823,],[824,849,]),'beginWord':([793,826,],[827,853,]),'indexNullS':([794,],[829,]),'beginStmt':([822,827,853,],[844,854,869,]),'beginItem':([822,827,844,853,854,869,],[845,845,864,845,864,864,]),'returnStmt':([822,827,844,853,854,869,],[847,847,847,847,847,847,]),'constant_opt':([825,],[850,]),'endProcedure':([854,869,],[870,881,]),'null_opt':([867,],[876,]),'alias_declaracion':([868,],[879,]),'dolarEndProcedure':([870,881,],[883,895,]),'labelEnd':([875,],[886,]),'default_item':([876,],[888,]),'default_opt':([876,],[889,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> init","S'",1,None,None,None),
  ('init -> stmtList','init',1,'p_init','grammar.py',54),
  ('stmtList -> stmtList stmt','stmtList',2,'p_stmt_list','grammar.py',62),
  ('stmtList -> stmt','stmtList',1,'p_stmt_u','grammar.py',69),
  ('stmt -> createStmt S_PUNTOCOMA','stmt',2,'p_stmt','grammar.py',76),
  ('stmt -> showStmt S_PUNTOCOMA','stmt',2,'p_stmt','grammar.py',77),
  ('stmt -> alterStmt S_PUNTOCOMA','stmt',2,'p_stmt','grammar.py',78),
  ('stmt -> dropStmt S_PUNTOCOMA','stmt',2,'p_stmt','grammar.py',79),
  ('stmt -> insertStmt S_PUNTOCOMA','stmt',2,'p_stmt','grammar.py',80),
  ('stmt -> updateStmt S_PUNTOCOMA','stmt',2,'p_stmt','grammar.py',81),
  ('stmt -> deleteStmt S_PUNTOCOMA','stmt',2,'p_stmt','grammar.py',82),
  ('stmt -> truncateStmt S_PUNTOCOMA','stmt',2,'p_stmt','grammar.py',83),
  ('stmt -> useStmt S_PUNTOCOMA','stmt',2,'p_stmt','grammar.py',84),
  ('stmt -> selectStmt S_PUNTOCOMA','stmt',2,'p_stmt','grammar.py',85),
  ('stmt -> functionStmt','stmt',1,'p_stmt','grammar.py',86),
  ('stmt -> procedureStmt','stmt',1,'p_stmt','grammar.py',87),
  ('stmt -> executePL S_PUNTOCOMA','stmt',2,'p_stmt','grammar.py',88),
  ('stmt -> ifStmt R_END R_IF S_PUNTOCOMA','stmt',4,'p_stmt','grammar.py',89),
  ('stmt -> asignacionStmt S_PUNTOCOMA','stmt',2,'p_stmt','grammar.py',90),
  ('ifStmt -> R_IF S_PARIZQ expresion S_PARDER R_THEN List_body else_','ifStmt',7,'p_ifStmt','grammar.py',102),
  ('else_ -> R_ELSE List_body','else_',2,'p_els_','grammar.py',109),
  ('else_ -> Lista_elsif_','else_',1,'p_els_','grammar.py',110),
  ('else_ -> <empty>','else_',0,'p_els_','grammar.py',111),
  ('Lista_elsif_ -> Lista_elsif_ elsif_','Lista_elsif_',2,'p_Lista_elsif_','grammar.py',126),
  ('Lista_elsif_ -> elsif_','Lista_elsif_',1,'p_aux_Lista_elsif_','grammar.py',134),
  ('elsif_ -> R_ELSIF S_PARIZQ expresion S_PARDER R_THEN List_body','elsif_',6,'p_elsif_','grammar.py',140),
  ('List_body -> List_body body','List_body',2,'p_lista_cuerpo','grammar.py',155),
  ('List_body -> body','List_body',1,'p_aux_lista_cuerpo','grammar.py',163),
  ('body -> createStmt S_PUNTOCOMA','body',2,'p_body','grammar.py',170),
  ('body -> showStmt S_PUNTOCOMA','body',2,'p_body','grammar.py',171),
  ('body -> alterStmt S_PUNTOCOMA','body',2,'p_body','grammar.py',172),
  ('body -> dropStmt S_PUNTOCOMA','body',2,'p_body','grammar.py',173),
  ('body -> insertStmt S_PUNTOCOMA','body',2,'p_body','grammar.py',174),
  ('body -> updateStmt S_PUNTOCOMA','body',2,'p_body','grammar.py',175),
  ('body -> deleteStmt S_PUNTOCOMA','body',2,'p_body','grammar.py',176),
  ('body -> truncateStmt S_PUNTOCOMA','body',2,'p_body','grammar.py',177),
  ('body -> useStmt S_PUNTOCOMA','body',2,'p_body','grammar.py',178),
  ('body -> selectStmt S_PUNTOCOMA','body',2,'p_body','grammar.py',179),
  ('body -> functionStmt S_PUNTOCOMA','body',2,'p_body','grammar.py',180),
  ('body -> ifStmt R_END R_IF S_PUNTOCOMA','body',4,'p_body','grammar.py',181),
  ('body -> expresion S_PUNTOCOMA','body',2,'p_body','grammar.py',182),
  ('idOrString -> ID','idOrString',1,'p_id_string','grammar.py',196),
  ('idOrString -> STRING','idOrString',1,'p_id_string','grammar.py',197),
  ('idOrString -> CHARACTER','idOrString',1,'p_id_string','grammar.py',198),
  ('createStmt -> R_CREATE createBody','createStmt',2,'p_createstmt','grammar.py',205),
  ('createBody -> createOpts','createBody',1,'p_createbody','grammar.py',212),
  ('createOpts -> unique_index R_INDEX ID R_ON ID using_hash_index S_PARIZQ idList indexasc_desc indexNullS S_PARDER whereCl','createOpts',12,'p_createopts_index','grammar.py',219),
  ('unique_index -> R_UNIQUE','unique_index',1,'p_unique_index','grammar.py',225),
  ('unique_index -> <empty>','unique_index',0,'p_unique_index','grammar.py',226),
  ('using_hash_index -> R_USING R_HASH','using_hash_index',2,'p_using_hash_index','grammar.py',236),
  ('using_hash_index -> <empty>','using_hash_index',0,'p_using_hash_index','grammar.py',237),
  ('indexNullS -> R_NULLS R_FIRST','indexNullS',2,'p_orderNullS','grammar.py',247),
  ('indexNullS -> R_NULLS R_LAST','indexNullS',2,'p_orderNullS','grammar.py',248),
  ('indexNullS -> <empty>','indexNullS',0,'p_orderNullS','grammar.py',249),
  ('indexasc_desc -> R_DESC','indexasc_desc',1,'p_indexasc_desc','grammar.py',261),
  ('indexasc_desc -> R_ASC','indexasc_desc',1,'p_indexasc_desc','grammar.py',262),
  ('indexasc_desc -> <empty>','indexasc_desc',0,'p_indexasc_desc','grammar.py',263),
  ('createOpts -> R_TABLE ifNotExists idOrString S_PARIZQ createTableList S_PARDER inheritsOpt','createOpts',7,'p_createopts_table','grammar.py',276),
  ('createOpts -> orReplace R_DATABASE ifNotExists idOrString createOwner createMode','createOpts',6,'p_createopts_db','grammar.py',283),
  ('orReplace -> R_OR R_REPLACE','orReplace',2,'p_replace_true','grammar.py',291),
  ('orReplace -> <empty>','orReplace',0,'p_replace_false','grammar.py',299),
  ('createOpts -> R_TYPE ifNotExists ID R_AS R_ENUM S_PARIZQ paramsList S_PARDER','createOpts',8,'p_createopts_type','grammar.py',307),
  ('ifNotExists -> R_IF R_NOT R_EXISTS','ifNotExists',3,'p_ifnotexists_true','grammar.py',315),
  ('ifNotExists -> <empty>','ifNotExists',0,'p_ifnotexists_false','grammar.py',323),
  ('inheritsOpt -> R_INHERITS S_PARIZQ ID S_PARDER','inheritsOpt',4,'p_inheritsOpt','grammar.py',331),
  ('inheritsOpt -> <empty>','inheritsOpt',0,'p_inheritsOpt_none','grammar.py',339),
  ('createOwner -> R_OWNER ID','createOwner',2,'p_createowner','grammar.py',347),
  ('createOwner -> R_OWNER STRING','createOwner',2,'p_createowner','grammar.py',348),
  ('createOwner -> R_OWNER S_IGUAL ID','createOwner',3,'p_createowner_asg','grammar.py',356),
  ('createOwner -> R_OWNER S_IGUAL STRING','createOwner',3,'p_createowner_asg','grammar.py',357),
  ('createOwner -> <empty>','createOwner',0,'p_createowner_none','grammar.py',365),
  ('createMode -> R_MODE INTEGER','createMode',2,'p_createmode','grammar.py',373),
  ('createMode -> R_MODE S_IGUAL INTEGER','createMode',3,'p_createMode_asg','grammar.py',381),
  ('createMode -> <empty>','createMode',0,'p_createmode_none','grammar.py',389),
  ('createTableList -> createTableList S_COMA createTable','createTableList',3,'p_createtable_list','grammar.py',396),
  ('createTableList -> createTable','createTableList',1,'p_createtable_u','grammar.py',403),
  ('createTable -> ID types createColumns','createTable',3,'p_createTable_id','grammar.py',410),
  ('createTable -> createConstraint','createTable',1,'p_createTable','grammar.py',418),
  ('createTable -> createUnique','createTable',1,'p_createTable','grammar.py',419),
  ('createTable -> createPrimary','createTable',1,'p_createTable','grammar.py',420),
  ('createTable -> createForeign','createTable',1,'p_createTable','grammar.py',421),
  ('createColumns -> colOptionsList','createColumns',1,'p_createColumNs','grammar.py',429),
  ('createColumns -> <empty>','createColumns',0,'p_createColumNs_none','grammar.py',437),
  ('createConstraint -> constrName R_CHECK S_PARIZQ booleanCheck S_PARDER','createConstraint',5,'p_createConstraint','grammar.py',444),
  ('createUnique -> R_UNIQUE S_PARIZQ idList S_PARDER','createUnique',4,'p_createUnique','grammar.py',450),
  ('createPrimary -> R_PRIMARY R_KEY S_PARIZQ idList S_PARDER','createPrimary',5,'p_createPrimary','grammar.py',456),
  ('createForeign -> constrName R_FOREIGN R_KEY S_PARIZQ idList S_PARDER R_REFERENCES ID S_PARIZQ idList S_PARDER','createForeign',11,'p_createForeign','grammar.py',463),
  ('constrName -> R_CONSTRAINT ID','constrName',2,'p_constrName','grammar.py',471),
  ('constrName -> <empty>','constrName',0,'p_constrName_none','grammar.py',479),
  ('idList -> idList S_COMA ID','idList',3,'p_id_list','grammar.py',486),
  ('idList -> ID','idList',1,'p_id_u','grammar.py',493),
  ('types -> ID','types',1,'p_types','grammar.py',500),
  ('types -> T_SMALLINT','types',1,'p_types_simple','grammar.py',508),
  ('types -> T_INTEGER','types',1,'p_types_simple','grammar.py',509),
  ('types -> T_BIGINT','types',1,'p_types_simple','grammar.py',510),
  ('types -> T_REAL','types',1,'p_types_simple','grammar.py',511),
  ('types -> T_DOUBLE T_PRECISION','types',2,'p_types_simple','grammar.py',512),
  ('types -> T_MONEY','types',1,'p_types_simple','grammar.py',513),
  ('types -> T_TEXT','types',1,'p_types_simple','grammar.py',514),
  ('types -> T_BOOLEAN','types',1,'p_types_simple','grammar.py',515),
  ('types -> R_TIMESTAMP','types',1,'p_types_simple','grammar.py',516),
  ('types -> T_DATE','types',1,'p_types_simple','grammar.py',517),
  ('types -> T_TIME','types',1,'p_types_simple','grammar.py',518),
  ('types -> T_DECIMAL optParams','types',2,'p_types_params','grammar.py',527),
  ('types -> T_NUMERIC optParams','types',2,'p_types_params','grammar.py',528),
  ('types -> T_VARCHAR optParams','types',2,'p_types_params','grammar.py',529),
  ('types -> T_CHARACTER optParams','types',2,'p_types_params','grammar.py',530),
  ('types -> T_CHAR optParams','types',2,'p_types_params','grammar.py',531),
  ('types -> T_CHARACTER T_VARYING optParams','types',3,'p_types_var','grammar.py',540),
  ('types -> R_INTERVAL intervalFields','types',2,'p_timeType_interval','grammar.py',548),
  ('intervalFields -> R_YEAR','intervalFields',1,'p_intervalFields','grammar.py',556),
  ('intervalFields -> R_MONTH','intervalFields',1,'p_intervalFields','grammar.py',557),
  ('intervalFields -> R_DAY','intervalFields',1,'p_intervalFields','grammar.py',558),
  ('intervalFields -> R_HOUR','intervalFields',1,'p_intervalFields','grammar.py',559),
  ('intervalFields -> R_MINUTE','intervalFields',1,'p_intervalFields','grammar.py',560),
  ('intervalFields -> R_SECOND','intervalFields',1,'p_intervalFields','grammar.py',561),
  ('intervalFields -> <empty>','intervalFields',0,'p_intervalFields_none','grammar.py',569),
  ('optParams -> S_PARIZQ literalList S_PARDER','optParams',3,'p_optParams','grammar.py',576),
  ('optParams -> <empty>','optParams',0,'p_optParams_none','grammar.py',582),
  ('colOptionsList -> colOptionsList colOptions','colOptionsList',2,'p_colOptions_list','grammar.py',588),
  ('colOptionsList -> colOptions','colOptionsList',1,'p_colOptions_u','grammar.py',595),
  ('colOptions -> defaultVal','colOptions',1,'p_colOptions','grammar.py',602),
  ('colOptions -> nullOpt','colOptions',1,'p_colOptions','grammar.py',603),
  ('colOptions -> constraintOpt','colOptions',1,'p_colOptions','grammar.py',604),
  ('colOptions -> primaryOpt','colOptions',1,'p_colOptions','grammar.py',605),
  ('colOptions -> referencesOpt','colOptions',1,'p_colOptions','grammar.py',606),
  ('defaultVal -> R_DEFAULT literal','defaultVal',2,'p_defaultVal','grammar.py',614),
  ('nullOpt -> R_NOT R_NULL','nullOpt',2,'p_nullOpt_true','grammar.py',621),
  ('nullOpt -> R_NULL','nullOpt',1,'p_nullOpt_false','grammar.py',629),
  ('constraintOpt -> constrName R_UNIQUE','constraintOpt',2,'p_constraintOpt_unique','grammar.py',640),
  ('constraintOpt -> constrName R_CHECK S_PARIZQ booleanCheck S_PARDER','constraintOpt',5,'p_constraintOpt_check','grammar.py',648),
  ('primaryOpt -> R_PRIMARY R_KEY','primaryOpt',2,'p_primaryOpt','grammar.py',655),
  ('referencesOpt -> R_REFERENCES ID','referencesOpt',2,'p_referencesOpt','grammar.py',661),
  ('expresion -> datatype','expresion',1,'p_expresion','grammar.py',672),
  ('expresion -> expBool','expresion',1,'p_expresion','grammar.py',673),
  ('expresion -> S_PARIZQ selectStmt S_PARDER','expresion',3,'p_expresion_','grammar.py',681),
  ('funcCall -> ID S_PARIZQ paramsList S_PARDER','funcCall',4,'p_funcCall_1','grammar.py',689),
  ('funcCall -> ID S_PARIZQ S_PARDER','funcCall',3,'p_funcCall_2','grammar.py',697),
  ('funcCall -> R_NOW S_PARIZQ S_PARDER','funcCall',3,'p_funcCall_2','grammar.py',698),
  ('funcCall -> R_COUNT S_PARIZQ datatype S_PARDER','funcCall',4,'p_funcCall_3','grammar.py',706),
  ('funcCall -> R_COUNT S_PARIZQ O_PRODUCTO S_PARDER','funcCall',4,'p_funcCall_3','grammar.py',707),
  ('funcCall -> R_SUM S_PARIZQ datatype S_PARDER','funcCall',4,'p_funcCall_3','grammar.py',708),
  ('funcCall -> R_PROM S_PARIZQ datatype S_PARDER','funcCall',4,'p_funcCall_3','grammar.py',709),
  ('extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM timeStamp S_PARDER','extract',6,'p_extract_1','grammar.py',719),
  ('extract -> R_EXTRACT S_PARIZQ optsExtract R_FROM columnName S_PARDER','extract',6,'p_extract_2','grammar.py',730),
  ('timeStamp -> R_TIMESTAMP STRING','timeStamp',2,'p_timeStamp','grammar.py',740),
  ('timeStamp -> R_INTERVAL STRING','timeStamp',2,'p_timeStamp','grammar.py',741),
  ('optsExtract -> R_YEAR','optsExtract',1,'p_optsExtract','grammar.py',749),
  ('optsExtract -> R_MONTH','optsExtract',1,'p_optsExtract','grammar.py',750),
  ('optsExtract -> R_DAY','optsExtract',1,'p_optsExtract','grammar.py',751),
  ('optsExtract -> R_HOUR','optsExtract',1,'p_optsExtract','grammar.py',752),
  ('optsExtract -> R_MINUTE','optsExtract',1,'p_optsExtract','grammar.py',753),
  ('optsExtract -> R_SECOND','optsExtract',1,'p_optsExtract','grammar.py',754),
  ('datePart -> R_DATE_PART S_PARIZQ STRING S_COMA dateSource S_PARDER','datePart',6,'p_datePart','grammar.py',762),
  ('dateSource -> R_TIMESTAMP STRING','dateSource',2,'p_dateSource','grammar.py',772),
  ('dateSource -> T_DATE STRING','dateSource',2,'p_dateSource','grammar.py',773),
  ('dateSource -> T_TIME STRING','dateSource',2,'p_dateSource','grammar.py',774),
  ('dateSource -> R_INTERVAL STRING','dateSource',2,'p_dateSource','grammar.py',775),
  ('dateSource -> R_NOW S_PARIZQ S_PARDER','dateSource',3,'p_dateSource','grammar.py',776),
  ('current -> R_CURRENT_DATE','current',1,'p_current','grammar.py',784),
  ('current -> R_CURRENT_TIME','current',1,'p_current','grammar.py',785),
  ('current -> timeStamp','current',1,'p_current_1','grammar.py',794),
  ('literalList -> literalList S_COMA literal','literalList',3,'p_literal_list','grammar.py',801),
  ('literalList -> literal','literalList',1,'p_literal_u','grammar.py',808),
  ('literal -> INTEGER','literal',1,'p_literal','grammar.py',815),
  ('literal -> STRING','literal',1,'p_literal','grammar.py',816),
  ('literal -> DECIMAL','literal',1,'p_literal','grammar.py',817),
  ('literal -> CHARACTER','literal',1,'p_literal','grammar.py',818),
  ('literal -> R_TRUE','literal',1,'p_literal','grammar.py',819),
  ('literal -> R_FALSE','literal',1,'p_literal','grammar.py',820),
  ('literal -> R_NULL','literal',1,'p_literal','grammar.py',821),
  ('paramsList -> paramsList S_COMA datatype','paramsList',3,'p_params_list','grammar.py',840),
  ('paramsList -> datatype','paramsList',1,'p_params_u','grammar.py',847),
  ('datatype -> datatype O_SUMA datatype','datatype',3,'p_datatype_operadores_binarios1','grammar.py',854),
  ('datatype -> datatype O_RESTA datatype','datatype',3,'p_datatype_operadores_binarios1','grammar.py',855),
  ('datatype -> datatype O_PRODUCTO datatype','datatype',3,'p_datatype_operadores_binarios1','grammar.py',856),
  ('datatype -> datatype O_DIVISION datatype','datatype',3,'p_datatype_operadores_binarios1','grammar.py',857),
  ('datatype -> datatype O_EXPONENTE datatype','datatype',3,'p_datatype_operadores_binarios1','grammar.py',858),
  ('datatype -> datatype O_MODULAR datatype','datatype',3,'p_datatype_operadores_binarios1','grammar.py',859),
  ('datatype -> datatype OC_CONCATENAR datatype','datatype',3,'p_datatype_operadores_binarios2','grammar.py',868),
  ('datatype -> R_CASE caseList optElse R_END','datatype',4,'p_datatype_case_when','grammar.py',876),
  ('caseList -> caseList caseWhen','caseList',2,'p_case_list','grammar.py',882),
  ('caseList -> caseWhen','caseList',1,'p_case_list','grammar.py',883),
  ('caseWhen -> R_WHEN expBool R_THEN literal','caseWhen',4,'p_caseWhen','grammar.py',888),
  ('optElse -> R_ELSE literal','optElse',2,'p_caseWhen_2','grammar.py',892),
  ('optElse -> <empty>','optElse',0,'p_caseWhen_2','grammar.py',893),
  ('datatype -> O_RESTA datatype','datatype',2,'p_datatype_operadores_unarios','grammar.py',899),
  ('datatype -> O_SUMA datatype','datatype',2,'p_datatype_operadores_unarios','grammar.py',900),
  ('datatype -> columnName','datatype',1,'p_datatype_operandos','grammar.py',908),
  ('datatype -> literal','datatype',1,'p_datatype_operandos','grammar.py',909),
  ('datatype -> funcCall','datatype',1,'p_datatype_operandos','grammar.py',910),
  ('datatype -> extract','datatype',1,'p_datatype_operandos','grammar.py',911),
  ('datatype -> datePart','datatype',1,'p_datatype_operandos','grammar.py',912),
  ('datatype -> current','datatype',1,'p_datatype_operandos','grammar.py',913),
  ('datatype -> S_PARIZQ datatype S_PARDER','datatype',3,'p_datatype_agrupacion','grammar.py',921),
  ('expComp -> datatype OL_MENORQUE datatype','expComp',3,'p_expCompBinario_1','grammar.py',929),
  ('expComp -> datatype OL_MAYORQUE datatype','expComp',3,'p_expCompBinario_1','grammar.py',930),
  ('expComp -> datatype OL_MAYORIGUALQUE datatype','expComp',3,'p_expCompBinario_1','grammar.py',931),
  ('expComp -> datatype OL_MENORIGUALQUE datatype','expComp',3,'p_expCompBinario_1','grammar.py',932),
  ('expComp -> datatype S_IGUAL datatype','expComp',3,'p_expCompBinario_1','grammar.py',933),
  ('expComp -> datatype OL_DISTINTODE datatype','expComp',3,'p_expCompBinario_1','grammar.py',934),
  ('expComp -> datatype R_IS R_DISTINCT R_FROM datatype','expComp',5,'p_expCompBinario_2','grammar.py',942),
  ('expComp -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype','expComp',6,'p_expCompBinario_3','grammar.py',952),
  ('expComp -> datatype R_BETWEEN datatype R_AND datatype','expComp',5,'p_expComp_ternario_1','grammar.py',962),
  ('expComp -> datatype R_NOT R_BETWEEN datatype R_AND datatype','expComp',6,'p_expComp_ternario_2','grammar.py',972),
  ('expComp -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype','expComp',6,'p_expComp_ternario_2','grammar.py',973),
  ('expComp -> datatype R_ISNULL','expComp',2,'p_expComp_unario_1','grammar.py',984),
  ('expComp -> datatype R_NOTNULL','expComp',2,'p_expComp_unario_1','grammar.py',985),
  ('expComp -> datatype R_IS R_NULL','expComp',3,'p_expComp_unario_2','grammar.py',994),
  ('expComp -> datatype R_IS R_TRUE','expComp',3,'p_expComp_unario_2','grammar.py',995),
  ('expComp -> datatype R_IS R_FALSE','expComp',3,'p_expComp_unario_2','grammar.py',996),
  ('expComp -> datatype R_IS R_UNKNOWN','expComp',3,'p_expComp_unario_2','grammar.py',997),
  ('expComp -> datatype R_IS R_NOT R_NULL','expComp',4,'p_expComp_unario_3','grammar.py',1005),
  ('expComp -> datatype R_IS R_NOT R_TRUE','expComp',4,'p_expComp_unario_3','grammar.py',1006),
  ('expComp -> datatype R_IS R_NOT R_FALSE','expComp',4,'p_expComp_unario_3','grammar.py',1007),
  ('expComp -> datatype R_IS R_NOT R_UNKNOWN','expComp',4,'p_expComp_unario_3','grammar.py',1008),
  ('expSubq -> datatype OL_MENORQUE subqValues S_PARIZQ selectStmt S_PARDER','expSubq',6,'p_expSubq','grammar.py',1018),
  ('expSubq -> datatype OL_MAYORQUE subqValues S_PARIZQ selectStmt S_PARDER','expSubq',6,'p_expSubq','grammar.py',1019),
  ('expSubq -> datatype OL_MAYORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER','expSubq',6,'p_expSubq','grammar.py',1020),
  ('expSubq -> datatype OL_MENORIGUALQUE subqValues S_PARIZQ selectStmt S_PARDER','expSubq',6,'p_expSubq','grammar.py',1021),
  ('expSubq -> datatype OL_ESIGUAL subqValues S_PARIZQ selectStmt S_PARDER','expSubq',6,'p_expSubq','grammar.py',1022),
  ('expSubq -> datatype OL_DISTINTODE subqValues S_PARIZQ selectStmt S_PARDER','expSubq',6,'p_expSubq','grammar.py',1023),
  ('expSubq -> datatype R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER','expSubq',9,'p_expSubq','grammar.py',1024),
  ('expSubq -> datatype R_NOT R_BETWEEN datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER','expSubq',10,'p_expSubq','grammar.py',1025),
  ('expSubq -> datatype R_BETWEEN R_SYMMETRIC datatype R_AND datatype subqValues S_PARIZQ selectStmt S_PARDER','expSubq',10,'p_expSubq','grammar.py',1026),
  ('expSubq -> datatype R_IS R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER','expSubq',9,'p_expSubq','grammar.py',1027),
  ('expSubq -> datatype R_IS R_NOT R_DISTINCT R_FROM datatype subqValues S_PARIZQ selectStmt S_PARDER','expSubq',10,'p_expSubq','grammar.py',1028),
  ('expSubq -> datatype R_IS R_NULL subqValues S_PARIZQ selectStmt S_PARDER','expSubq',7,'p_expSubq','grammar.py',1029),
  ('expSubq -> datatype R_IS R_NOT R_NULL subqValues S_PARIZQ selectStmt S_PARDER','expSubq',8,'p_expSubq','grammar.py',1030),
  ('expSubq -> datatype R_ISNULL subqValues S_PARIZQ selectStmt S_PARDER','expSubq',6,'p_expSubq','grammar.py',1031),
  ('expSubq -> datatype R_NOTNULL subqValues S_PARIZQ selectStmt S_PARDER','expSubq',6,'p_expSubq','grammar.py',1032),
  ('expSubq -> datatype R_IS R_TRUE subqValues S_PARIZQ selectStmt S_PARDER','expSubq',7,'p_expSubq','grammar.py',1033),
  ('expSubq -> datatype R_IS R_NOT R_TRUE subqValues S_PARIZQ selectStmt S_PARDER','expSubq',8,'p_expSubq','grammar.py',1034),
  ('expSubq -> datatype R_IS R_FALSE subqValues S_PARIZQ selectStmt S_PARDER','expSubq',7,'p_expSubq','grammar.py',1035),
  ('expSubq -> datatype R_IS R_NOT R_FALSE subqValues S_PARIZQ selectStmt S_PARDER','expSubq',8,'p_expSubq','grammar.py',1036),
  ('expSubq -> datatype R_IS R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER','expSubq',7,'p_expSubq','grammar.py',1037),
  ('expSubq -> datatype R_IS R_NOT R_UNKNOWN subqValues S_PARIZQ selectStmt S_PARDER','expSubq',8,'p_expSubq','grammar.py',1038),
  ('expSubq -> stringExp R_LIKE STRING','expSubq',3,'p_expSubq','grammar.py',1039),
  ('stringExp -> STRING','stringExp',1,'p_stringExp','grammar.py',1046),
  ('stringExp -> columnName','stringExp',1,'p_stringExp','grammar.py',1047),
  ('subqValues -> R_ALL','subqValues',1,'p_subqValues','grammar.py',1054),
  ('subqValues -> R_ANY','subqValues',1,'p_subqValues','grammar.py',1055),
  ('subqValues -> R_SOME','subqValues',1,'p_subqValues','grammar.py',1056),
  ('boolean -> R_EXISTS S_PARIZQ selectStmt S_PARDER','boolean',4,'p_boolean_1','grammar.py',1063),
  ('boolean -> datatype R_IN S_PARIZQ selectStmt S_PARDER','boolean',5,'p_boolean_2','grammar.py',1073),
  ('boolean -> datatype R_NOT R_IN S_PARIZQ selectStmt S_PARDER','boolean',6,'p_boolean_3','grammar.py',1081),
  ('boolean -> expComp','boolean',1,'p_boolean_4','grammar.py',1089),
  ('boolean -> expSubq','boolean',1,'p_boolean_4','grammar.py',1090),
  ('expBool -> expBool R_AND expBool','expBool',3,'p_expBool_1','grammar.py',1098),
  ('expBool -> expBool R_OR expBool','expBool',3,'p_expBool_1','grammar.py',1099),
  ('expBool -> R_NOT expBool','expBool',2,'p_expBool_2','grammar.py',1107),
  ('expBool -> S_PARIZQ expBool S_PARDER','expBool',3,'p_expBool_3','grammar.py',1115),
  ('expBool -> expBool optBoolPredicate','expBool',2,'p_expBool_5','grammar.py',1123),
  ('expBool -> boolean','expBool',1,'p_expBool_4','grammar.py',1131),
  ('optBoolPredicate -> R_IS R_TRUE','optBoolPredicate',2,'p_optBoolPredicate_1','grammar.py',1139),
  ('optBoolPredicate -> R_IS R_FALSE','optBoolPredicate',2,'p_optBoolPredicate_1','grammar.py',1140),
  ('optBoolPredicate -> R_IS R_UNKNOWN','optBoolPredicate',2,'p_optBoolPredicate_1','grammar.py',1141),
  ('optBoolPredicate -> R_IS R_NOT R_TRUE','optBoolPredicate',3,'p_optBoolPredicate_2','grammar.py',1149),
  ('optBoolPredicate -> R_IS R_NOT R_FALSE','optBoolPredicate',3,'p_optBoolPredicate_2','grammar.py',1150),
  ('optBoolPredicate -> R_IS R_NOT R_UNKNOWN','optBoolPredicate',3,'p_optBoolPredicate_2','grammar.py',1151),
  ('columnName -> ID','columnName',1,'p_columnName_id','grammar.py',1159),
  ('columnName -> ID S_PUNTO ID','columnName',3,'p_columnName_table_id','grammar.py',1168),
  ('booleanCheck -> idOrLiteral OL_MENORQUE idOrLiteral','booleanCheck',3,'p_booleanCheck_1','grammar.py',1186),
  ('booleanCheck -> idOrLiteral OL_MAYORQUE idOrLiteral','booleanCheck',3,'p_booleanCheck_1','grammar.py',1187),
  ('booleanCheck -> idOrLiteral OL_MAYORIGUALQUE idOrLiteral','booleanCheck',3,'p_booleanCheck_1','grammar.py',1188),
  ('booleanCheck -> idOrLiteral OL_MENORIGUALQUE idOrLiteral','booleanCheck',3,'p_booleanCheck_1','grammar.py',1189),
  ('booleanCheck -> idOrLiteral S_IGUAL idOrLiteral','booleanCheck',3,'p_booleanCheck_1','grammar.py',1190),
  ('booleanCheck -> idOrLiteral OL_DISTINTODE idOrLiteral','booleanCheck',3,'p_booleanCheck_1','grammar.py',1191),
  ('booleanCheck -> idOrLiteral R_IS R_DISTINCT R_FROM idOrLiteral','booleanCheck',5,'p_booleanCheck_2','grammar.py',1201),
  ('booleanCheck -> idOrLiteral R_IS R_NOT R_DISTINCT R_FROM idOrLiteral','booleanCheck',6,'p_booleanCheck_3','grammar.py',1213),
  ('idOrLiteral -> ID','idOrLiteral',1,'p_idOrLiteral','grammar.py',1224),
  ('idOrLiteral -> INTEGER','idOrLiteral',1,'p_idOrLiteral','grammar.py',1225),
  ('idOrLiteral -> STRING','idOrLiteral',1,'p_idOrLiteral','grammar.py',1226),
  ('idOrLiteral -> DECIMAL','idOrLiteral',1,'p_idOrLiteral','grammar.py',1227),
  ('idOrLiteral -> CHARACTER','idOrLiteral',1,'p_idOrLiteral','grammar.py',1228),
  ('idOrLiteral -> R_TRUE','idOrLiteral',1,'p_idOrLiteral','grammar.py',1229),
  ('idOrLiteral -> R_FALSE','idOrLiteral',1,'p_idOrLiteral','grammar.py',1230),
  ('alterStmt -> R_ALTER R_DATABASE idOrString alterDb','alterStmt',4,'p_alterStmt','grammar.py',1259),
  ('alterStmt -> R_ALTER R_TABLE idOrString alterTableList','alterStmt',4,'p_alterStmt','grammar.py',1260),
  ('alterDb -> R_RENAME R_TO idOrString','alterDb',3,'p_alterDb','grammar.py',1270),
  ('alterDb -> R_OWNER R_TO ownerOPts','alterDb',3,'p_alterDb','grammar.py',1271),
  ('ownerOPts -> idOrString','ownerOPts',1,'p_ownerOpts','grammar.py',1280),
  ('ownerOPts -> R_CURRENT_USER','ownerOPts',1,'p_ownerOpts','grammar.py',1281),
  ('ownerOPts -> R_SESSION_USER','ownerOPts',1,'p_ownerOpts','grammar.py',1282),
  ('alterTableList -> alterTableList S_COMA alterTable','alterTableList',3,'p_alterTableList','grammar.py',1290),
  ('alterTableList -> alterTable','alterTableList',1,'p_alterTableList_u','grammar.py',1299),
  ('alterTable -> R_ADD alterAdd','alterTable',2,'p_alterTable','grammar.py',1307),
  ('alterTable -> R_ALTER alterAlter','alterTable',2,'p_alterTable','grammar.py',1308),
  ('alterTable -> R_DROP alterDrop','alterTable',2,'p_alterTable','grammar.py',1309),
  ('alterTable -> R_RENAME alterRename','alterTable',2,'p_alterTable','grammar.py',1310),
  ('alterAdd -> R_COLUMN ID types','alterAdd',3,'p_alterAdd_column','grammar.py',1318),
  ('alterAdd -> createConstraint','alterAdd',1,'p_alterAdd_constraint','grammar.py',1326),
  ('alterAdd -> createPrimary','alterAdd',1,'p_alterAdd_constraint','grammar.py',1327),
  ('alterAdd -> createForeign','alterAdd',1,'p_alterAdd_constraint','grammar.py',1328),
  ('alterAdd -> constrName R_UNIQUE S_PARIZQ ID S_PARDER','alterAdd',5,'p_alterAdd_unique','grammar.py',1336),
  ('alterAlter -> R_COLUMN ID R_SET nullOpt','alterAlter',4,'p_alterAlter','grammar.py',1344),
  ('alterAlter -> R_COLUMN ID R_SET defaultVal','alterAlter',4,'p_alterAlter','grammar.py',1345),
  ('alterAlter -> R_COLUMN ID R_TYPE types','alterAlter',4,'p_alterAlter','grammar.py',1346),
  ('alterDrop -> R_CONSTRAINT ID','alterDrop',2,'p_alterDrop','grammar.py',1354),
  ('alterDrop -> R_COLUMN ID','alterDrop',2,'p_alterDrop','grammar.py',1355),
  ('alterRename -> R_COLUMN ID R_TO ID','alterRename',4,'p_alterRename','grammar.py',1363),
  ('dropStmt -> R_DROP R_TABLE ifExists idOrString','dropStmt',4,'p_dropStmt','grammar.py',1377),
  ('dropStmt -> R_DROP R_DATABASE ifExists idOrString','dropStmt',4,'p_dropStmt','grammar.py',1378),
  ('ifExists -> R_IF R_EXISTS','ifExists',2,'p_ifExists','grammar.py',1388),
  ('ifExists -> <empty>','ifExists',0,'p_ifExists','grammar.py',1389),
  ('selectStmt -> R_SELECT R_DISTINCT selectParams fromCl whereCl groupByCl orderByCl limitCl','selectStmt',8,'p_selectStmt_1','grammar.py',1402),
  ('selectStmt -> R_SELECT selectParams fromCl whereCl groupByCl orderByCl limitCl','selectStmt',7,'p_selectStmt_2','grammar.py',1420),
  ('selectStmt -> R_SELECT selectParams fromCl joinList whereCl groupByCl orderByCl limitCl','selectStmt',8,'p_selectStmt__1','grammar.py',1437),
  ('selectStmt -> R_SELECT selectParams fromCl joinList whereCl groupByCl limitCl','selectStmt',7,'p_selectStmt__3','grammar.py',1442),
  ('selectStmt -> selectStmt R_UNION allOpt selectStmt','selectStmt',4,'p_selectStmt_union','grammar.py',1447),
  ('selectStmt -> selectStmt R_INTERSECT allOpt selectStmt','selectStmt',4,'p_selectStmt_intersect','grammar.py',1453),
  ('selectStmt -> selectStmt R_EXCEPT allOpt selectStmt','selectStmt',4,'p_selectStmt_except','grammar.py',1459),
  ('selectStmt -> S_PARIZQ selectStmt S_PARDER','selectStmt',3,'p_selectStmt_agrupacion','grammar.py',1465),
  ('fromCl -> R_FROM tableExp','fromCl',2,'p_fromClause','grammar.py',1472),
  ('selectStmt -> R_SELECT selectParams','selectStmt',2,'p_selectstmt_only_params','grammar.py',1484),
  ('allOpt -> R_ALL','allOpt',1,'p_allOpt','grammar.py',1493),
  ('allOpt -> <empty>','allOpt',0,'p_allOpt','grammar.py',1494),
  ('selectParams -> O_PRODUCTO','selectParams',1,'p_selectparams_all','grammar.py',1501),
  ('selectParams -> selectList','selectParams',1,'p_selectparams_params','grammar.py',1508),
  ('selectList -> selectList S_COMA selectListParams optAlias','selectList',4,'p_selectList_list','grammar.py',1516),
  ('selectList -> selectListParams optAlias','selectList',2,'p_selectList_u','grammar.py',1526),
  ('selectListParams -> expresion','selectListParams',1,'p_selectListParams_1','grammar.py',1535),
  ('selectListParams -> ID S_PUNTO O_PRODUCTO','selectListParams',3,'p_selectListParams_2','grammar.py',1542),
  ('optAlias -> R_AS idOrString','optAlias',2,'p_optalias_as','grammar.py',1549),
  ('optAlias -> idOrString','optAlias',1,'p_optalias_id','grammar.py',1557),
  ('optAlias -> <empty>','optAlias',0,'p_optalias_none','grammar.py',1564),
  ('tableExp -> tableExp S_COMA fromBody','tableExp',3,'p_tableexp_list','grammar.py',1570),
  ('tableExp -> fromBody','tableExp',1,'p_tableexp_u','grammar.py',1578),
  ('fromBody -> ID optAlias','fromBody',2,'p_fromBody','grammar.py',1584),
  ('fromBody -> S_PARIZQ selectStmt S_PARDER R_AS idOrString','fromBody',5,'p_tableexp_subq','grammar.py',1593),
  ('joinList -> joinList2','joinList',1,'p_joinList','grammar.py',1600),
  ('joinList2 -> joinList2 joinCl','joinList2',2,'p_joinList_2','grammar.py',1605),
  ('joinList2 -> joinCl','joinList2',1,'p_joinList_2','grammar.py',1606),
  ('joinCl -> joinOpt R_JOIN columnName optAlias R_ON expBool','joinCl',6,'p_joinCl','grammar.py',1611),
  ('joinCl -> joinOpt R_JOIN columnName optAlias R_USING S_PARIZQ nameList S_PARDER','joinCl',8,'p_joinCl','grammar.py',1612),
  ('joinCl -> R_NATURAL joinOpt R_JOIN columnName optAlias','joinCl',5,'p_joinCl','grammar.py',1613),
  ('nameList -> nameList S_COMA columnName','nameList',3,'p_nameList','grammar.py',1620),
  ('nameList -> columnName','nameList',1,'p_nameList','grammar.py',1621),
  ('joinOpt -> R_INNER','joinOpt',1,'p_joinOpt','grammar.py',1627),
  ('joinOpt -> R_LEFT','joinOpt',1,'p_joinOpt','grammar.py',1628),
  ('joinOpt -> R_LEFT R_OUTER','joinOpt',2,'p_joinOpt','grammar.py',1629),
  ('joinOpt -> R_RIGHT','joinOpt',1,'p_joinOpt','grammar.py',1630),
  ('joinOpt -> R_RIGHT R_OUTER','joinOpt',2,'p_joinOpt','grammar.py',1631),
  ('joinOpt -> R_FULL','joinOpt',1,'p_joinOpt','grammar.py',1632),
  ('joinOpt -> R_FULL R_OUTER','joinOpt',2,'p_joinOpt','grammar.py',1633),
  ('whereCl -> R_WHERE expBool','whereCl',2,'p_whereCl','grammar.py',1640),
  ('whereCl -> <empty>','whereCl',0,'p_whereCl_none','grammar.py',1649),
  ('groupByCl -> R_GROUP R_BY groupList havingCl','groupByCl',4,'p_groupByCl_1','grammar.py',1659),
  ('groupByCl -> <empty>','groupByCl',0,'p_groupByCl_2','grammar.py',1667),
  ('groupList -> groupList S_COMA columnName','groupList',3,'p_groupList_1','grammar.py',1675),
  ('groupList -> groupList S_COMA INTEGER','groupList',3,'p_groupList_1','grammar.py',1676),
  ('groupList -> columnName','groupList',1,'p_groupList_2','grammar.py',1685),
  ('groupList -> INTEGER','groupList',1,'p_groupList_2','grammar.py',1686),
  ('havingCl -> R_HAVING expBool','havingCl',2,'p_havingCl_1','grammar.py',1696),
  ('havingCl -> <empty>','havingCl',0,'p_havingCl_2','grammar.py',1702),
  ('orderByCl -> R_ORDER R_BY orderList','orderByCl',3,'p_orderByCl','grammar.py',1711),
  ('orderByCl -> <empty>','orderByCl',0,'p_orderByCl2','grammar.py',1717),
  ('orderList -> orderList S_COMA orderByElem','orderList',3,'p_orderList','grammar.py',1723),
  ('orderList -> orderByElem','orderList',1,'p_orderList2','grammar.py',1730),
  ('orderByElem -> columnName orderOpts orderNull','orderByElem',3,'p_orderByElem','grammar.py',1737),
  ('orderByElem -> INTEGER orderOpts orderNull','orderByElem',3,'p_orderByElem','grammar.py',1738),
  ('orderOpts -> R_ASC','orderOpts',1,'p_orderOpts','grammar.py',1745),
  ('orderOpts -> R_DESC','orderOpts',1,'p_orderOpts','grammar.py',1746),
  ('orderOpts -> <empty>','orderOpts',0,'p_orderOpts2','grammar.py',1752),
  ('orderNull -> R_NULL R_FIRST','orderNull',2,'p_orderNull','grammar.py',1757),
  ('orderNull -> R_NULL R_LAST','orderNull',2,'p_orderNull','grammar.py',1758),
  ('orderNull -> <empty>','orderNull',0,'p_ordenNull2','grammar.py',1763),
  ('limitCl -> R_LIMIT INTEGER offsetLimit','limitCl',3,'p_limitCl','grammar.py',1772),
  ('limitCl -> R_LIMIT R_ALL offsetLimit','limitCl',3,'p_limitCl','grammar.py',1773),
  ('limitCl -> <empty>','limitCl',0,'p_limitCl_n','grammar.py',1780),
  ('offsetLimit -> R_OFFSET INTEGER','offsetLimit',2,'p_offsetLimit','grammar.py',1786),
  ('offsetLimit -> <empty>','offsetLimit',0,'p_offsetLimit_n','grammar.py',1792),
  ('insertStmt -> R_INSERT R_INTO ID paramsColumn R_VALUES S_PARIZQ paramsList S_PARDER','insertStmt',8,'p_insertStmt','grammar.py',1805),
  ('paramsColumn -> S_PARIZQ idList S_PARDER','paramsColumn',3,'p_paramsColumn','grammar.py',1812),
  ('paramsColumn -> <empty>','paramsColumn',0,'p_paramsColumn_none','grammar.py',1818),
  ('updateStmt -> R_UPDATE fromBody R_SET updateCols whereCl','updateStmt',5,'p_updateStmt','grammar.py',1831),
  ('updateCols -> updateCols S_COMA updateVals','updateCols',3,'p_updateCols_list','grammar.py',1841),
  ('updateCols -> updateVals','updateCols',1,'p_updateCols_u','grammar.py',1848),
  ('updateVals -> ID S_IGUAL updateExp','updateVals',3,'p_updateVals','grammar.py',1854),
  ('updateExp -> datatype','updateExp',1,'p_updateExp','grammar.py',1861),
  ('updateExp -> R_DEFAULT','updateExp',1,'p_updateExp','grammar.py',1862),
  ('deleteStmt -> R_DELETE fromCl whereCl','deleteStmt',3,'p_deleteStmt','grammar.py',1875),
  ('truncateStmt -> R_TRUNCATE tableOpt ID','truncateStmt',3,'p_truncateStmt','grammar.py',1881),
  ('tableOpt -> R_TABLE','tableOpt',1,'p_tableOpt','grammar.py',1887),
  ('tableOpt -> <empty>','tableOpt',0,'p_tableOpt','grammar.py',1888),
  ('showStmt -> R_SHOW R_DATABASES likeOpt','showStmt',3,'p_showStmt','grammar.py',1894),
  ('likeOpt -> R_LIKE STRING','likeOpt',2,'p_likeOpt','grammar.py',1901),
  ('likeOpt -> <empty>','likeOpt',0,'p_likeOpt','grammar.py',1902),
  ('useStmt -> R_USE ID','useStmt',2,'p_useStmt','grammar.py',1912),
  ('functionStmt -> R_CREATE R_FUNCTION ID S_PARIZQ params_list S_PARDER returnsStmt R_AS S_DOLAR S_DOLAR bloqueFunction','functionStmt',11,'p_functionStmt','grammar.py',1924),
  ('functionStmt -> R_CREATE R_FUNCTION ID S_PARIZQ S_PARDER returnsStmt R_AS S_DOLAR S_DOLAR bloqueFunction','functionStmt',10,'p_functionStmt2','grammar.py',1929),
  ('bloqueFunction -> declareStmt R_BEGIN beginStmt R_END S_PUNTOCOMA labelEnd','bloqueFunction',6,'p_functionBloque','grammar.py',1934),
  ('params_list -> params_list S_COMA param_item','params_list',3,'p_params_list_func','grammar.py',1940),
  ('params_list -> param_item','params_list',1,'p_params_list_func_aux','grammar.py',1946),
  ('param_item -> ID types','param_item',2,'p_param_item_func','grammar.py',1951),
  ('returnsStmt -> R_RETURNS types','returnsStmt',2,'p_returnsStmt','grammar.py',1957),
  ('returnsStmt -> <empty>','returnsStmt',0,'p_returnsStmt_aux','grammar.py',1962),
  ('declareStmt -> R_DECLARE declaracion_list','declareStmt',2,'p_declareStmt2','grammar.py',1968),
  ('declareStmt -> <empty>','declareStmt',0,'p_declareStmt','grammar.py',1973),
  ('declaracion_list -> declaracion_list declaracion_item','declaracion_list',2,'p_declaracion_list','grammar.py',1978),
  ('declaracion_list -> declaracion_item','declaracion_list',1,'p_declaracion_list_aux','grammar.py',1984),
  ('declaracion_item -> ID constant_opt types null_opt default_item S_PUNTOCOMA','declaracion_item',6,'p_declaracion_item','grammar.py',1989),
  ('declaracion_item -> ID R_ALIAS R_FOR alias_declaracion S_PUNTOCOMA','declaracion_item',5,'p_declaracion_item_aux','grammar.py',1994),
  ('constant_opt -> R_CONSTANT','constant_opt',1,'p_constant_item','grammar.py',1999),
  ('constant_opt -> <empty>','constant_opt',0,'p_constant_item2','grammar.py',2004),
  ('null_opt -> R_NOT R_NULL','null_opt',2,'p_null_option','grammar.py',2009),
  ('null_opt -> <empty>','null_opt',0,'p_null_option2','grammar.py',2014),
  ('default_opt -> R_DEFAULT','default_opt',1,'p_default_item','grammar.py',2019),
  ('default_opt -> S_DOSPUNTOS S_IGUAL','default_opt',2,'p_default_item','grammar.py',2020),
  ('default_opt -> S_IGUAL','default_opt',1,'p_default_item','grammar.py',2021),
  ('default_item -> default_opt expresion','default_item',2,'p_default_item2','grammar.py',2025),
  ('default_item -> <empty>','default_item',0,'p_default_item3','grammar.py',2030),
  ('alias_declaracion -> ID','alias_declaracion',1,'p_alias_declaracion','grammar.py',2035),
  ('alias_declaracion -> IDEspecial','alias_declaracion',1,'p_alias_declaracion','grammar.py',2036),
  ('beginStmt -> beginStmt beginItem','beginStmt',2,'p_beingStmt','grammar.py',2041),
  ('beginStmt -> beginItem','beginStmt',1,'p_beingStmt2','grammar.py',2047),
  ('beginItem -> stmt','beginItem',1,'p_beginItem','grammar.py',2052),
  ('beginItem -> returnStmt S_PUNTOCOMA','beginItem',2,'p_beginItem','grammar.py',2053),
  ('returnStmt -> R_RETURN expresion','returnStmt',2,'p_returnStmt','grammar.py',2058),
  ('labelEnd -> <empty>','labelEnd',0,'p_labelEnd2','grammar.py',2063),
  ('labelEnd -> S_DOLAR S_DOLAR R_LANGUAGE ID S_PUNTOCOMA','labelEnd',5,'p_labelEnd','grammar.py',2068),
  ('asignacionStmt -> ID S_DOSPUNTOS S_IGUAL expresion','asignacionStmt',4,'p_asignacionStmt','grammar.py',2073),
  ('procedureStmt -> R_CREATE orReplace R_PROCEDURE ID S_PARIZQ params_list S_PARDER languageProcedure R_AS S_DOLAR S_DOLAR beginWord beginStmt endProcedure dolarEndProcedure','procedureStmt',15,'p_procedureStmt','grammar.py',2078),
  ('procedureStmt -> R_CREATE orReplace R_PROCEDURE ID S_PARIZQ S_PARDER languageProcedure R_AS S_DOLAR S_DOLAR beginWord beginStmt endProcedure dolarEndProcedure','procedureStmt',14,'p_procedureStmt2','grammar.py',2083),
  ('endProcedure -> <empty>','endProcedure',0,'p_endProcedure2','grammar.py',2088),
  ('endProcedure -> R_END S_PUNTOCOMA','endProcedure',2,'p_endProcedure','grammar.py',2092),
  ('dolarEndProcedure -> <empty>','dolarEndProcedure',0,'p_dolarEndProc2','grammar.py',2096),
  ('dolarEndProcedure -> S_DOLAR S_DOLAR S_PUNTOCOMA','dolarEndProcedure',3,'p_dolarEndProc','grammar.py',2100),
  ('beginWord -> <empty>','beginWord',0,'p_beginProcWord2','grammar.py',2104),
  ('beginWord -> R_BEGIN','beginWord',1,'p_beginProcWord','grammar.py',2108),
  ('languageProcedure -> R_LANGUAGE ID','languageProcedure',2,'p_procedureLanguage','grammar.py',2112),
  ('languageProcedure -> <empty>','languageProcedure',0,'p_procedureLanguage2','grammar.py',2117),
  ('executePL -> R_EXECUTE ID S_PARIZQ executeParams S_PARDER','executePL',5,'p_executePL','grammar.py',2122),
  ('executePL -> R_EXECUTE ID S_PARIZQ S_PARDER','executePL',4,'p_executePL2','grammar.py',2127),
  ('executeParams -> executeParams S_COMA executeItem','executeParams',3,'p_executeParams','grammar.py',2132),
  ('executeParams -> executeItem','executeParams',1,'p_executeParams2','grammar.py',2138),
  ('executeItem -> expresion','executeItem',1,'p_executeItem','grammar.py',2143),
]
