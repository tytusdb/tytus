Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    CORCHETEA
    CORCHETEC
    INTERVAL
    LLAVEA
    LLAVEC

Grammar

Rule 0     S' -> inicio
Rule 1     inicio -> codigo
Rule 2     codigo -> instrucciones_globales_list
Rule 3     instrucciones_globales_list -> instrucciones_globales_list instrucciones_global_sent
Rule 4     instrucciones_globales_list -> instrucciones_global_sent
Rule 5     instrucciones_global_sent -> funcion
Rule 6     instrucciones_global_sent -> llamada_funcion
Rule 7     instrucciones_global_sent -> error
Rule 8     instrucciones_funct_list -> instrucciones_funct_list instrucciones_funct_sent
Rule 9     instrucciones_funct_list -> instrucciones_funct_sent
Rule 10    instrucciones_funct_sent -> asignacion
Rule 11    instrucciones_funct_sent -> declaracion
Rule 12    instrucciones_funct_sent -> imprimir
Rule 13    instrucciones_funct_sent -> sentencia_if
Rule 14    instrucciones_funct_sent -> sentencia_switch
Rule 15    instrucciones_funct_sent -> PUNTOYCOMA
Rule 16    instrucciones_funct_sent -> llamada_funcion
Rule 17    instrucciones_funct_sent -> empty
Rule 18    instrucciones_funct_sent -> error
Rule 19    funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PUNTOYCOMA DOLAR DOLAR LANGUAGE PLPGSQL PUNTOYCOMA
Rule 20    funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PUNTOYCOMA DOLAR DOLAR LANGUAGE PLPGSQL PUNTOYCOMA
Rule 21    funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PUNTOYCOMA DOLAR DOLAR LANGUAGE PLPGSQL PUNTOYCOMA
Rule 22    funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PUNTOYCOMA DOLAR DOLAR LANGUAGE PLPGSQL PUNTOYCOMA
Rule 23    funcion -> CREATE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PUNTOYCOMA DOLAR DOLAR LANGUAGE PLPGSQL PUNTOYCOMA
Rule 24    funcion -> CREATE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PUNTOYCOMA DOLAR DOLAR LANGUAGE PLPGSQL PUNTOYCOMA
Rule 25    funcion -> CREATE OR REPLACE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PUNTOYCOMA DOLAR DOLAR LANGUAGE PLPGSQL PUNTOYCOMA
Rule 26    funcion -> CREATE OR REPLACE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PUNTOYCOMA DOLAR DOLAR LANGUAGE PLPGSQL PUNTOYCOMA
Rule 27    llamada_funcion -> SELECT ID PARA params PARC PUNTOYCOMA
Rule 28    llamada_funcion -> CALL ID PARA params PARC PUNTOYCOMA
Rule 29    params -> params COMA expresion
Rule 30    params -> expresion
Rule 31    params -> empty
Rule 32    parametros -> parametros COMA parametro
Rule 33    parametros -> parametro
Rule 34    parametro -> ID tipo
Rule 35    parametro -> empty
Rule 36    sentencia_switch -> CASE expresion case_list END CASE PUNTOYCOMA
Rule 37    case_list -> case_list case
Rule 38    case_list -> case
Rule 39    case -> WHEN expresion THEN instrucciones_funct_list
Rule 40    case -> ELSE instrucciones_funct_list
Rule 41    sentencia_if -> IF expresion THEN instrucciones_funct_list else END IF PUNTOYCOMA
Rule 42    else -> ELSE instrucciones_funct_list
Rule 43    else -> ELSEIF expresion THEN instrucciones_funct_list else
Rule 44    else -> <empty>
Rule 45    imprimir -> RAISE lista_imprimir PUNTOYCOMA
Rule 46    lista_imprimir -> lista_imprimir COMA sent_imprimir
Rule 47    lista_imprimir -> sent_imprimir
Rule 48    sent_imprimir -> expresion
Rule 49    asignacion -> ID DOSPUNTOS IGUAL expresion PUNTOYCOMA
Rule 50    declaracion -> ID tipo DOSPUNTOS IGUAL expresion PUNTOYCOMA
Rule 51    declaracion -> ID tipo PUNTOYCOMA
Rule 52    declaracion -> ID tipo DEFAULT expresion PUNTOYCOMA
Rule 53    tipo -> INTEGER
Rule 54    tipo -> SMALLINT
Rule 55    tipo -> BIGINT
Rule 56    tipo -> DECIMAL
Rule 57    tipo -> NUMERIC
Rule 58    tipo -> REAL
Rule 59    tipo -> CHAR
Rule 60    tipo -> DOUBLE
Rule 61    tipo -> PRECISION
Rule 62    tipo -> MONEY
Rule 63    tipo -> FLOAT
Rule 64    tipo -> BOOLEAN
Rule 65    tipo -> VOID
Rule 66    tipo -> CHAR PARA ENTERO PARC
Rule 67    tipo -> CHARACTER VARYING PARA ENTERO PARC
Rule 68    tipo -> VARCHAR PARA ENTERO PARC
Rule 69    tipo -> CHARACTER PARA ENTERO PARC
Rule 70    tipo -> TEXT
Rule 71    tipo -> TIME
Rule 72    tipo -> TIMESTAMP
Rule 73    tipo -> DATE
Rule 74    expresion -> log
Rule 75    log -> expresion AND expresion
Rule 76    log -> expresion ORR expresion
Rule 77    log -> rel
Rule 78    rel -> arit MAYOR arit
Rule 79    rel -> arit MENOR arit
Rule 80    rel -> arit MAYORIGUAL arit
Rule 81    rel -> arit MENORIGUAL arit
Rule 82    rel -> arit IGUALIGUAL arit
Rule 83    rel -> arit NOTIGUAL arit
Rule 84    rel -> arit
Rule 85    arit -> arit POR arit
Rule 86    arit -> arit DIV arit
Rule 87    arit -> arit MAS arit
Rule 88    arit -> arit MENOS arit
Rule 89    arit -> arit MOD arit
Rule 90    arit -> arit ANDB arit
Rule 91    arit -> arit SHIFTI arit
Rule 92    arit -> arit SHIFTD arit
Rule 93    arit -> arit XORB arit
Rule 94    arit -> arit ORB arit
Rule 95    arit -> PARA expresion PARC
Rule 96    arit -> ID
Rule 97    arit -> CADENA
Rule 98    arit -> ENTERO
Rule 99    arit -> FLOTANTE
Rule 100   arit -> MENOS expresion
Rule 101   arit -> NOTB expresion
Rule 102   arit -> NOT expresion
Rule 103   arit -> TRUE
Rule 104   arit -> FALSE
Rule 105   empty -> <empty>

Terminals, with rules where they appear

AND                  : 75
ANDB                 : 90
AS                   : 19 20 21 22 23 24 25 26
BEGIN                : 19 20 21 22 23 24 25 26
BIGINT               : 55
BOOLEAN              : 64
CADENA               : 97
CALL                 : 28
CASE                 : 36 36
CHAR                 : 59 66
CHARACTER            : 67 69
COMA                 : 29 32 46
CORCHETEA            : 
CORCHETEC            : 
CREATE               : 19 20 21 22 23 24 25 26
DATE                 : 73
DECIMAL              : 56
DECLARE              : 20 22 24 26
DEFAULT              : 52
DIV                  : 86
DOLAR                : 19 19 19 19 20 20 20 20 21 21 21 21 22 22 22 22 23 23 23 23 24 24 24 24 25 25 25 25 26 26 26 26
DOSPUNTOS            : 49 50
DOUBLE               : 60
ELSE                 : 40 42
ELSEIF               : 43
END                  : 19 20 21 22 23 24 25 26 36 41
ENTERO               : 66 67 68 69 98
FALSE                : 104
FLOAT                : 63
FLOTANTE             : 99
FUNCTION             : 19 20 21 22
ID                   : 19 20 21 22 23 24 25 26 27 28 34 49 50 51 52 96
IF                   : 41 41
IGUAL                : 49 50
IGUALIGUAL           : 82
INTEGER              : 53
INTERVAL             : 
LANGUAGE             : 19 20 21 22 23 24 25 26
LLAVEA               : 
LLAVEC               : 
MAS                  : 87
MAYOR                : 78
MAYORIGUAL           : 80
MENOR                : 79
MENORIGUAL           : 81
MENOS                : 88 100
MOD                  : 89
MONEY                : 62
NOT                  : 102
NOTB                 : 101
NOTIGUAL             : 83
NUMERIC              : 57
OR                   : 21 22 25 26
ORB                  : 94
ORR                  : 76
PARA                 : 19 20 21 22 23 24 25 26 27 28 66 67 68 69 95
PARC                 : 19 20 21 22 23 24 25 26 27 28 66 67 68 69 95
PLPGSQL              : 19 20 21 22 23 24 25 26
POR                  : 85
PRECISION            : 61
PROCEDURE            : 23 24 25 26
PUNTOYCOMA           : 15 19 19 20 20 21 21 22 22 23 23 24 24 25 25 26 26 27 28 36 41 45 49 50 51 52
RAISE                : 45
REAL                 : 58
REPLACE              : 21 22 25 26
RETURNS              : 19 20 21 22 23 24 25 26
SELECT               : 27
SHIFTD               : 92
SHIFTI               : 91
SMALLINT             : 54
TEXT                 : 70
THEN                 : 39 41 43
TIME                 : 71
TIMESTAMP            : 72
TRUE                 : 103
VARCHAR              : 68
VARYING              : 67
VOID                 : 65
WHEN                 : 39
XORB                 : 93
error                : 7 18

Nonterminals, with rules where they appear

arit                 : 78 78 79 79 80 80 81 81 82 82 83 83 84 85 85 86 86 87 87 88 88 89 89 90 90 91 91 92 92 93 93 94 94
asignacion           : 10
case                 : 37 38
case_list            : 36 37
codigo               : 1
declaracion          : 11
else                 : 41 43
empty                : 17 31 35
expresion            : 29 30 36 39 41 43 48 49 50 52 75 75 76 76 95 100 101 102
funcion              : 5
imprimir             : 12
inicio               : 0
instrucciones_funct_list : 8 19 20 20 21 22 22 23 24 24 25 26 26 39 40 41 42 43
instrucciones_funct_sent : 8 9
instrucciones_global_sent : 3 4
instrucciones_globales_list : 2 3
lista_imprimir       : 45 46
llamada_funcion      : 6 16
log                  : 74
parametro            : 32 33
parametros           : 19 20 21 22 23 24 25 26 32
params               : 27 28 29
rel                  : 77
sent_imprimir        : 46 47
sentencia_if         : 13
sentencia_switch     : 14
tipo                 : 19 20 21 22 23 24 25 26 34 50 51 52

Parsing method: LALR

state 0

    (0) S' -> . inicio
    (1) inicio -> . codigo
    (2) codigo -> . instrucciones_globales_list
    (3) instrucciones_globales_list -> . instrucciones_globales_list instrucciones_global_sent
    (4) instrucciones_globales_list -> . instrucciones_global_sent
    (5) instrucciones_global_sent -> . funcion
    (6) instrucciones_global_sent -> . llamada_funcion
    (7) instrucciones_global_sent -> . error
    (19) funcion -> . CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PUNTOYCOMA DOLAR DOLAR LANGUAGE PLPGSQL PUNTOYCOMA
    (20) funcion -> . CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PUNTOYCOMA DOLAR DOLAR LANGUAGE PLPGSQL PUNTOYCOMA
    (21) funcion -> . CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PUNTOYCOMA DOLAR DOLAR LANGUAGE PLPGSQL PUNTOYCOMA
    (22) funcion -> . CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PUNTOYCOMA DOLAR DOLAR LANGUAGE PLPGSQL PUNTOYCOMA
    (23) funcion -> . CREATE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PUNTOYCOMA DOLAR DOLAR LANGUAGE PLPGSQL PUNTOYCOMA
    (24) funcion -> . CREATE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PUNTOYCOMA DOLAR DOLAR LANGUAGE PLPGSQL PUNTOYCOMA
    (25) funcion -> . CREATE OR REPLACE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PUNTOYCOMA DOLAR DOLAR LANGUAGE PLPGSQL PUNTOYCOMA
    (26) funcion -> . CREATE OR REPLACE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PUNTOYCOMA DOLAR DOLAR LANGUAGE PLPGSQL PUNTOYCOMA
    (27) llamada_funcion -> . SELECT ID PARA params PARC PUNTOYCOMA
    (28) llamada_funcion -> . CALL ID PARA params PARC PUNTOYCOMA

    error           shift and go to state 7
    CREATE          shift and go to state 8
    SELECT          shift and go to state 9
    CALL            shift and go to state 10

    inicio                         shift and go to state 1
    codigo                         shift and go to state 2
    instrucciones_globales_list    shift and go to state 3
    instrucciones_global_sent      shift and go to state 4
    funcion                        shift and go to state 5
    llamada_funcion                shift and go to state 6

state 1

    (0) S' -> inicio .



state 2

    (1) inicio -> codigo .

    $end            reduce using rule 1 (inicio -> codigo .)


state 3

    (2) codigo -> instrucciones_globales_list .
    (3) instrucciones_globales_list -> instrucciones_globales_list . instrucciones_global_sent
    (5) instrucciones_global_sent -> . funcion
    (6) instrucciones_global_sent -> . llamada_funcion
    (7) instrucciones_global_sent -> . error
    (19) funcion -> . CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PUNTOYCOMA DOLAR DOLAR LANGUAGE PLPGSQL PUNTOYCOMA
    (20) funcion -> . CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PUNTOYCOMA DOLAR DOLAR LANGUAGE PLPGSQL PUNTOYCOMA
    (21) funcion -> . CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PUNTOYCOMA DOLAR DOLAR LANGUAGE PLPGSQL PUNTOYCOMA
    (22) funcion -> . CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PUNTOYCOMA DOLAR DOLAR LANGUAGE PLPGSQL PUNTOYCOMA
    (23) funcion -> . CREATE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PUNTOYCOMA DOLAR DOLAR LANGUAGE PLPGSQL PUNTOYCOMA
    (24) funcion -> . CREATE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PUNTOYCOMA DOLAR DOLAR LANGUAGE PLPGSQL PUNTOYCOMA
    (25) funcion -> . CREATE OR REPLACE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PUNTOYCOMA DOLAR DOLAR LANGUAGE PLPGSQL PUNTOYCOMA
    (26) funcion -> . CREATE OR REPLACE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PUNTOYCOMA DOLAR DOLAR LANGUAGE PLPGSQL PUNTOYCOMA
    (27) llamada_funcion -> . SELECT ID PARA params PARC PUNTOYCOMA
    (28) llamada_funcion -> . CALL ID PARA params PARC PUNTOYCOMA

    $end            reduce using rule 2 (codigo -> instrucciones_globales_list .)
    error           shift and go to state 7
    CREATE          shift and go to state 8
    SELECT          shift and go to state 9
    CALL            shift and go to state 10

    instrucciones_global_sent      shift and go to state 11
    funcion                        shift and go to state 5
    llamada_funcion                shift and go to state 6

state 4

    (4) instrucciones_globales_list -> instrucciones_global_sent .

    error           reduce using rule 4 (instrucciones_globales_list -> instrucciones_global_sent .)
    CREATE          reduce using rule 4 (instrucciones_globales_list -> instrucciones_global_sent .)
    SELECT          reduce using rule 4 (instrucciones_globales_list -> instrucciones_global_sent .)
    CALL            reduce using rule 4 (instrucciones_globales_list -> instrucciones_global_sent .)
    $end            reduce using rule 4 (instrucciones_globales_list -> instrucciones_global_sent .)


state 5

    (5) instrucciones_global_sent -> funcion .

    error           reduce using rule 5 (instrucciones_global_sent -> funcion .)
    CREATE          reduce using rule 5 (instrucciones_global_sent -> funcion .)
    SELECT          reduce using rule 5 (instrucciones_global_sent -> funcion .)
    CALL            reduce using rule 5 (instrucciones_global_sent -> funcion .)
    $end            reduce using rule 5 (instrucciones_global_sent -> funcion .)


state 6

    (6) instrucciones_global_sent -> llamada_funcion .

    error           reduce using rule 6 (instrucciones_global_sent -> llamada_funcion .)
    CREATE          reduce using rule 6 (instrucciones_global_sent -> llamada_funcion .)
    SELECT          reduce using rule 6 (instrucciones_global_sent -> llamada_funcion .)
    CALL            reduce using rule 6 (instrucciones_global_sent -> llamada_funcion .)
    $end            reduce using rule 6 (instrucciones_global_sent -> llamada_funcion .)


state 7

    (7) instrucciones_global_sent -> error .

    error           reduce using rule 7 (instrucciones_global_sent -> error .)
    CREATE          reduce using rule 7 (instrucciones_global_sent -> error .)
    SELECT          reduce using rule 7 (instrucciones_global_sent -> error .)
    CALL            reduce using rule 7 (instrucciones_global_sent -> error .)
    $end            reduce using rule 7 (instrucciones_global_sent -> error .)


state 8

    (19) funcion -> CREATE . FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PUNTOYCOMA DOLAR DOLAR LANGUAGE PLPGSQL PUNTOYCOMA
    (20) funcion -> CREATE . FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PUNTOYCOMA DOLAR DOLAR LANGUAGE PLPGSQL PUNTOYCOMA
    (21) funcion -> CREATE . OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PUNTOYCOMA DOLAR DOLAR LANGUAGE PLPGSQL PUNTOYCOMA
    (22) funcion -> CREATE . OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PUNTOYCOMA DOLAR DOLAR LANGUAGE PLPGSQL PUNTOYCOMA
    (23) funcion -> CREATE . PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PUNTOYCOMA DOLAR DOLAR LANGUAGE PLPGSQL PUNTOYCOMA
    (24) funcion -> CREATE . PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PUNTOYCOMA DOLAR DOLAR LANGUAGE PLPGSQL PUNTOYCOMA
    (25) funcion -> CREATE . OR REPLACE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PUNTOYCOMA DOLAR DOLAR LANGUAGE PLPGSQL PUNTOYCOMA
    (26) funcion -> CREATE . OR REPLACE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PUNTOYCOMA DOLAR DOLAR LANGUAGE PLPGSQL PUNTOYCOMA

    FUNCTION        shift and go to state 12
    OR              shift and go to state 13
    PROCEDURE       shift and go to state 14


state 9

    (27) llamada_funcion -> SELECT . ID PARA params PARC PUNTOYCOMA

    ID              shift and go to state 15


state 10

    (28) llamada_funcion -> CALL . ID PARA params PARC PUNTOYCOMA

    ID              shift and go to state 16


state 11

    (3) instrucciones_globales_list -> instrucciones_globales_list instrucciones_global_sent .

    error           reduce using rule 3 (instrucciones_globales_list -> instrucciones_globales_list instrucciones_global_sent .)
    CREATE          reduce using rule 3 (instrucciones_globales_list -> instrucciones_globales_list instrucciones_global_sent .)
    SELECT          reduce using rule 3 (instrucciones_globales_list -> instrucciones_globales_list instrucciones_global_sent .)
    CALL            reduce using rule 3 (instrucciones_globales_list -> instrucciones_globales_list instrucciones_global_sent .)
    $end            reduce using rule 3 (instrucciones_globales_list -> instrucciones_globales_list instrucciones_global_sent .)


state 12

    (19) funcion -> CREATE FUNCTION . ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PUNTOYCOMA DOLAR DOLAR LANGUAGE PLPGSQL PUNTOYCOMA
    (20) funcion -> CREATE FUNCTION . ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PUNTOYCOMA DOLAR DOLAR LANGUAGE PLPGSQL PUNTOYCOMA

    ID              shift and go to state 17


state 13

    (21) funcion -> CREATE OR . REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PUNTOYCOMA DOLAR DOLAR LANGUAGE PLPGSQL PUNTOYCOMA
    (22) funcion -> CREATE OR . REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PUNTOYCOMA DOLAR DOLAR LANGUAGE PLPGSQL PUNTOYCOMA
    (25) funcion -> CREATE OR . REPLACE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PUNTOYCOMA DOLAR DOLAR LANGUAGE PLPGSQL PUNTOYCOMA
    (26) funcion -> CREATE OR . REPLACE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PUNTOYCOMA DOLAR DOLAR LANGUAGE PLPGSQL PUNTOYCOMA

    REPLACE         shift and go to state 18


state 14

    (23) funcion -> CREATE PROCEDURE . ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PUNTOYCOMA DOLAR DOLAR LANGUAGE PLPGSQL PUNTOYCOMA
    (24) funcion -> CREATE PROCEDURE . ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PUNTOYCOMA DOLAR DOLAR LANGUAGE PLPGSQL PUNTOYCOMA

    ID              shift and go to state 19


state 15

    (27) llamada_funcion -> SELECT ID . PARA params PARC PUNTOYCOMA

    PARA            shift and go to state 20


state 16

    (28) llamada_funcion -> CALL ID . PARA params PARC PUNTOYCOMA

    PARA            shift and go to state 21


state 17

    (19) funcion -> CREATE FUNCTION ID . PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PUNTOYCOMA DOLAR DOLAR LANGUAGE PLPGSQL PUNTOYCOMA
    (20) funcion -> CREATE FUNCTION ID . PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PUNTOYCOMA DOLAR DOLAR LANGUAGE PLPGSQL PUNTOYCOMA

    PARA            shift and go to state 22


state 18

    (21) funcion -> CREATE OR REPLACE . FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PUNTOYCOMA DOLAR DOLAR LANGUAGE PLPGSQL PUNTOYCOMA
    (22) funcion -> CREATE OR REPLACE . FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PUNTOYCOMA DOLAR DOLAR LANGUAGE PLPGSQL PUNTOYCOMA
    (25) funcion -> CREATE OR REPLACE . PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PUNTOYCOMA DOLAR DOLAR LANGUAGE PLPGSQL PUNTOYCOMA
    (26) funcion -> CREATE OR REPLACE . PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PUNTOYCOMA DOLAR DOLAR LANGUAGE PLPGSQL PUNTOYCOMA

    FUNCTION        shift and go to state 23
    PROCEDURE       shift and go to state 24


state 19

    (23) funcion -> CREATE PROCEDURE ID . PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PUNTOYCOMA DOLAR DOLAR LANGUAGE PLPGSQL PUNTOYCOMA
    (24) funcion -> CREATE PROCEDURE ID . PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PUNTOYCOMA DOLAR DOLAR LANGUAGE PLPGSQL PUNTOYCOMA

    PARA            shift and go to state 25


state 20

    (27) llamada_funcion -> SELECT ID PARA . params PARC PUNTOYCOMA
    (29) params -> . params COMA expresion
    (30) params -> . expresion
    (31) params -> . empty
    (74) expresion -> . log
    (105) empty -> .
    (75) log -> . expresion AND expresion
    (76) log -> . expresion ORR expresion
    (77) log -> . rel
    (78) rel -> . arit MAYOR arit
    (79) rel -> . arit MENOR arit
    (80) rel -> . arit MAYORIGUAL arit
    (81) rel -> . arit MENORIGUAL arit
    (82) rel -> . arit IGUALIGUAL arit
    (83) rel -> . arit NOTIGUAL arit
    (84) rel -> . arit
    (85) arit -> . arit POR arit
    (86) arit -> . arit DIV arit
    (87) arit -> . arit MAS arit
    (88) arit -> . arit MENOS arit
    (89) arit -> . arit MOD arit
    (90) arit -> . arit ANDB arit
    (91) arit -> . arit SHIFTI arit
    (92) arit -> . arit SHIFTD arit
    (93) arit -> . arit XORB arit
    (94) arit -> . arit ORB arit
    (95) arit -> . PARA expresion PARC
    (96) arit -> . ID
    (97) arit -> . CADENA
    (98) arit -> . ENTERO
    (99) arit -> . FLOTANTE
    (100) arit -> . MENOS expresion
    (101) arit -> . NOTB expresion
    (102) arit -> . NOT expresion
    (103) arit -> . TRUE
    (104) arit -> . FALSE

    PARC            reduce using rule 105 (empty -> .)
    COMA            reduce using rule 105 (empty -> .)
    PARA            shift and go to state 27
    ID              shift and go to state 26
    CADENA          shift and go to state 35
    ENTERO          shift and go to state 36
    FLOTANTE        shift and go to state 37
    MENOS           shift and go to state 34
    NOTB            shift and go to state 38
    NOT             shift and go to state 39
    TRUE            shift and go to state 40
    FALSE           shift and go to state 41

    params                         shift and go to state 28
    expresion                      shift and go to state 29
    empty                          shift and go to state 30
    log                            shift and go to state 31
    rel                            shift and go to state 32
    arit                           shift and go to state 33

state 21

    (28) llamada_funcion -> CALL ID PARA . params PARC PUNTOYCOMA
    (29) params -> . params COMA expresion
    (30) params -> . expresion
    (31) params -> . empty
    (74) expresion -> . log
    (105) empty -> .
    (75) log -> . expresion AND expresion
    (76) log -> . expresion ORR expresion
    (77) log -> . rel
    (78) rel -> . arit MAYOR arit
    (79) rel -> . arit MENOR arit
    (80) rel -> . arit MAYORIGUAL arit
    (81) rel -> . arit MENORIGUAL arit
    (82) rel -> . arit IGUALIGUAL arit
    (83) rel -> . arit NOTIGUAL arit
    (84) rel -> . arit
    (85) arit -> . arit POR arit
    (86) arit -> . arit DIV arit
    (87) arit -> . arit MAS arit
    (88) arit -> . arit MENOS arit
    (89) arit -> . arit MOD arit
    (90) arit -> . arit ANDB arit
    (91) arit -> . arit SHIFTI arit
    (92) arit -> . arit SHIFTD arit
    (93) arit -> . arit XORB arit
    (94) arit -> . arit ORB arit
    (95) arit -> . PARA expresion PARC
    (96) arit -> . ID
    (97) arit -> . CADENA
    (98) arit -> . ENTERO
    (99) arit -> . FLOTANTE
    (100) arit -> . MENOS expresion
    (101) arit -> . NOTB expresion
    (102) arit -> . NOT expresion
    (103) arit -> . TRUE
    (104) arit -> . FALSE

    PARC            reduce using rule 105 (empty -> .)
    COMA            reduce using rule 105 (empty -> .)
    PARA            shift and go to state 27
    ID              shift and go to state 26
    CADENA          shift and go to state 35
    ENTERO          shift and go to state 36
    FLOTANTE        shift and go to state 37
    MENOS           shift and go to state 34
    NOTB            shift and go to state 38
    NOT             shift and go to state 39
    TRUE            shift and go to state 40
    FALSE           shift and go to state 41

    params                         shift and go to state 42
    expresion                      shift and go to state 29
    empty                          shift and go to state 30
    log                            shift and go to state 31
    rel                            shift and go to state 32
    arit                           shift and go to state 33

state 22

    (19) funcion -> CREATE FUNCTION ID PARA . parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PUNTOYCOMA DOLAR DOLAR LANGUAGE PLPGSQL PUNTOYCOMA
    (20) funcion -> CREATE FUNCTION ID PARA . parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PUNTOYCOMA DOLAR DOLAR LANGUAGE PLPGSQL PUNTOYCOMA
    (32) parametros -> . parametros COMA parametro
    (33) parametros -> . parametro
    (34) parametro -> . ID tipo
    (35) parametro -> . empty
    (105) empty -> .

    ID              shift and go to state 43
    PARC            reduce using rule 105 (empty -> .)
    COMA            reduce using rule 105 (empty -> .)

    parametros                     shift and go to state 44
    parametro                      shift and go to state 45
    empty                          shift and go to state 46

state 23

    (21) funcion -> CREATE OR REPLACE FUNCTION . ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PUNTOYCOMA DOLAR DOLAR LANGUAGE PLPGSQL PUNTOYCOMA
    (22) funcion -> CREATE OR REPLACE FUNCTION . ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PUNTOYCOMA DOLAR DOLAR LANGUAGE PLPGSQL PUNTOYCOMA

    ID              shift and go to state 47


state 24

    (25) funcion -> CREATE OR REPLACE PROCEDURE . ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PUNTOYCOMA DOLAR DOLAR LANGUAGE PLPGSQL PUNTOYCOMA
    (26) funcion -> CREATE OR REPLACE PROCEDURE . ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PUNTOYCOMA DOLAR DOLAR LANGUAGE PLPGSQL PUNTOYCOMA

    ID              shift and go to state 48


state 25

    (23) funcion -> CREATE PROCEDURE ID PARA . parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PUNTOYCOMA DOLAR DOLAR LANGUAGE PLPGSQL PUNTOYCOMA
    (24) funcion -> CREATE PROCEDURE ID PARA . parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PUNTOYCOMA DOLAR DOLAR LANGUAGE PLPGSQL PUNTOYCOMA
    (32) parametros -> . parametros COMA parametro
    (33) parametros -> . parametro
    (34) parametro -> . ID tipo
    (35) parametro -> . empty
    (105) empty -> .

    ID              shift and go to state 43
    PARC            reduce using rule 105 (empty -> .)
    COMA            reduce using rule 105 (empty -> .)

    parametros                     shift and go to state 49
    parametro                      shift and go to state 45
    empty                          shift and go to state 46

state 26

    (96) arit -> ID .

    MAYOR           reduce using rule 96 (arit -> ID .)
    MENOR           reduce using rule 96 (arit -> ID .)
    MAYORIGUAL      reduce using rule 96 (arit -> ID .)
    MENORIGUAL      reduce using rule 96 (arit -> ID .)
    IGUALIGUAL      reduce using rule 96 (arit -> ID .)
    NOTIGUAL        reduce using rule 96 (arit -> ID .)
    POR             reduce using rule 96 (arit -> ID .)
    DIV             reduce using rule 96 (arit -> ID .)
    MAS             reduce using rule 96 (arit -> ID .)
    MENOS           reduce using rule 96 (arit -> ID .)
    MOD             reduce using rule 96 (arit -> ID .)
    ANDB            reduce using rule 96 (arit -> ID .)
    SHIFTI          reduce using rule 96 (arit -> ID .)
    SHIFTD          reduce using rule 96 (arit -> ID .)
    XORB            reduce using rule 96 (arit -> ID .)
    ORB             reduce using rule 96 (arit -> ID .)
    AND             reduce using rule 96 (arit -> ID .)
    ORR             reduce using rule 96 (arit -> ID .)
    PARC            reduce using rule 96 (arit -> ID .)
    COMA            reduce using rule 96 (arit -> ID .)
    PUNTOYCOMA      reduce using rule 96 (arit -> ID .)
    THEN            reduce using rule 96 (arit -> ID .)
    WHEN            reduce using rule 96 (arit -> ID .)
    ELSE            reduce using rule 96 (arit -> ID .)


state 27

    (95) arit -> PARA . expresion PARC
    (74) expresion -> . log
    (75) log -> . expresion AND expresion
    (76) log -> . expresion ORR expresion
    (77) log -> . rel
    (78) rel -> . arit MAYOR arit
    (79) rel -> . arit MENOR arit
    (80) rel -> . arit MAYORIGUAL arit
    (81) rel -> . arit MENORIGUAL arit
    (82) rel -> . arit IGUALIGUAL arit
    (83) rel -> . arit NOTIGUAL arit
    (84) rel -> . arit
    (85) arit -> . arit POR arit
    (86) arit -> . arit DIV arit
    (87) arit -> . arit MAS arit
    (88) arit -> . arit MENOS arit
    (89) arit -> . arit MOD arit
    (90) arit -> . arit ANDB arit
    (91) arit -> . arit SHIFTI arit
    (92) arit -> . arit SHIFTD arit
    (93) arit -> . arit XORB arit
    (94) arit -> . arit ORB arit
    (95) arit -> . PARA expresion PARC
    (96) arit -> . ID
    (97) arit -> . CADENA
    (98) arit -> . ENTERO
    (99) arit -> . FLOTANTE
    (100) arit -> . MENOS expresion
    (101) arit -> . NOTB expresion
    (102) arit -> . NOT expresion
    (103) arit -> . TRUE
    (104) arit -> . FALSE

    PARA            shift and go to state 27
    ID              shift and go to state 26
    CADENA          shift and go to state 35
    ENTERO          shift and go to state 36
    FLOTANTE        shift and go to state 37
    MENOS           shift and go to state 34
    NOTB            shift and go to state 38
    NOT             shift and go to state 39
    TRUE            shift and go to state 40
    FALSE           shift and go to state 41

    expresion                      shift and go to state 50
    log                            shift and go to state 31
    rel                            shift and go to state 32
    arit                           shift and go to state 33

state 28

    (27) llamada_funcion -> SELECT ID PARA params . PARC PUNTOYCOMA
    (29) params -> params . COMA expresion

    PARC            shift and go to state 51
    COMA            shift and go to state 52


state 29

    (30) params -> expresion .
    (75) log -> expresion . AND expresion
    (76) log -> expresion . ORR expresion

    PARC            reduce using rule 30 (params -> expresion .)
    COMA            reduce using rule 30 (params -> expresion .)
    AND             shift and go to state 53
    ORR             shift and go to state 54


state 30

    (31) params -> empty .

    PARC            reduce using rule 31 (params -> empty .)
    COMA            reduce using rule 31 (params -> empty .)


state 31

    (74) expresion -> log .

    AND             reduce using rule 74 (expresion -> log .)
    ORR             reduce using rule 74 (expresion -> log .)
    PARC            reduce using rule 74 (expresion -> log .)
    COMA            reduce using rule 74 (expresion -> log .)
    MAYOR           reduce using rule 74 (expresion -> log .)
    MENOR           reduce using rule 74 (expresion -> log .)
    MAYORIGUAL      reduce using rule 74 (expresion -> log .)
    MENORIGUAL      reduce using rule 74 (expresion -> log .)
    IGUALIGUAL      reduce using rule 74 (expresion -> log .)
    NOTIGUAL        reduce using rule 74 (expresion -> log .)
    POR             reduce using rule 74 (expresion -> log .)
    DIV             reduce using rule 74 (expresion -> log .)
    MAS             reduce using rule 74 (expresion -> log .)
    MENOS           reduce using rule 74 (expresion -> log .)
    MOD             reduce using rule 74 (expresion -> log .)
    ANDB            reduce using rule 74 (expresion -> log .)
    SHIFTI          reduce using rule 74 (expresion -> log .)
    SHIFTD          reduce using rule 74 (expresion -> log .)
    XORB            reduce using rule 74 (expresion -> log .)
    ORB             reduce using rule 74 (expresion -> log .)
    PUNTOYCOMA      reduce using rule 74 (expresion -> log .)
    THEN            reduce using rule 74 (expresion -> log .)
    WHEN            reduce using rule 74 (expresion -> log .)
    ELSE            reduce using rule 74 (expresion -> log .)


state 32

    (77) log -> rel .

    AND             reduce using rule 77 (log -> rel .)
    ORR             reduce using rule 77 (log -> rel .)
    PARC            reduce using rule 77 (log -> rel .)
    COMA            reduce using rule 77 (log -> rel .)
    MAYOR           reduce using rule 77 (log -> rel .)
    MENOR           reduce using rule 77 (log -> rel .)
    MAYORIGUAL      reduce using rule 77 (log -> rel .)
    MENORIGUAL      reduce using rule 77 (log -> rel .)
    IGUALIGUAL      reduce using rule 77 (log -> rel .)
    NOTIGUAL        reduce using rule 77 (log -> rel .)
    POR             reduce using rule 77 (log -> rel .)
    DIV             reduce using rule 77 (log -> rel .)
    MAS             reduce using rule 77 (log -> rel .)
    MENOS           reduce using rule 77 (log -> rel .)
    MOD             reduce using rule 77 (log -> rel .)
    ANDB            reduce using rule 77 (log -> rel .)
    SHIFTI          reduce using rule 77 (log -> rel .)
    SHIFTD          reduce using rule 77 (log -> rel .)
    XORB            reduce using rule 77 (log -> rel .)
    ORB             reduce using rule 77 (log -> rel .)
    PUNTOYCOMA      reduce using rule 77 (log -> rel .)
    THEN            reduce using rule 77 (log -> rel .)
    WHEN            reduce using rule 77 (log -> rel .)
    ELSE            reduce using rule 77 (log -> rel .)


state 33

    (78) rel -> arit . MAYOR arit
    (79) rel -> arit . MENOR arit
    (80) rel -> arit . MAYORIGUAL arit
    (81) rel -> arit . MENORIGUAL arit
    (82) rel -> arit . IGUALIGUAL arit
    (83) rel -> arit . NOTIGUAL arit
    (84) rel -> arit .
    (85) arit -> arit . POR arit
    (86) arit -> arit . DIV arit
    (87) arit -> arit . MAS arit
    (88) arit -> arit . MENOS arit
    (89) arit -> arit . MOD arit
    (90) arit -> arit . ANDB arit
    (91) arit -> arit . SHIFTI arit
    (92) arit -> arit . SHIFTD arit
    (93) arit -> arit . XORB arit
    (94) arit -> arit . ORB arit

  ! shift/reduce conflict for MAYOR resolved as shift
  ! shift/reduce conflict for MENOR resolved as shift
  ! shift/reduce conflict for MAYORIGUAL resolved as shift
  ! shift/reduce conflict for MENORIGUAL resolved as shift
  ! shift/reduce conflict for IGUALIGUAL resolved as shift
  ! shift/reduce conflict for NOTIGUAL resolved as shift
  ! shift/reduce conflict for POR resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
  ! shift/reduce conflict for ANDB resolved as shift
  ! shift/reduce conflict for SHIFTI resolved as shift
  ! shift/reduce conflict for SHIFTD resolved as shift
  ! shift/reduce conflict for XORB resolved as shift
  ! shift/reduce conflict for ORB resolved as shift
    MAYOR           shift and go to state 55
    MENOR           shift and go to state 56
    MAYORIGUAL      shift and go to state 57
    MENORIGUAL      shift and go to state 58
    IGUALIGUAL      shift and go to state 59
    NOTIGUAL        shift and go to state 60
    AND             reduce using rule 84 (rel -> arit .)
    ORR             reduce using rule 84 (rel -> arit .)
    PARC            reduce using rule 84 (rel -> arit .)
    COMA            reduce using rule 84 (rel -> arit .)
    PUNTOYCOMA      reduce using rule 84 (rel -> arit .)
    THEN            reduce using rule 84 (rel -> arit .)
    WHEN            reduce using rule 84 (rel -> arit .)
    ELSE            reduce using rule 84 (rel -> arit .)
    POR             shift and go to state 61
    DIV             shift and go to state 62
    MAS             shift and go to state 63
    MENOS           shift and go to state 64
    MOD             shift and go to state 65
    ANDB            shift and go to state 66
    SHIFTI          shift and go to state 67
    SHIFTD          shift and go to state 68
    XORB            shift and go to state 69
    ORB             shift and go to state 70

  ! MAYOR           [ reduce using rule 84 (rel -> arit .) ]
  ! MENOR           [ reduce using rule 84 (rel -> arit .) ]
  ! MAYORIGUAL      [ reduce using rule 84 (rel -> arit .) ]
  ! MENORIGUAL      [ reduce using rule 84 (rel -> arit .) ]
  ! IGUALIGUAL      [ reduce using rule 84 (rel -> arit .) ]
  ! NOTIGUAL        [ reduce using rule 84 (rel -> arit .) ]
  ! POR             [ reduce using rule 84 (rel -> arit .) ]
  ! DIV             [ reduce using rule 84 (rel -> arit .) ]
  ! MAS             [ reduce using rule 84 (rel -> arit .) ]
  ! MENOS           [ reduce using rule 84 (rel -> arit .) ]
  ! MOD             [ reduce using rule 84 (rel -> arit .) ]
  ! ANDB            [ reduce using rule 84 (rel -> arit .) ]
  ! SHIFTI          [ reduce using rule 84 (rel -> arit .) ]
  ! SHIFTD          [ reduce using rule 84 (rel -> arit .) ]
  ! XORB            [ reduce using rule 84 (rel -> arit .) ]
  ! ORB             [ reduce using rule 84 (rel -> arit .) ]


state 34

    (100) arit -> MENOS . expresion
    (74) expresion -> . log
    (75) log -> . expresion AND expresion
    (76) log -> . expresion ORR expresion
    (77) log -> . rel
    (78) rel -> . arit MAYOR arit
    (79) rel -> . arit MENOR arit
    (80) rel -> . arit MAYORIGUAL arit
    (81) rel -> . arit MENORIGUAL arit
    (82) rel -> . arit IGUALIGUAL arit
    (83) rel -> . arit NOTIGUAL arit
    (84) rel -> . arit
    (85) arit -> . arit POR arit
    (86) arit -> . arit DIV arit
    (87) arit -> . arit MAS arit
    (88) arit -> . arit MENOS arit
    (89) arit -> . arit MOD arit
    (90) arit -> . arit ANDB arit
    (91) arit -> . arit SHIFTI arit
    (92) arit -> . arit SHIFTD arit
    (93) arit -> . arit XORB arit
    (94) arit -> . arit ORB arit
    (95) arit -> . PARA expresion PARC
    (96) arit -> . ID
    (97) arit -> . CADENA
    (98) arit -> . ENTERO
    (99) arit -> . FLOTANTE
    (100) arit -> . MENOS expresion
    (101) arit -> . NOTB expresion
    (102) arit -> . NOT expresion
    (103) arit -> . TRUE
    (104) arit -> . FALSE

    PARA            shift and go to state 27
    ID              shift and go to state 26
    CADENA          shift and go to state 35
    ENTERO          shift and go to state 36
    FLOTANTE        shift and go to state 37
    MENOS           shift and go to state 34
    NOTB            shift and go to state 38
    NOT             shift and go to state 39
    TRUE            shift and go to state 40
    FALSE           shift and go to state 41

    expresion                      shift and go to state 71
    log                            shift and go to state 31
    rel                            shift and go to state 32
    arit                           shift and go to state 33

state 35

    (97) arit -> CADENA .

    MAYOR           reduce using rule 97 (arit -> CADENA .)
    MENOR           reduce using rule 97 (arit -> CADENA .)
    MAYORIGUAL      reduce using rule 97 (arit -> CADENA .)
    MENORIGUAL      reduce using rule 97 (arit -> CADENA .)
    IGUALIGUAL      reduce using rule 97 (arit -> CADENA .)
    NOTIGUAL        reduce using rule 97 (arit -> CADENA .)
    POR             reduce using rule 97 (arit -> CADENA .)
    DIV             reduce using rule 97 (arit -> CADENA .)
    MAS             reduce using rule 97 (arit -> CADENA .)
    MENOS           reduce using rule 97 (arit -> CADENA .)
    MOD             reduce using rule 97 (arit -> CADENA .)
    ANDB            reduce using rule 97 (arit -> CADENA .)
    SHIFTI          reduce using rule 97 (arit -> CADENA .)
    SHIFTD          reduce using rule 97 (arit -> CADENA .)
    XORB            reduce using rule 97 (arit -> CADENA .)
    ORB             reduce using rule 97 (arit -> CADENA .)
    AND             reduce using rule 97 (arit -> CADENA .)
    ORR             reduce using rule 97 (arit -> CADENA .)
    PARC            reduce using rule 97 (arit -> CADENA .)
    COMA            reduce using rule 97 (arit -> CADENA .)
    PUNTOYCOMA      reduce using rule 97 (arit -> CADENA .)
    THEN            reduce using rule 97 (arit -> CADENA .)
    WHEN            reduce using rule 97 (arit -> CADENA .)
    ELSE            reduce using rule 97 (arit -> CADENA .)


state 36

    (98) arit -> ENTERO .

    MAYOR           reduce using rule 98 (arit -> ENTERO .)
    MENOR           reduce using rule 98 (arit -> ENTERO .)
    MAYORIGUAL      reduce using rule 98 (arit -> ENTERO .)
    MENORIGUAL      reduce using rule 98 (arit -> ENTERO .)
    IGUALIGUAL      reduce using rule 98 (arit -> ENTERO .)
    NOTIGUAL        reduce using rule 98 (arit -> ENTERO .)
    POR             reduce using rule 98 (arit -> ENTERO .)
    DIV             reduce using rule 98 (arit -> ENTERO .)
    MAS             reduce using rule 98 (arit -> ENTERO .)
    MENOS           reduce using rule 98 (arit -> ENTERO .)
    MOD             reduce using rule 98 (arit -> ENTERO .)
    ANDB            reduce using rule 98 (arit -> ENTERO .)
    SHIFTI          reduce using rule 98 (arit -> ENTERO .)
    SHIFTD          reduce using rule 98 (arit -> ENTERO .)
    XORB            reduce using rule 98 (arit -> ENTERO .)
    ORB             reduce using rule 98 (arit -> ENTERO .)
    AND             reduce using rule 98 (arit -> ENTERO .)
    ORR             reduce using rule 98 (arit -> ENTERO .)
    PARC            reduce using rule 98 (arit -> ENTERO .)
    COMA            reduce using rule 98 (arit -> ENTERO .)
    PUNTOYCOMA      reduce using rule 98 (arit -> ENTERO .)
    THEN            reduce using rule 98 (arit -> ENTERO .)
    WHEN            reduce using rule 98 (arit -> ENTERO .)
    ELSE            reduce using rule 98 (arit -> ENTERO .)


state 37

    (99) arit -> FLOTANTE .

    MAYOR           reduce using rule 99 (arit -> FLOTANTE .)
    MENOR           reduce using rule 99 (arit -> FLOTANTE .)
    MAYORIGUAL      reduce using rule 99 (arit -> FLOTANTE .)
    MENORIGUAL      reduce using rule 99 (arit -> FLOTANTE .)
    IGUALIGUAL      reduce using rule 99 (arit -> FLOTANTE .)
    NOTIGUAL        reduce using rule 99 (arit -> FLOTANTE .)
    POR             reduce using rule 99 (arit -> FLOTANTE .)
    DIV             reduce using rule 99 (arit -> FLOTANTE .)
    MAS             reduce using rule 99 (arit -> FLOTANTE .)
    MENOS           reduce using rule 99 (arit -> FLOTANTE .)
    MOD             reduce using rule 99 (arit -> FLOTANTE .)
    ANDB            reduce using rule 99 (arit -> FLOTANTE .)
    SHIFTI          reduce using rule 99 (arit -> FLOTANTE .)
    SHIFTD          reduce using rule 99 (arit -> FLOTANTE .)
    XORB            reduce using rule 99 (arit -> FLOTANTE .)
    ORB             reduce using rule 99 (arit -> FLOTANTE .)
    AND             reduce using rule 99 (arit -> FLOTANTE .)
    ORR             reduce using rule 99 (arit -> FLOTANTE .)
    PARC            reduce using rule 99 (arit -> FLOTANTE .)
    COMA            reduce using rule 99 (arit -> FLOTANTE .)
    PUNTOYCOMA      reduce using rule 99 (arit -> FLOTANTE .)
    THEN            reduce using rule 99 (arit -> FLOTANTE .)
    WHEN            reduce using rule 99 (arit -> FLOTANTE .)
    ELSE            reduce using rule 99 (arit -> FLOTANTE .)


state 38

    (101) arit -> NOTB . expresion
    (74) expresion -> . log
    (75) log -> . expresion AND expresion
    (76) log -> . expresion ORR expresion
    (77) log -> . rel
    (78) rel -> . arit MAYOR arit
    (79) rel -> . arit MENOR arit
    (80) rel -> . arit MAYORIGUAL arit
    (81) rel -> . arit MENORIGUAL arit
    (82) rel -> . arit IGUALIGUAL arit
    (83) rel -> . arit NOTIGUAL arit
    (84) rel -> . arit
    (85) arit -> . arit POR arit
    (86) arit -> . arit DIV arit
    (87) arit -> . arit MAS arit
    (88) arit -> . arit MENOS arit
    (89) arit -> . arit MOD arit
    (90) arit -> . arit ANDB arit
    (91) arit -> . arit SHIFTI arit
    (92) arit -> . arit SHIFTD arit
    (93) arit -> . arit XORB arit
    (94) arit -> . arit ORB arit
    (95) arit -> . PARA expresion PARC
    (96) arit -> . ID
    (97) arit -> . CADENA
    (98) arit -> . ENTERO
    (99) arit -> . FLOTANTE
    (100) arit -> . MENOS expresion
    (101) arit -> . NOTB expresion
    (102) arit -> . NOT expresion
    (103) arit -> . TRUE
    (104) arit -> . FALSE

    PARA            shift and go to state 27
    ID              shift and go to state 26
    CADENA          shift and go to state 35
    ENTERO          shift and go to state 36
    FLOTANTE        shift and go to state 37
    MENOS           shift and go to state 34
    NOTB            shift and go to state 38
    NOT             shift and go to state 39
    TRUE            shift and go to state 40
    FALSE           shift and go to state 41

    expresion                      shift and go to state 72
    log                            shift and go to state 31
    rel                            shift and go to state 32
    arit                           shift and go to state 33

state 39

    (102) arit -> NOT . expresion
    (74) expresion -> . log
    (75) log -> . expresion AND expresion
    (76) log -> . expresion ORR expresion
    (77) log -> . rel
    (78) rel -> . arit MAYOR arit
    (79) rel -> . arit MENOR arit
    (80) rel -> . arit MAYORIGUAL arit
    (81) rel -> . arit MENORIGUAL arit
    (82) rel -> . arit IGUALIGUAL arit
    (83) rel -> . arit NOTIGUAL arit
    (84) rel -> . arit
    (85) arit -> . arit POR arit
    (86) arit -> . arit DIV arit
    (87) arit -> . arit MAS arit
    (88) arit -> . arit MENOS arit
    (89) arit -> . arit MOD arit
    (90) arit -> . arit ANDB arit
    (91) arit -> . arit SHIFTI arit
    (92) arit -> . arit SHIFTD arit
    (93) arit -> . arit XORB arit
    (94) arit -> . arit ORB arit
    (95) arit -> . PARA expresion PARC
    (96) arit -> . ID
    (97) arit -> . CADENA
    (98) arit -> . ENTERO
    (99) arit -> . FLOTANTE
    (100) arit -> . MENOS expresion
    (101) arit -> . NOTB expresion
    (102) arit -> . NOT expresion
    (103) arit -> . TRUE
    (104) arit -> . FALSE

    PARA            shift and go to state 27
    ID              shift and go to state 26
    CADENA          shift and go to state 35
    ENTERO          shift and go to state 36
    FLOTANTE        shift and go to state 37
    MENOS           shift and go to state 34
    NOTB            shift and go to state 38
    NOT             shift and go to state 39
    TRUE            shift and go to state 40
    FALSE           shift and go to state 41

    expresion                      shift and go to state 73
    log                            shift and go to state 31
    rel                            shift and go to state 32
    arit                           shift and go to state 33

state 40

    (103) arit -> TRUE .

    MAYOR           reduce using rule 103 (arit -> TRUE .)
    MENOR           reduce using rule 103 (arit -> TRUE .)
    MAYORIGUAL      reduce using rule 103 (arit -> TRUE .)
    MENORIGUAL      reduce using rule 103 (arit -> TRUE .)
    IGUALIGUAL      reduce using rule 103 (arit -> TRUE .)
    NOTIGUAL        reduce using rule 103 (arit -> TRUE .)
    POR             reduce using rule 103 (arit -> TRUE .)
    DIV             reduce using rule 103 (arit -> TRUE .)
    MAS             reduce using rule 103 (arit -> TRUE .)
    MENOS           reduce using rule 103 (arit -> TRUE .)
    MOD             reduce using rule 103 (arit -> TRUE .)
    ANDB            reduce using rule 103 (arit -> TRUE .)
    SHIFTI          reduce using rule 103 (arit -> TRUE .)
    SHIFTD          reduce using rule 103 (arit -> TRUE .)
    XORB            reduce using rule 103 (arit -> TRUE .)
    ORB             reduce using rule 103 (arit -> TRUE .)
    AND             reduce using rule 103 (arit -> TRUE .)
    ORR             reduce using rule 103 (arit -> TRUE .)
    PARC            reduce using rule 103 (arit -> TRUE .)
    COMA            reduce using rule 103 (arit -> TRUE .)
    PUNTOYCOMA      reduce using rule 103 (arit -> TRUE .)
    THEN            reduce using rule 103 (arit -> TRUE .)
    WHEN            reduce using rule 103 (arit -> TRUE .)
    ELSE            reduce using rule 103 (arit -> TRUE .)


state 41

    (104) arit -> FALSE .

    MAYOR           reduce using rule 104 (arit -> FALSE .)
    MENOR           reduce using rule 104 (arit -> FALSE .)
    MAYORIGUAL      reduce using rule 104 (arit -> FALSE .)
    MENORIGUAL      reduce using rule 104 (arit -> FALSE .)
    IGUALIGUAL      reduce using rule 104 (arit -> FALSE .)
    NOTIGUAL        reduce using rule 104 (arit -> FALSE .)
    POR             reduce using rule 104 (arit -> FALSE .)
    DIV             reduce using rule 104 (arit -> FALSE .)
    MAS             reduce using rule 104 (arit -> FALSE .)
    MENOS           reduce using rule 104 (arit -> FALSE .)
    MOD             reduce using rule 104 (arit -> FALSE .)
    ANDB            reduce using rule 104 (arit -> FALSE .)
    SHIFTI          reduce using rule 104 (arit -> FALSE .)
    SHIFTD          reduce using rule 104 (arit -> FALSE .)
    XORB            reduce using rule 104 (arit -> FALSE .)
    ORB             reduce using rule 104 (arit -> FALSE .)
    AND             reduce using rule 104 (arit -> FALSE .)
    ORR             reduce using rule 104 (arit -> FALSE .)
    PARC            reduce using rule 104 (arit -> FALSE .)
    COMA            reduce using rule 104 (arit -> FALSE .)
    PUNTOYCOMA      reduce using rule 104 (arit -> FALSE .)
    THEN            reduce using rule 104 (arit -> FALSE .)
    WHEN            reduce using rule 104 (arit -> FALSE .)
    ELSE            reduce using rule 104 (arit -> FALSE .)


state 42

    (28) llamada_funcion -> CALL ID PARA params . PARC PUNTOYCOMA
    (29) params -> params . COMA expresion

    PARC            shift and go to state 74
    COMA            shift and go to state 52


state 43

    (34) parametro -> ID . tipo
    (53) tipo -> . INTEGER
    (54) tipo -> . SMALLINT
    (55) tipo -> . BIGINT
    (56) tipo -> . DECIMAL
    (57) tipo -> . NUMERIC
    (58) tipo -> . REAL
    (59) tipo -> . CHAR
    (60) tipo -> . DOUBLE
    (61) tipo -> . PRECISION
    (62) tipo -> . MONEY
    (63) tipo -> . FLOAT
    (64) tipo -> . BOOLEAN
    (65) tipo -> . VOID
    (66) tipo -> . CHAR PARA ENTERO PARC
    (67) tipo -> . CHARACTER VARYING PARA ENTERO PARC
    (68) tipo -> . VARCHAR PARA ENTERO PARC
    (69) tipo -> . CHARACTER PARA ENTERO PARC
    (70) tipo -> . TEXT
    (71) tipo -> . TIME
    (72) tipo -> . TIMESTAMP
    (73) tipo -> . DATE

    INTEGER         shift and go to state 76
    SMALLINT        shift and go to state 77
    BIGINT          shift and go to state 78
    DECIMAL         shift and go to state 79
    NUMERIC         shift and go to state 80
    REAL            shift and go to state 81
    CHAR            shift and go to state 82
    DOUBLE          shift and go to state 83
    PRECISION       shift and go to state 84
    MONEY           shift and go to state 85
    FLOAT           shift and go to state 86
    BOOLEAN         shift and go to state 87
    VOID            shift and go to state 88
    CHARACTER       shift and go to state 89
    VARCHAR         shift and go to state 90
    TEXT            shift and go to state 91
    TIME            shift and go to state 92
    TIMESTAMP       shift and go to state 93
    DATE            shift and go to state 94

    tipo                           shift and go to state 75

state 44

    (19) funcion -> CREATE FUNCTION ID PARA parametros . PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PUNTOYCOMA DOLAR DOLAR LANGUAGE PLPGSQL PUNTOYCOMA
    (20) funcion -> CREATE FUNCTION ID PARA parametros . PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PUNTOYCOMA DOLAR DOLAR LANGUAGE PLPGSQL PUNTOYCOMA
    (32) parametros -> parametros . COMA parametro

    PARC            shift and go to state 95
    COMA            shift and go to state 96


state 45

    (33) parametros -> parametro .

    PARC            reduce using rule 33 (parametros -> parametro .)
    COMA            reduce using rule 33 (parametros -> parametro .)


state 46

    (35) parametro -> empty .

    PARC            reduce using rule 35 (parametro -> empty .)
    COMA            reduce using rule 35 (parametro -> empty .)


state 47

    (21) funcion -> CREATE OR REPLACE FUNCTION ID . PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PUNTOYCOMA DOLAR DOLAR LANGUAGE PLPGSQL PUNTOYCOMA
    (22) funcion -> CREATE OR REPLACE FUNCTION ID . PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PUNTOYCOMA DOLAR DOLAR LANGUAGE PLPGSQL PUNTOYCOMA

    PARA            shift and go to state 97


state 48

    (25) funcion -> CREATE OR REPLACE PROCEDURE ID . PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PUNTOYCOMA DOLAR DOLAR LANGUAGE PLPGSQL PUNTOYCOMA
    (26) funcion -> CREATE OR REPLACE PROCEDURE ID . PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PUNTOYCOMA DOLAR DOLAR LANGUAGE PLPGSQL PUNTOYCOMA

    PARA            shift and go to state 98


state 49

    (23) funcion -> CREATE PROCEDURE ID PARA parametros . PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PUNTOYCOMA DOLAR DOLAR LANGUAGE PLPGSQL PUNTOYCOMA
    (24) funcion -> CREATE PROCEDURE ID PARA parametros . PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PUNTOYCOMA DOLAR DOLAR LANGUAGE PLPGSQL PUNTOYCOMA
    (32) parametros -> parametros . COMA parametro

    PARC            shift and go to state 99
    COMA            shift and go to state 96


state 50

    (95) arit -> PARA expresion . PARC
    (75) log -> expresion . AND expresion
    (76) log -> expresion . ORR expresion

    PARC            shift and go to state 100
    AND             shift and go to state 53
    ORR             shift and go to state 54


state 51

    (27) llamada_funcion -> SELECT ID PARA params PARC . PUNTOYCOMA

    PUNTOYCOMA      shift and go to state 101


state 52

    (29) params -> params COMA . expresion
    (74) expresion -> . log
    (75) log -> . expresion AND expresion
    (76) log -> . expresion ORR expresion
    (77) log -> . rel
    (78) rel -> . arit MAYOR arit
    (79) rel -> . arit MENOR arit
    (80) rel -> . arit MAYORIGUAL arit
    (81) rel -> . arit MENORIGUAL arit
    (82) rel -> . arit IGUALIGUAL arit
    (83) rel -> . arit NOTIGUAL arit
    (84) rel -> . arit
    (85) arit -> . arit POR arit
    (86) arit -> . arit DIV arit
    (87) arit -> . arit MAS arit
    (88) arit -> . arit MENOS arit
    (89) arit -> . arit MOD arit
    (90) arit -> . arit ANDB arit
    (91) arit -> . arit SHIFTI arit
    (92) arit -> . arit SHIFTD arit
    (93) arit -> . arit XORB arit
    (94) arit -> . arit ORB arit
    (95) arit -> . PARA expresion PARC
    (96) arit -> . ID
    (97) arit -> . CADENA
    (98) arit -> . ENTERO
    (99) arit -> . FLOTANTE
    (100) arit -> . MENOS expresion
    (101) arit -> . NOTB expresion
    (102) arit -> . NOT expresion
    (103) arit -> . TRUE
    (104) arit -> . FALSE

    PARA            shift and go to state 27
    ID              shift and go to state 26
    CADENA          shift and go to state 35
    ENTERO          shift and go to state 36
    FLOTANTE        shift and go to state 37
    MENOS           shift and go to state 34
    NOTB            shift and go to state 38
    NOT             shift and go to state 39
    TRUE            shift and go to state 40
    FALSE           shift and go to state 41

    expresion                      shift and go to state 102
    log                            shift and go to state 31
    rel                            shift and go to state 32
    arit                           shift and go to state 33

state 53

    (75) log -> expresion AND . expresion
    (74) expresion -> . log
    (75) log -> . expresion AND expresion
    (76) log -> . expresion ORR expresion
    (77) log -> . rel
    (78) rel -> . arit MAYOR arit
    (79) rel -> . arit MENOR arit
    (80) rel -> . arit MAYORIGUAL arit
    (81) rel -> . arit MENORIGUAL arit
    (82) rel -> . arit IGUALIGUAL arit
    (83) rel -> . arit NOTIGUAL arit
    (84) rel -> . arit
    (85) arit -> . arit POR arit
    (86) arit -> . arit DIV arit
    (87) arit -> . arit MAS arit
    (88) arit -> . arit MENOS arit
    (89) arit -> . arit MOD arit
    (90) arit -> . arit ANDB arit
    (91) arit -> . arit SHIFTI arit
    (92) arit -> . arit SHIFTD arit
    (93) arit -> . arit XORB arit
    (94) arit -> . arit ORB arit
    (95) arit -> . PARA expresion PARC
    (96) arit -> . ID
    (97) arit -> . CADENA
    (98) arit -> . ENTERO
    (99) arit -> . FLOTANTE
    (100) arit -> . MENOS expresion
    (101) arit -> . NOTB expresion
    (102) arit -> . NOT expresion
    (103) arit -> . TRUE
    (104) arit -> . FALSE

    PARA            shift and go to state 27
    ID              shift and go to state 26
    CADENA          shift and go to state 35
    ENTERO          shift and go to state 36
    FLOTANTE        shift and go to state 37
    MENOS           shift and go to state 34
    NOTB            shift and go to state 38
    NOT             shift and go to state 39
    TRUE            shift and go to state 40
    FALSE           shift and go to state 41

    expresion                      shift and go to state 103
    log                            shift and go to state 31
    rel                            shift and go to state 32
    arit                           shift and go to state 33

state 54

    (76) log -> expresion ORR . expresion
    (74) expresion -> . log
    (75) log -> . expresion AND expresion
    (76) log -> . expresion ORR expresion
    (77) log -> . rel
    (78) rel -> . arit MAYOR arit
    (79) rel -> . arit MENOR arit
    (80) rel -> . arit MAYORIGUAL arit
    (81) rel -> . arit MENORIGUAL arit
    (82) rel -> . arit IGUALIGUAL arit
    (83) rel -> . arit NOTIGUAL arit
    (84) rel -> . arit
    (85) arit -> . arit POR arit
    (86) arit -> . arit DIV arit
    (87) arit -> . arit MAS arit
    (88) arit -> . arit MENOS arit
    (89) arit -> . arit MOD arit
    (90) arit -> . arit ANDB arit
    (91) arit -> . arit SHIFTI arit
    (92) arit -> . arit SHIFTD arit
    (93) arit -> . arit XORB arit
    (94) arit -> . arit ORB arit
    (95) arit -> . PARA expresion PARC
    (96) arit -> . ID
    (97) arit -> . CADENA
    (98) arit -> . ENTERO
    (99) arit -> . FLOTANTE
    (100) arit -> . MENOS expresion
    (101) arit -> . NOTB expresion
    (102) arit -> . NOT expresion
    (103) arit -> . TRUE
    (104) arit -> . FALSE

    PARA            shift and go to state 27
    ID              shift and go to state 26
    CADENA          shift and go to state 35
    ENTERO          shift and go to state 36
    FLOTANTE        shift and go to state 37
    MENOS           shift and go to state 34
    NOTB            shift and go to state 38
    NOT             shift and go to state 39
    TRUE            shift and go to state 40
    FALSE           shift and go to state 41

    expresion                      shift and go to state 104
    log                            shift and go to state 31
    rel                            shift and go to state 32
    arit                           shift and go to state 33

state 55

    (78) rel -> arit MAYOR . arit
    (85) arit -> . arit POR arit
    (86) arit -> . arit DIV arit
    (87) arit -> . arit MAS arit
    (88) arit -> . arit MENOS arit
    (89) arit -> . arit MOD arit
    (90) arit -> . arit ANDB arit
    (91) arit -> . arit SHIFTI arit
    (92) arit -> . arit SHIFTD arit
    (93) arit -> . arit XORB arit
    (94) arit -> . arit ORB arit
    (95) arit -> . PARA expresion PARC
    (96) arit -> . ID
    (97) arit -> . CADENA
    (98) arit -> . ENTERO
    (99) arit -> . FLOTANTE
    (100) arit -> . MENOS expresion
    (101) arit -> . NOTB expresion
    (102) arit -> . NOT expresion
    (103) arit -> . TRUE
    (104) arit -> . FALSE

    PARA            shift and go to state 27
    ID              shift and go to state 26
    CADENA          shift and go to state 35
    ENTERO          shift and go to state 36
    FLOTANTE        shift and go to state 37
    MENOS           shift and go to state 34
    NOTB            shift and go to state 38
    NOT             shift and go to state 39
    TRUE            shift and go to state 40
    FALSE           shift and go to state 41

    arit                           shift and go to state 105

state 56

    (79) rel -> arit MENOR . arit
    (85) arit -> . arit POR arit
    (86) arit -> . arit DIV arit
    (87) arit -> . arit MAS arit
    (88) arit -> . arit MENOS arit
    (89) arit -> . arit MOD arit
    (90) arit -> . arit ANDB arit
    (91) arit -> . arit SHIFTI arit
    (92) arit -> . arit SHIFTD arit
    (93) arit -> . arit XORB arit
    (94) arit -> . arit ORB arit
    (95) arit -> . PARA expresion PARC
    (96) arit -> . ID
    (97) arit -> . CADENA
    (98) arit -> . ENTERO
    (99) arit -> . FLOTANTE
    (100) arit -> . MENOS expresion
    (101) arit -> . NOTB expresion
    (102) arit -> . NOT expresion
    (103) arit -> . TRUE
    (104) arit -> . FALSE

    PARA            shift and go to state 27
    ID              shift and go to state 26
    CADENA          shift and go to state 35
    ENTERO          shift and go to state 36
    FLOTANTE        shift and go to state 37
    MENOS           shift and go to state 34
    NOTB            shift and go to state 38
    NOT             shift and go to state 39
    TRUE            shift and go to state 40
    FALSE           shift and go to state 41

    arit                           shift and go to state 106

state 57

    (80) rel -> arit MAYORIGUAL . arit
    (85) arit -> . arit POR arit
    (86) arit -> . arit DIV arit
    (87) arit -> . arit MAS arit
    (88) arit -> . arit MENOS arit
    (89) arit -> . arit MOD arit
    (90) arit -> . arit ANDB arit
    (91) arit -> . arit SHIFTI arit
    (92) arit -> . arit SHIFTD arit
    (93) arit -> . arit XORB arit
    (94) arit -> . arit ORB arit
    (95) arit -> . PARA expresion PARC
    (96) arit -> . ID
    (97) arit -> . CADENA
    (98) arit -> . ENTERO
    (99) arit -> . FLOTANTE
    (100) arit -> . MENOS expresion
    (101) arit -> . NOTB expresion
    (102) arit -> . NOT expresion
    (103) arit -> . TRUE
    (104) arit -> . FALSE

    PARA            shift and go to state 27
    ID              shift and go to state 26
    CADENA          shift and go to state 35
    ENTERO          shift and go to state 36
    FLOTANTE        shift and go to state 37
    MENOS           shift and go to state 34
    NOTB            shift and go to state 38
    NOT             shift and go to state 39
    TRUE            shift and go to state 40
    FALSE           shift and go to state 41

    arit                           shift and go to state 107

state 58

    (81) rel -> arit MENORIGUAL . arit
    (85) arit -> . arit POR arit
    (86) arit -> . arit DIV arit
    (87) arit -> . arit MAS arit
    (88) arit -> . arit MENOS arit
    (89) arit -> . arit MOD arit
    (90) arit -> . arit ANDB arit
    (91) arit -> . arit SHIFTI arit
    (92) arit -> . arit SHIFTD arit
    (93) arit -> . arit XORB arit
    (94) arit -> . arit ORB arit
    (95) arit -> . PARA expresion PARC
    (96) arit -> . ID
    (97) arit -> . CADENA
    (98) arit -> . ENTERO
    (99) arit -> . FLOTANTE
    (100) arit -> . MENOS expresion
    (101) arit -> . NOTB expresion
    (102) arit -> . NOT expresion
    (103) arit -> . TRUE
    (104) arit -> . FALSE

    PARA            shift and go to state 27
    ID              shift and go to state 26
    CADENA          shift and go to state 35
    ENTERO          shift and go to state 36
    FLOTANTE        shift and go to state 37
    MENOS           shift and go to state 34
    NOTB            shift and go to state 38
    NOT             shift and go to state 39
    TRUE            shift and go to state 40
    FALSE           shift and go to state 41

    arit                           shift and go to state 108

state 59

    (82) rel -> arit IGUALIGUAL . arit
    (85) arit -> . arit POR arit
    (86) arit -> . arit DIV arit
    (87) arit -> . arit MAS arit
    (88) arit -> . arit MENOS arit
    (89) arit -> . arit MOD arit
    (90) arit -> . arit ANDB arit
    (91) arit -> . arit SHIFTI arit
    (92) arit -> . arit SHIFTD arit
    (93) arit -> . arit XORB arit
    (94) arit -> . arit ORB arit
    (95) arit -> . PARA expresion PARC
    (96) arit -> . ID
    (97) arit -> . CADENA
    (98) arit -> . ENTERO
    (99) arit -> . FLOTANTE
    (100) arit -> . MENOS expresion
    (101) arit -> . NOTB expresion
    (102) arit -> . NOT expresion
    (103) arit -> . TRUE
    (104) arit -> . FALSE

    PARA            shift and go to state 27
    ID              shift and go to state 26
    CADENA          shift and go to state 35
    ENTERO          shift and go to state 36
    FLOTANTE        shift and go to state 37
    MENOS           shift and go to state 34
    NOTB            shift and go to state 38
    NOT             shift and go to state 39
    TRUE            shift and go to state 40
    FALSE           shift and go to state 41

    arit                           shift and go to state 109

state 60

    (83) rel -> arit NOTIGUAL . arit
    (85) arit -> . arit POR arit
    (86) arit -> . arit DIV arit
    (87) arit -> . arit MAS arit
    (88) arit -> . arit MENOS arit
    (89) arit -> . arit MOD arit
    (90) arit -> . arit ANDB arit
    (91) arit -> . arit SHIFTI arit
    (92) arit -> . arit SHIFTD arit
    (93) arit -> . arit XORB arit
    (94) arit -> . arit ORB arit
    (95) arit -> . PARA expresion PARC
    (96) arit -> . ID
    (97) arit -> . CADENA
    (98) arit -> . ENTERO
    (99) arit -> . FLOTANTE
    (100) arit -> . MENOS expresion
    (101) arit -> . NOTB expresion
    (102) arit -> . NOT expresion
    (103) arit -> . TRUE
    (104) arit -> . FALSE

    PARA            shift and go to state 27
    ID              shift and go to state 26
    CADENA          shift and go to state 35
    ENTERO          shift and go to state 36
    FLOTANTE        shift and go to state 37
    MENOS           shift and go to state 34
    NOTB            shift and go to state 38
    NOT             shift and go to state 39
    TRUE            shift and go to state 40
    FALSE           shift and go to state 41

    arit                           shift and go to state 110

state 61

    (85) arit -> arit POR . arit
    (85) arit -> . arit POR arit
    (86) arit -> . arit DIV arit
    (87) arit -> . arit MAS arit
    (88) arit -> . arit MENOS arit
    (89) arit -> . arit MOD arit
    (90) arit -> . arit ANDB arit
    (91) arit -> . arit SHIFTI arit
    (92) arit -> . arit SHIFTD arit
    (93) arit -> . arit XORB arit
    (94) arit -> . arit ORB arit
    (95) arit -> . PARA expresion PARC
    (96) arit -> . ID
    (97) arit -> . CADENA
    (98) arit -> . ENTERO
    (99) arit -> . FLOTANTE
    (100) arit -> . MENOS expresion
    (101) arit -> . NOTB expresion
    (102) arit -> . NOT expresion
    (103) arit -> . TRUE
    (104) arit -> . FALSE

    PARA            shift and go to state 27
    ID              shift and go to state 26
    CADENA          shift and go to state 35
    ENTERO          shift and go to state 36
    FLOTANTE        shift and go to state 37
    MENOS           shift and go to state 34
    NOTB            shift and go to state 38
    NOT             shift and go to state 39
    TRUE            shift and go to state 40
    FALSE           shift and go to state 41

    arit                           shift and go to state 111

state 62

    (86) arit -> arit DIV . arit
    (85) arit -> . arit POR arit
    (86) arit -> . arit DIV arit
    (87) arit -> . arit MAS arit
    (88) arit -> . arit MENOS arit
    (89) arit -> . arit MOD arit
    (90) arit -> . arit ANDB arit
    (91) arit -> . arit SHIFTI arit
    (92) arit -> . arit SHIFTD arit
    (93) arit -> . arit XORB arit
    (94) arit -> . arit ORB arit
    (95) arit -> . PARA expresion PARC
    (96) arit -> . ID
    (97) arit -> . CADENA
    (98) arit -> . ENTERO
    (99) arit -> . FLOTANTE
    (100) arit -> . MENOS expresion
    (101) arit -> . NOTB expresion
    (102) arit -> . NOT expresion
    (103) arit -> . TRUE
    (104) arit -> . FALSE

    PARA            shift and go to state 27
    ID              shift and go to state 26
    CADENA          shift and go to state 35
    ENTERO          shift and go to state 36
    FLOTANTE        shift and go to state 37
    MENOS           shift and go to state 34
    NOTB            shift and go to state 38
    NOT             shift and go to state 39
    TRUE            shift and go to state 40
    FALSE           shift and go to state 41

    arit                           shift and go to state 112

state 63

    (87) arit -> arit MAS . arit
    (85) arit -> . arit POR arit
    (86) arit -> . arit DIV arit
    (87) arit -> . arit MAS arit
    (88) arit -> . arit MENOS arit
    (89) arit -> . arit MOD arit
    (90) arit -> . arit ANDB arit
    (91) arit -> . arit SHIFTI arit
    (92) arit -> . arit SHIFTD arit
    (93) arit -> . arit XORB arit
    (94) arit -> . arit ORB arit
    (95) arit -> . PARA expresion PARC
    (96) arit -> . ID
    (97) arit -> . CADENA
    (98) arit -> . ENTERO
    (99) arit -> . FLOTANTE
    (100) arit -> . MENOS expresion
    (101) arit -> . NOTB expresion
    (102) arit -> . NOT expresion
    (103) arit -> . TRUE
    (104) arit -> . FALSE

    PARA            shift and go to state 27
    ID              shift and go to state 26
    CADENA          shift and go to state 35
    ENTERO          shift and go to state 36
    FLOTANTE        shift and go to state 37
    MENOS           shift and go to state 34
    NOTB            shift and go to state 38
    NOT             shift and go to state 39
    TRUE            shift and go to state 40
    FALSE           shift and go to state 41

    arit                           shift and go to state 113

state 64

    (88) arit -> arit MENOS . arit
    (85) arit -> . arit POR arit
    (86) arit -> . arit DIV arit
    (87) arit -> . arit MAS arit
    (88) arit -> . arit MENOS arit
    (89) arit -> . arit MOD arit
    (90) arit -> . arit ANDB arit
    (91) arit -> . arit SHIFTI arit
    (92) arit -> . arit SHIFTD arit
    (93) arit -> . arit XORB arit
    (94) arit -> . arit ORB arit
    (95) arit -> . PARA expresion PARC
    (96) arit -> . ID
    (97) arit -> . CADENA
    (98) arit -> . ENTERO
    (99) arit -> . FLOTANTE
    (100) arit -> . MENOS expresion
    (101) arit -> . NOTB expresion
    (102) arit -> . NOT expresion
    (103) arit -> . TRUE
    (104) arit -> . FALSE

    PARA            shift and go to state 27
    ID              shift and go to state 26
    CADENA          shift and go to state 35
    ENTERO          shift and go to state 36
    FLOTANTE        shift and go to state 37
    MENOS           shift and go to state 34
    NOTB            shift and go to state 38
    NOT             shift and go to state 39
    TRUE            shift and go to state 40
    FALSE           shift and go to state 41

    arit                           shift and go to state 114

state 65

    (89) arit -> arit MOD . arit
    (85) arit -> . arit POR arit
    (86) arit -> . arit DIV arit
    (87) arit -> . arit MAS arit
    (88) arit -> . arit MENOS arit
    (89) arit -> . arit MOD arit
    (90) arit -> . arit ANDB arit
    (91) arit -> . arit SHIFTI arit
    (92) arit -> . arit SHIFTD arit
    (93) arit -> . arit XORB arit
    (94) arit -> . arit ORB arit
    (95) arit -> . PARA expresion PARC
    (96) arit -> . ID
    (97) arit -> . CADENA
    (98) arit -> . ENTERO
    (99) arit -> . FLOTANTE
    (100) arit -> . MENOS expresion
    (101) arit -> . NOTB expresion
    (102) arit -> . NOT expresion
    (103) arit -> . TRUE
    (104) arit -> . FALSE

    PARA            shift and go to state 27
    ID              shift and go to state 26
    CADENA          shift and go to state 35
    ENTERO          shift and go to state 36
    FLOTANTE        shift and go to state 37
    MENOS           shift and go to state 34
    NOTB            shift and go to state 38
    NOT             shift and go to state 39
    TRUE            shift and go to state 40
    FALSE           shift and go to state 41

    arit                           shift and go to state 115

state 66

    (90) arit -> arit ANDB . arit
    (85) arit -> . arit POR arit
    (86) arit -> . arit DIV arit
    (87) arit -> . arit MAS arit
    (88) arit -> . arit MENOS arit
    (89) arit -> . arit MOD arit
    (90) arit -> . arit ANDB arit
    (91) arit -> . arit SHIFTI arit
    (92) arit -> . arit SHIFTD arit
    (93) arit -> . arit XORB arit
    (94) arit -> . arit ORB arit
    (95) arit -> . PARA expresion PARC
    (96) arit -> . ID
    (97) arit -> . CADENA
    (98) arit -> . ENTERO
    (99) arit -> . FLOTANTE
    (100) arit -> . MENOS expresion
    (101) arit -> . NOTB expresion
    (102) arit -> . NOT expresion
    (103) arit -> . TRUE
    (104) arit -> . FALSE

    PARA            shift and go to state 27
    ID              shift and go to state 26
    CADENA          shift and go to state 35
    ENTERO          shift and go to state 36
    FLOTANTE        shift and go to state 37
    MENOS           shift and go to state 34
    NOTB            shift and go to state 38
    NOT             shift and go to state 39
    TRUE            shift and go to state 40
    FALSE           shift and go to state 41

    arit                           shift and go to state 116

state 67

    (91) arit -> arit SHIFTI . arit
    (85) arit -> . arit POR arit
    (86) arit -> . arit DIV arit
    (87) arit -> . arit MAS arit
    (88) arit -> . arit MENOS arit
    (89) arit -> . arit MOD arit
    (90) arit -> . arit ANDB arit
    (91) arit -> . arit SHIFTI arit
    (92) arit -> . arit SHIFTD arit
    (93) arit -> . arit XORB arit
    (94) arit -> . arit ORB arit
    (95) arit -> . PARA expresion PARC
    (96) arit -> . ID
    (97) arit -> . CADENA
    (98) arit -> . ENTERO
    (99) arit -> . FLOTANTE
    (100) arit -> . MENOS expresion
    (101) arit -> . NOTB expresion
    (102) arit -> . NOT expresion
    (103) arit -> . TRUE
    (104) arit -> . FALSE

    PARA            shift and go to state 27
    ID              shift and go to state 26
    CADENA          shift and go to state 35
    ENTERO          shift and go to state 36
    FLOTANTE        shift and go to state 37
    MENOS           shift and go to state 34
    NOTB            shift and go to state 38
    NOT             shift and go to state 39
    TRUE            shift and go to state 40
    FALSE           shift and go to state 41

    arit                           shift and go to state 117

state 68

    (92) arit -> arit SHIFTD . arit
    (85) arit -> . arit POR arit
    (86) arit -> . arit DIV arit
    (87) arit -> . arit MAS arit
    (88) arit -> . arit MENOS arit
    (89) arit -> . arit MOD arit
    (90) arit -> . arit ANDB arit
    (91) arit -> . arit SHIFTI arit
    (92) arit -> . arit SHIFTD arit
    (93) arit -> . arit XORB arit
    (94) arit -> . arit ORB arit
    (95) arit -> . PARA expresion PARC
    (96) arit -> . ID
    (97) arit -> . CADENA
    (98) arit -> . ENTERO
    (99) arit -> . FLOTANTE
    (100) arit -> . MENOS expresion
    (101) arit -> . NOTB expresion
    (102) arit -> . NOT expresion
    (103) arit -> . TRUE
    (104) arit -> . FALSE

    PARA            shift and go to state 27
    ID              shift and go to state 26
    CADENA          shift and go to state 35
    ENTERO          shift and go to state 36
    FLOTANTE        shift and go to state 37
    MENOS           shift and go to state 34
    NOTB            shift and go to state 38
    NOT             shift and go to state 39
    TRUE            shift and go to state 40
    FALSE           shift and go to state 41

    arit                           shift and go to state 118

state 69

    (93) arit -> arit XORB . arit
    (85) arit -> . arit POR arit
    (86) arit -> . arit DIV arit
    (87) arit -> . arit MAS arit
    (88) arit -> . arit MENOS arit
    (89) arit -> . arit MOD arit
    (90) arit -> . arit ANDB arit
    (91) arit -> . arit SHIFTI arit
    (92) arit -> . arit SHIFTD arit
    (93) arit -> . arit XORB arit
    (94) arit -> . arit ORB arit
    (95) arit -> . PARA expresion PARC
    (96) arit -> . ID
    (97) arit -> . CADENA
    (98) arit -> . ENTERO
    (99) arit -> . FLOTANTE
    (100) arit -> . MENOS expresion
    (101) arit -> . NOTB expresion
    (102) arit -> . NOT expresion
    (103) arit -> . TRUE
    (104) arit -> . FALSE

    PARA            shift and go to state 27
    ID              shift and go to state 26
    CADENA          shift and go to state 35
    ENTERO          shift and go to state 36
    FLOTANTE        shift and go to state 37
    MENOS           shift and go to state 34
    NOTB            shift and go to state 38
    NOT             shift and go to state 39
    TRUE            shift and go to state 40
    FALSE           shift and go to state 41

    arit                           shift and go to state 119

state 70

    (94) arit -> arit ORB . arit
    (85) arit -> . arit POR arit
    (86) arit -> . arit DIV arit
    (87) arit -> . arit MAS arit
    (88) arit -> . arit MENOS arit
    (89) arit -> . arit MOD arit
    (90) arit -> . arit ANDB arit
    (91) arit -> . arit SHIFTI arit
    (92) arit -> . arit SHIFTD arit
    (93) arit -> . arit XORB arit
    (94) arit -> . arit ORB arit
    (95) arit -> . PARA expresion PARC
    (96) arit -> . ID
    (97) arit -> . CADENA
    (98) arit -> . ENTERO
    (99) arit -> . FLOTANTE
    (100) arit -> . MENOS expresion
    (101) arit -> . NOTB expresion
    (102) arit -> . NOT expresion
    (103) arit -> . TRUE
    (104) arit -> . FALSE

    PARA            shift and go to state 27
    ID              shift and go to state 26
    CADENA          shift and go to state 35
    ENTERO          shift and go to state 36
    FLOTANTE        shift and go to state 37
    MENOS           shift and go to state 34
    NOTB            shift and go to state 38
    NOT             shift and go to state 39
    TRUE            shift and go to state 40
    FALSE           shift and go to state 41

    arit                           shift and go to state 120

state 71

    (100) arit -> MENOS expresion .
    (75) log -> expresion . AND expresion
    (76) log -> expresion . ORR expresion

    MAYOR           reduce using rule 100 (arit -> MENOS expresion .)
    MENOR           reduce using rule 100 (arit -> MENOS expresion .)
    MAYORIGUAL      reduce using rule 100 (arit -> MENOS expresion .)
    MENORIGUAL      reduce using rule 100 (arit -> MENOS expresion .)
    IGUALIGUAL      reduce using rule 100 (arit -> MENOS expresion .)
    NOTIGUAL        reduce using rule 100 (arit -> MENOS expresion .)
    POR             reduce using rule 100 (arit -> MENOS expresion .)
    DIV             reduce using rule 100 (arit -> MENOS expresion .)
    MAS             reduce using rule 100 (arit -> MENOS expresion .)
    MENOS           reduce using rule 100 (arit -> MENOS expresion .)
    MOD             reduce using rule 100 (arit -> MENOS expresion .)
    ANDB            reduce using rule 100 (arit -> MENOS expresion .)
    SHIFTI          reduce using rule 100 (arit -> MENOS expresion .)
    SHIFTD          reduce using rule 100 (arit -> MENOS expresion .)
    XORB            reduce using rule 100 (arit -> MENOS expresion .)
    ORB             reduce using rule 100 (arit -> MENOS expresion .)
    AND             reduce using rule 100 (arit -> MENOS expresion .)
    ORR             reduce using rule 100 (arit -> MENOS expresion .)
    PARC            reduce using rule 100 (arit -> MENOS expresion .)
    COMA            reduce using rule 100 (arit -> MENOS expresion .)
    PUNTOYCOMA      reduce using rule 100 (arit -> MENOS expresion .)
    THEN            reduce using rule 100 (arit -> MENOS expresion .)
    WHEN            reduce using rule 100 (arit -> MENOS expresion .)
    ELSE            reduce using rule 100 (arit -> MENOS expresion .)

  ! AND             [ shift and go to state 53 ]
  ! ORR             [ shift and go to state 54 ]


state 72

    (101) arit -> NOTB expresion .
    (75) log -> expresion . AND expresion
    (76) log -> expresion . ORR expresion

    MAYOR           reduce using rule 101 (arit -> NOTB expresion .)
    MENOR           reduce using rule 101 (arit -> NOTB expresion .)
    MAYORIGUAL      reduce using rule 101 (arit -> NOTB expresion .)
    MENORIGUAL      reduce using rule 101 (arit -> NOTB expresion .)
    IGUALIGUAL      reduce using rule 101 (arit -> NOTB expresion .)
    NOTIGUAL        reduce using rule 101 (arit -> NOTB expresion .)
    POR             reduce using rule 101 (arit -> NOTB expresion .)
    DIV             reduce using rule 101 (arit -> NOTB expresion .)
    MAS             reduce using rule 101 (arit -> NOTB expresion .)
    MENOS           reduce using rule 101 (arit -> NOTB expresion .)
    MOD             reduce using rule 101 (arit -> NOTB expresion .)
    ANDB            reduce using rule 101 (arit -> NOTB expresion .)
    SHIFTI          reduce using rule 101 (arit -> NOTB expresion .)
    SHIFTD          reduce using rule 101 (arit -> NOTB expresion .)
    XORB            reduce using rule 101 (arit -> NOTB expresion .)
    ORB             reduce using rule 101 (arit -> NOTB expresion .)
    AND             reduce using rule 101 (arit -> NOTB expresion .)
    ORR             reduce using rule 101 (arit -> NOTB expresion .)
    PARC            reduce using rule 101 (arit -> NOTB expresion .)
    COMA            reduce using rule 101 (arit -> NOTB expresion .)
    PUNTOYCOMA      reduce using rule 101 (arit -> NOTB expresion .)
    THEN            reduce using rule 101 (arit -> NOTB expresion .)
    WHEN            reduce using rule 101 (arit -> NOTB expresion .)
    ELSE            reduce using rule 101 (arit -> NOTB expresion .)

  ! AND             [ shift and go to state 53 ]
  ! ORR             [ shift and go to state 54 ]


state 73

    (102) arit -> NOT expresion .
    (75) log -> expresion . AND expresion
    (76) log -> expresion . ORR expresion

    MAYOR           reduce using rule 102 (arit -> NOT expresion .)
    MENOR           reduce using rule 102 (arit -> NOT expresion .)
    MAYORIGUAL      reduce using rule 102 (arit -> NOT expresion .)
    MENORIGUAL      reduce using rule 102 (arit -> NOT expresion .)
    IGUALIGUAL      reduce using rule 102 (arit -> NOT expresion .)
    NOTIGUAL        reduce using rule 102 (arit -> NOT expresion .)
    POR             reduce using rule 102 (arit -> NOT expresion .)
    DIV             reduce using rule 102 (arit -> NOT expresion .)
    MAS             reduce using rule 102 (arit -> NOT expresion .)
    MENOS           reduce using rule 102 (arit -> NOT expresion .)
    MOD             reduce using rule 102 (arit -> NOT expresion .)
    ANDB            reduce using rule 102 (arit -> NOT expresion .)
    SHIFTI          reduce using rule 102 (arit -> NOT expresion .)
    SHIFTD          reduce using rule 102 (arit -> NOT expresion .)
    XORB            reduce using rule 102 (arit -> NOT expresion .)
    ORB             reduce using rule 102 (arit -> NOT expresion .)
    AND             reduce using rule 102 (arit -> NOT expresion .)
    ORR             reduce using rule 102 (arit -> NOT expresion .)
    PARC            reduce using rule 102 (arit -> NOT expresion .)
    COMA            reduce using rule 102 (arit -> NOT expresion .)
    PUNTOYCOMA      reduce using rule 102 (arit -> NOT expresion .)
    THEN            reduce using rule 102 (arit -> NOT expresion .)
    WHEN            reduce using rule 102 (arit -> NOT expresion .)
    ELSE            reduce using rule 102 (arit -> NOT expresion .)

  ! AND             [ shift and go to state 53 ]
  ! ORR             [ shift and go to state 54 ]


state 74

    (28) llamada_funcion -> CALL ID PARA params PARC . PUNTOYCOMA

    PUNTOYCOMA      shift and go to state 121


state 75

    (34) parametro -> ID tipo .

    PARC            reduce using rule 34 (parametro -> ID tipo .)
    COMA            reduce using rule 34 (parametro -> ID tipo .)


state 76

    (53) tipo -> INTEGER .

    PARC            reduce using rule 53 (tipo -> INTEGER .)
    COMA            reduce using rule 53 (tipo -> INTEGER .)
    AS              reduce using rule 53 (tipo -> INTEGER .)
    DOSPUNTOS       reduce using rule 53 (tipo -> INTEGER .)
    PUNTOYCOMA      reduce using rule 53 (tipo -> INTEGER .)
    DEFAULT         reduce using rule 53 (tipo -> INTEGER .)


state 77

    (54) tipo -> SMALLINT .

    PARC            reduce using rule 54 (tipo -> SMALLINT .)
    COMA            reduce using rule 54 (tipo -> SMALLINT .)
    AS              reduce using rule 54 (tipo -> SMALLINT .)
    DOSPUNTOS       reduce using rule 54 (tipo -> SMALLINT .)
    PUNTOYCOMA      reduce using rule 54 (tipo -> SMALLINT .)
    DEFAULT         reduce using rule 54 (tipo -> SMALLINT .)


state 78

    (55) tipo -> BIGINT .

    PARC            reduce using rule 55 (tipo -> BIGINT .)
    COMA            reduce using rule 55 (tipo -> BIGINT .)
    AS              reduce using rule 55 (tipo -> BIGINT .)
    DOSPUNTOS       reduce using rule 55 (tipo -> BIGINT .)
    PUNTOYCOMA      reduce using rule 55 (tipo -> BIGINT .)
    DEFAULT         reduce using rule 55 (tipo -> BIGINT .)


state 79

    (56) tipo -> DECIMAL .

    PARC            reduce using rule 56 (tipo -> DECIMAL .)
    COMA            reduce using rule 56 (tipo -> DECIMAL .)
    AS              reduce using rule 56 (tipo -> DECIMAL .)
    DOSPUNTOS       reduce using rule 56 (tipo -> DECIMAL .)
    PUNTOYCOMA      reduce using rule 56 (tipo -> DECIMAL .)
    DEFAULT         reduce using rule 56 (tipo -> DECIMAL .)


state 80

    (57) tipo -> NUMERIC .

    PARC            reduce using rule 57 (tipo -> NUMERIC .)
    COMA            reduce using rule 57 (tipo -> NUMERIC .)
    AS              reduce using rule 57 (tipo -> NUMERIC .)
    DOSPUNTOS       reduce using rule 57 (tipo -> NUMERIC .)
    PUNTOYCOMA      reduce using rule 57 (tipo -> NUMERIC .)
    DEFAULT         reduce using rule 57 (tipo -> NUMERIC .)


state 81

    (58) tipo -> REAL .

    PARC            reduce using rule 58 (tipo -> REAL .)
    COMA            reduce using rule 58 (tipo -> REAL .)
    AS              reduce using rule 58 (tipo -> REAL .)
    DOSPUNTOS       reduce using rule 58 (tipo -> REAL .)
    PUNTOYCOMA      reduce using rule 58 (tipo -> REAL .)
    DEFAULT         reduce using rule 58 (tipo -> REAL .)


state 82

    (59) tipo -> CHAR .
    (66) tipo -> CHAR . PARA ENTERO PARC

    PARC            reduce using rule 59 (tipo -> CHAR .)
    COMA            reduce using rule 59 (tipo -> CHAR .)
    AS              reduce using rule 59 (tipo -> CHAR .)
    DOSPUNTOS       reduce using rule 59 (tipo -> CHAR .)
    PUNTOYCOMA      reduce using rule 59 (tipo -> CHAR .)
    DEFAULT         reduce using rule 59 (tipo -> CHAR .)
    PARA            shift and go to state 122


state 83

    (60) tipo -> DOUBLE .

    PARC            reduce using rule 60 (tipo -> DOUBLE .)
    COMA            reduce using rule 60 (tipo -> DOUBLE .)
    AS              reduce using rule 60 (tipo -> DOUBLE .)
    DOSPUNTOS       reduce using rule 60 (tipo -> DOUBLE .)
    PUNTOYCOMA      reduce using rule 60 (tipo -> DOUBLE .)
    DEFAULT         reduce using rule 60 (tipo -> DOUBLE .)


state 84

    (61) tipo -> PRECISION .

    PARC            reduce using rule 61 (tipo -> PRECISION .)
    COMA            reduce using rule 61 (tipo -> PRECISION .)
    AS              reduce using rule 61 (tipo -> PRECISION .)
    DOSPUNTOS       reduce using rule 61 (tipo -> PRECISION .)
    PUNTOYCOMA      reduce using rule 61 (tipo -> PRECISION .)
    DEFAULT         reduce using rule 61 (tipo -> PRECISION .)


state 85

    (62) tipo -> MONEY .

    PARC            reduce using rule 62 (tipo -> MONEY .)
    COMA            reduce using rule 62 (tipo -> MONEY .)
    AS              reduce using rule 62 (tipo -> MONEY .)
    DOSPUNTOS       reduce using rule 62 (tipo -> MONEY .)
    PUNTOYCOMA      reduce using rule 62 (tipo -> MONEY .)
    DEFAULT         reduce using rule 62 (tipo -> MONEY .)


state 86

    (63) tipo -> FLOAT .

    PARC            reduce using rule 63 (tipo -> FLOAT .)
    COMA            reduce using rule 63 (tipo -> FLOAT .)
    AS              reduce using rule 63 (tipo -> FLOAT .)
    DOSPUNTOS       reduce using rule 63 (tipo -> FLOAT .)
    PUNTOYCOMA      reduce using rule 63 (tipo -> FLOAT .)
    DEFAULT         reduce using rule 63 (tipo -> FLOAT .)


state 87

    (64) tipo -> BOOLEAN .

    PARC            reduce using rule 64 (tipo -> BOOLEAN .)
    COMA            reduce using rule 64 (tipo -> BOOLEAN .)
    AS              reduce using rule 64 (tipo -> BOOLEAN .)
    DOSPUNTOS       reduce using rule 64 (tipo -> BOOLEAN .)
    PUNTOYCOMA      reduce using rule 64 (tipo -> BOOLEAN .)
    DEFAULT         reduce using rule 64 (tipo -> BOOLEAN .)


state 88

    (65) tipo -> VOID .

    PARC            reduce using rule 65 (tipo -> VOID .)
    COMA            reduce using rule 65 (tipo -> VOID .)
    AS              reduce using rule 65 (tipo -> VOID .)
    DOSPUNTOS       reduce using rule 65 (tipo -> VOID .)
    PUNTOYCOMA      reduce using rule 65 (tipo -> VOID .)
    DEFAULT         reduce using rule 65 (tipo -> VOID .)


state 89

    (67) tipo -> CHARACTER . VARYING PARA ENTERO PARC
    (69) tipo -> CHARACTER . PARA ENTERO PARC

    VARYING         shift and go to state 123
    PARA            shift and go to state 124


state 90

    (68) tipo -> VARCHAR . PARA ENTERO PARC

    PARA            shift and go to state 125


state 91

    (70) tipo -> TEXT .

    PARC            reduce using rule 70 (tipo -> TEXT .)
    COMA            reduce using rule 70 (tipo -> TEXT .)
    AS              reduce using rule 70 (tipo -> TEXT .)
    DOSPUNTOS       reduce using rule 70 (tipo -> TEXT .)
    PUNTOYCOMA      reduce using rule 70 (tipo -> TEXT .)
    DEFAULT         reduce using rule 70 (tipo -> TEXT .)


state 92

    (71) tipo -> TIME .

    PARC            reduce using rule 71 (tipo -> TIME .)
    COMA            reduce using rule 71 (tipo -> TIME .)
    AS              reduce using rule 71 (tipo -> TIME .)
    DOSPUNTOS       reduce using rule 71 (tipo -> TIME .)
    PUNTOYCOMA      reduce using rule 71 (tipo -> TIME .)
    DEFAULT         reduce using rule 71 (tipo -> TIME .)


state 93

    (72) tipo -> TIMESTAMP .

    PARC            reduce using rule 72 (tipo -> TIMESTAMP .)
    COMA            reduce using rule 72 (tipo -> TIMESTAMP .)
    AS              reduce using rule 72 (tipo -> TIMESTAMP .)
    DOSPUNTOS       reduce using rule 72 (tipo -> TIMESTAMP .)
    PUNTOYCOMA      reduce using rule 72 (tipo -> TIMESTAMP .)
    DEFAULT         reduce using rule 72 (tipo -> TIMESTAMP .)


state 94

    (73) tipo -> DATE .

    PARC            reduce using rule 73 (tipo -> DATE .)
    COMA            reduce using rule 73 (tipo -> DATE .)
    AS              reduce using rule 73 (tipo -> DATE .)
    DOSPUNTOS       reduce using rule 73 (tipo -> DATE .)
    PUNTOYCOMA      reduce using rule 73 (tipo -> DATE .)
    DEFAULT         reduce using rule 73 (tipo -> DATE .)


state 95

    (19) funcion -> CREATE FUNCTION ID PARA parametros PARC . RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PUNTOYCOMA DOLAR DOLAR LANGUAGE PLPGSQL PUNTOYCOMA
    (20) funcion -> CREATE FUNCTION ID PARA parametros PARC . RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PUNTOYCOMA DOLAR DOLAR LANGUAGE PLPGSQL PUNTOYCOMA

    RETURNS         shift and go to state 126


state 96

    (32) parametros -> parametros COMA . parametro
    (34) parametro -> . ID tipo
    (35) parametro -> . empty
    (105) empty -> .

    ID              shift and go to state 43
    PARC            reduce using rule 105 (empty -> .)
    COMA            reduce using rule 105 (empty -> .)

    parametro                      shift and go to state 127
    empty                          shift and go to state 46

state 97

    (21) funcion -> CREATE OR REPLACE FUNCTION ID PARA . parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PUNTOYCOMA DOLAR DOLAR LANGUAGE PLPGSQL PUNTOYCOMA
    (22) funcion -> CREATE OR REPLACE FUNCTION ID PARA . parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PUNTOYCOMA DOLAR DOLAR LANGUAGE PLPGSQL PUNTOYCOMA
    (32) parametros -> . parametros COMA parametro
    (33) parametros -> . parametro
    (34) parametro -> . ID tipo
    (35) parametro -> . empty
    (105) empty -> .

    ID              shift and go to state 43
    PARC            reduce using rule 105 (empty -> .)
    COMA            reduce using rule 105 (empty -> .)

    parametros                     shift and go to state 128
    parametro                      shift and go to state 45
    empty                          shift and go to state 46

state 98

    (25) funcion -> CREATE OR REPLACE PROCEDURE ID PARA . parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PUNTOYCOMA DOLAR DOLAR LANGUAGE PLPGSQL PUNTOYCOMA
    (26) funcion -> CREATE OR REPLACE PROCEDURE ID PARA . parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PUNTOYCOMA DOLAR DOLAR LANGUAGE PLPGSQL PUNTOYCOMA
    (32) parametros -> . parametros COMA parametro
    (33) parametros -> . parametro
    (34) parametro -> . ID tipo
    (35) parametro -> . empty
    (105) empty -> .

    ID              shift and go to state 43
    PARC            reduce using rule 105 (empty -> .)
    COMA            reduce using rule 105 (empty -> .)

    parametros                     shift and go to state 129
    parametro                      shift and go to state 45
    empty                          shift and go to state 46

state 99

    (23) funcion -> CREATE PROCEDURE ID PARA parametros PARC . RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PUNTOYCOMA DOLAR DOLAR LANGUAGE PLPGSQL PUNTOYCOMA
    (24) funcion -> CREATE PROCEDURE ID PARA parametros PARC . RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PUNTOYCOMA DOLAR DOLAR LANGUAGE PLPGSQL PUNTOYCOMA

    RETURNS         shift and go to state 130


state 100

    (95) arit -> PARA expresion PARC .

    MAYOR           reduce using rule 95 (arit -> PARA expresion PARC .)
    MENOR           reduce using rule 95 (arit -> PARA expresion PARC .)
    MAYORIGUAL      reduce using rule 95 (arit -> PARA expresion PARC .)
    MENORIGUAL      reduce using rule 95 (arit -> PARA expresion PARC .)
    IGUALIGUAL      reduce using rule 95 (arit -> PARA expresion PARC .)
    NOTIGUAL        reduce using rule 95 (arit -> PARA expresion PARC .)
    POR             reduce using rule 95 (arit -> PARA expresion PARC .)
    DIV             reduce using rule 95 (arit -> PARA expresion PARC .)
    MAS             reduce using rule 95 (arit -> PARA expresion PARC .)
    MENOS           reduce using rule 95 (arit -> PARA expresion PARC .)
    MOD             reduce using rule 95 (arit -> PARA expresion PARC .)
    ANDB            reduce using rule 95 (arit -> PARA expresion PARC .)
    SHIFTI          reduce using rule 95 (arit -> PARA expresion PARC .)
    SHIFTD          reduce using rule 95 (arit -> PARA expresion PARC .)
    XORB            reduce using rule 95 (arit -> PARA expresion PARC .)
    ORB             reduce using rule 95 (arit -> PARA expresion PARC .)
    AND             reduce using rule 95 (arit -> PARA expresion PARC .)
    ORR             reduce using rule 95 (arit -> PARA expresion PARC .)
    PARC            reduce using rule 95 (arit -> PARA expresion PARC .)
    COMA            reduce using rule 95 (arit -> PARA expresion PARC .)
    PUNTOYCOMA      reduce using rule 95 (arit -> PARA expresion PARC .)
    THEN            reduce using rule 95 (arit -> PARA expresion PARC .)
    WHEN            reduce using rule 95 (arit -> PARA expresion PARC .)
    ELSE            reduce using rule 95 (arit -> PARA expresion PARC .)


state 101

    (27) llamada_funcion -> SELECT ID PARA params PARC PUNTOYCOMA .

    error           reduce using rule 27 (llamada_funcion -> SELECT ID PARA params PARC PUNTOYCOMA .)
    CREATE          reduce using rule 27 (llamada_funcion -> SELECT ID PARA params PARC PUNTOYCOMA .)
    SELECT          reduce using rule 27 (llamada_funcion -> SELECT ID PARA params PARC PUNTOYCOMA .)
    CALL            reduce using rule 27 (llamada_funcion -> SELECT ID PARA params PARC PUNTOYCOMA .)
    $end            reduce using rule 27 (llamada_funcion -> SELECT ID PARA params PARC PUNTOYCOMA .)
    END             reduce using rule 27 (llamada_funcion -> SELECT ID PARA params PARC PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 27 (llamada_funcion -> SELECT ID PARA params PARC PUNTOYCOMA .)
    ID              reduce using rule 27 (llamada_funcion -> SELECT ID PARA params PARC PUNTOYCOMA .)
    RAISE           reduce using rule 27 (llamada_funcion -> SELECT ID PARA params PARC PUNTOYCOMA .)
    IF              reduce using rule 27 (llamada_funcion -> SELECT ID PARA params PARC PUNTOYCOMA .)
    CASE            reduce using rule 27 (llamada_funcion -> SELECT ID PARA params PARC PUNTOYCOMA .)
    BEGIN           reduce using rule 27 (llamada_funcion -> SELECT ID PARA params PARC PUNTOYCOMA .)
    ELSE            reduce using rule 27 (llamada_funcion -> SELECT ID PARA params PARC PUNTOYCOMA .)
    ELSEIF          reduce using rule 27 (llamada_funcion -> SELECT ID PARA params PARC PUNTOYCOMA .)
    WHEN            reduce using rule 27 (llamada_funcion -> SELECT ID PARA params PARC PUNTOYCOMA .)


state 102

    (29) params -> params COMA expresion .
    (75) log -> expresion . AND expresion
    (76) log -> expresion . ORR expresion

    PARC            reduce using rule 29 (params -> params COMA expresion .)
    COMA            reduce using rule 29 (params -> params COMA expresion .)
    AND             shift and go to state 53
    ORR             shift and go to state 54


state 103

    (75) log -> expresion AND expresion .
    (75) log -> expresion . AND expresion
    (76) log -> expresion . ORR expresion

    AND             reduce using rule 75 (log -> expresion AND expresion .)
    ORR             reduce using rule 75 (log -> expresion AND expresion .)
    PARC            reduce using rule 75 (log -> expresion AND expresion .)
    COMA            reduce using rule 75 (log -> expresion AND expresion .)
    MAYOR           reduce using rule 75 (log -> expresion AND expresion .)
    MENOR           reduce using rule 75 (log -> expresion AND expresion .)
    MAYORIGUAL      reduce using rule 75 (log -> expresion AND expresion .)
    MENORIGUAL      reduce using rule 75 (log -> expresion AND expresion .)
    IGUALIGUAL      reduce using rule 75 (log -> expresion AND expresion .)
    NOTIGUAL        reduce using rule 75 (log -> expresion AND expresion .)
    POR             reduce using rule 75 (log -> expresion AND expresion .)
    DIV             reduce using rule 75 (log -> expresion AND expresion .)
    MAS             reduce using rule 75 (log -> expresion AND expresion .)
    MENOS           reduce using rule 75 (log -> expresion AND expresion .)
    MOD             reduce using rule 75 (log -> expresion AND expresion .)
    ANDB            reduce using rule 75 (log -> expresion AND expresion .)
    SHIFTI          reduce using rule 75 (log -> expresion AND expresion .)
    SHIFTD          reduce using rule 75 (log -> expresion AND expresion .)
    XORB            reduce using rule 75 (log -> expresion AND expresion .)
    ORB             reduce using rule 75 (log -> expresion AND expresion .)
    PUNTOYCOMA      reduce using rule 75 (log -> expresion AND expresion .)
    THEN            reduce using rule 75 (log -> expresion AND expresion .)
    WHEN            reduce using rule 75 (log -> expresion AND expresion .)
    ELSE            reduce using rule 75 (log -> expresion AND expresion .)

  ! AND             [ shift and go to state 53 ]
  ! ORR             [ shift and go to state 54 ]


state 104

    (76) log -> expresion ORR expresion .
    (75) log -> expresion . AND expresion
    (76) log -> expresion . ORR expresion

    ORR             reduce using rule 76 (log -> expresion ORR expresion .)
    PARC            reduce using rule 76 (log -> expresion ORR expresion .)
    COMA            reduce using rule 76 (log -> expresion ORR expresion .)
    MAYOR           reduce using rule 76 (log -> expresion ORR expresion .)
    MENOR           reduce using rule 76 (log -> expresion ORR expresion .)
    MAYORIGUAL      reduce using rule 76 (log -> expresion ORR expresion .)
    MENORIGUAL      reduce using rule 76 (log -> expresion ORR expresion .)
    IGUALIGUAL      reduce using rule 76 (log -> expresion ORR expresion .)
    NOTIGUAL        reduce using rule 76 (log -> expresion ORR expresion .)
    POR             reduce using rule 76 (log -> expresion ORR expresion .)
    DIV             reduce using rule 76 (log -> expresion ORR expresion .)
    MAS             reduce using rule 76 (log -> expresion ORR expresion .)
    MENOS           reduce using rule 76 (log -> expresion ORR expresion .)
    MOD             reduce using rule 76 (log -> expresion ORR expresion .)
    ANDB            reduce using rule 76 (log -> expresion ORR expresion .)
    SHIFTI          reduce using rule 76 (log -> expresion ORR expresion .)
    SHIFTD          reduce using rule 76 (log -> expresion ORR expresion .)
    XORB            reduce using rule 76 (log -> expresion ORR expresion .)
    ORB             reduce using rule 76 (log -> expresion ORR expresion .)
    PUNTOYCOMA      reduce using rule 76 (log -> expresion ORR expresion .)
    THEN            reduce using rule 76 (log -> expresion ORR expresion .)
    WHEN            reduce using rule 76 (log -> expresion ORR expresion .)
    ELSE            reduce using rule 76 (log -> expresion ORR expresion .)
    AND             shift and go to state 53

  ! AND             [ reduce using rule 76 (log -> expresion ORR expresion .) ]
  ! ORR             [ shift and go to state 54 ]


state 105

    (78) rel -> arit MAYOR arit .
    (85) arit -> arit . POR arit
    (86) arit -> arit . DIV arit
    (87) arit -> arit . MAS arit
    (88) arit -> arit . MENOS arit
    (89) arit -> arit . MOD arit
    (90) arit -> arit . ANDB arit
    (91) arit -> arit . SHIFTI arit
    (92) arit -> arit . SHIFTD arit
    (93) arit -> arit . XORB arit
    (94) arit -> arit . ORB arit

    AND             reduce using rule 78 (rel -> arit MAYOR arit .)
    ORR             reduce using rule 78 (rel -> arit MAYOR arit .)
    PARC            reduce using rule 78 (rel -> arit MAYOR arit .)
    COMA            reduce using rule 78 (rel -> arit MAYOR arit .)
    MAYOR           reduce using rule 78 (rel -> arit MAYOR arit .)
    MENOR           reduce using rule 78 (rel -> arit MAYOR arit .)
    MAYORIGUAL      reduce using rule 78 (rel -> arit MAYOR arit .)
    MENORIGUAL      reduce using rule 78 (rel -> arit MAYOR arit .)
    IGUALIGUAL      reduce using rule 78 (rel -> arit MAYOR arit .)
    NOTIGUAL        reduce using rule 78 (rel -> arit MAYOR arit .)
    ANDB            reduce using rule 78 (rel -> arit MAYOR arit .)
    XORB            reduce using rule 78 (rel -> arit MAYOR arit .)
    ORB             reduce using rule 78 (rel -> arit MAYOR arit .)
    PUNTOYCOMA      reduce using rule 78 (rel -> arit MAYOR arit .)
    THEN            reduce using rule 78 (rel -> arit MAYOR arit .)
    WHEN            reduce using rule 78 (rel -> arit MAYOR arit .)
    ELSE            reduce using rule 78 (rel -> arit MAYOR arit .)
    POR             shift and go to state 61
    DIV             shift and go to state 62
    MAS             shift and go to state 63
    MENOS           shift and go to state 64
    MOD             shift and go to state 65
    SHIFTI          shift and go to state 67
    SHIFTD          shift and go to state 68

  ! POR             [ reduce using rule 78 (rel -> arit MAYOR arit .) ]
  ! DIV             [ reduce using rule 78 (rel -> arit MAYOR arit .) ]
  ! MAS             [ reduce using rule 78 (rel -> arit MAYOR arit .) ]
  ! MENOS           [ reduce using rule 78 (rel -> arit MAYOR arit .) ]
  ! MOD             [ reduce using rule 78 (rel -> arit MAYOR arit .) ]
  ! SHIFTI          [ reduce using rule 78 (rel -> arit MAYOR arit .) ]
  ! SHIFTD          [ reduce using rule 78 (rel -> arit MAYOR arit .) ]
  ! ANDB            [ shift and go to state 66 ]
  ! XORB            [ shift and go to state 69 ]
  ! ORB             [ shift and go to state 70 ]


state 106

    (79) rel -> arit MENOR arit .
    (85) arit -> arit . POR arit
    (86) arit -> arit . DIV arit
    (87) arit -> arit . MAS arit
    (88) arit -> arit . MENOS arit
    (89) arit -> arit . MOD arit
    (90) arit -> arit . ANDB arit
    (91) arit -> arit . SHIFTI arit
    (92) arit -> arit . SHIFTD arit
    (93) arit -> arit . XORB arit
    (94) arit -> arit . ORB arit

    AND             reduce using rule 79 (rel -> arit MENOR arit .)
    ORR             reduce using rule 79 (rel -> arit MENOR arit .)
    PARC            reduce using rule 79 (rel -> arit MENOR arit .)
    COMA            reduce using rule 79 (rel -> arit MENOR arit .)
    MAYOR           reduce using rule 79 (rel -> arit MENOR arit .)
    MENOR           reduce using rule 79 (rel -> arit MENOR arit .)
    MAYORIGUAL      reduce using rule 79 (rel -> arit MENOR arit .)
    MENORIGUAL      reduce using rule 79 (rel -> arit MENOR arit .)
    IGUALIGUAL      reduce using rule 79 (rel -> arit MENOR arit .)
    NOTIGUAL        reduce using rule 79 (rel -> arit MENOR arit .)
    ANDB            reduce using rule 79 (rel -> arit MENOR arit .)
    XORB            reduce using rule 79 (rel -> arit MENOR arit .)
    ORB             reduce using rule 79 (rel -> arit MENOR arit .)
    PUNTOYCOMA      reduce using rule 79 (rel -> arit MENOR arit .)
    THEN            reduce using rule 79 (rel -> arit MENOR arit .)
    WHEN            reduce using rule 79 (rel -> arit MENOR arit .)
    ELSE            reduce using rule 79 (rel -> arit MENOR arit .)
    POR             shift and go to state 61
    DIV             shift and go to state 62
    MAS             shift and go to state 63
    MENOS           shift and go to state 64
    MOD             shift and go to state 65
    SHIFTI          shift and go to state 67
    SHIFTD          shift and go to state 68

  ! POR             [ reduce using rule 79 (rel -> arit MENOR arit .) ]
  ! DIV             [ reduce using rule 79 (rel -> arit MENOR arit .) ]
  ! MAS             [ reduce using rule 79 (rel -> arit MENOR arit .) ]
  ! MENOS           [ reduce using rule 79 (rel -> arit MENOR arit .) ]
  ! MOD             [ reduce using rule 79 (rel -> arit MENOR arit .) ]
  ! SHIFTI          [ reduce using rule 79 (rel -> arit MENOR arit .) ]
  ! SHIFTD          [ reduce using rule 79 (rel -> arit MENOR arit .) ]
  ! ANDB            [ shift and go to state 66 ]
  ! XORB            [ shift and go to state 69 ]
  ! ORB             [ shift and go to state 70 ]


state 107

    (80) rel -> arit MAYORIGUAL arit .
    (85) arit -> arit . POR arit
    (86) arit -> arit . DIV arit
    (87) arit -> arit . MAS arit
    (88) arit -> arit . MENOS arit
    (89) arit -> arit . MOD arit
    (90) arit -> arit . ANDB arit
    (91) arit -> arit . SHIFTI arit
    (92) arit -> arit . SHIFTD arit
    (93) arit -> arit . XORB arit
    (94) arit -> arit . ORB arit

    AND             reduce using rule 80 (rel -> arit MAYORIGUAL arit .)
    ORR             reduce using rule 80 (rel -> arit MAYORIGUAL arit .)
    PARC            reduce using rule 80 (rel -> arit MAYORIGUAL arit .)
    COMA            reduce using rule 80 (rel -> arit MAYORIGUAL arit .)
    MAYOR           reduce using rule 80 (rel -> arit MAYORIGUAL arit .)
    MENOR           reduce using rule 80 (rel -> arit MAYORIGUAL arit .)
    MAYORIGUAL      reduce using rule 80 (rel -> arit MAYORIGUAL arit .)
    MENORIGUAL      reduce using rule 80 (rel -> arit MAYORIGUAL arit .)
    IGUALIGUAL      reduce using rule 80 (rel -> arit MAYORIGUAL arit .)
    NOTIGUAL        reduce using rule 80 (rel -> arit MAYORIGUAL arit .)
    ANDB            reduce using rule 80 (rel -> arit MAYORIGUAL arit .)
    XORB            reduce using rule 80 (rel -> arit MAYORIGUAL arit .)
    ORB             reduce using rule 80 (rel -> arit MAYORIGUAL arit .)
    PUNTOYCOMA      reduce using rule 80 (rel -> arit MAYORIGUAL arit .)
    THEN            reduce using rule 80 (rel -> arit MAYORIGUAL arit .)
    WHEN            reduce using rule 80 (rel -> arit MAYORIGUAL arit .)
    ELSE            reduce using rule 80 (rel -> arit MAYORIGUAL arit .)
    POR             shift and go to state 61
    DIV             shift and go to state 62
    MAS             shift and go to state 63
    MENOS           shift and go to state 64
    MOD             shift and go to state 65
    SHIFTI          shift and go to state 67
    SHIFTD          shift and go to state 68

  ! POR             [ reduce using rule 80 (rel -> arit MAYORIGUAL arit .) ]
  ! DIV             [ reduce using rule 80 (rel -> arit MAYORIGUAL arit .) ]
  ! MAS             [ reduce using rule 80 (rel -> arit MAYORIGUAL arit .) ]
  ! MENOS           [ reduce using rule 80 (rel -> arit MAYORIGUAL arit .) ]
  ! MOD             [ reduce using rule 80 (rel -> arit MAYORIGUAL arit .) ]
  ! SHIFTI          [ reduce using rule 80 (rel -> arit MAYORIGUAL arit .) ]
  ! SHIFTD          [ reduce using rule 80 (rel -> arit MAYORIGUAL arit .) ]
  ! ANDB            [ shift and go to state 66 ]
  ! XORB            [ shift and go to state 69 ]
  ! ORB             [ shift and go to state 70 ]


state 108

    (81) rel -> arit MENORIGUAL arit .
    (85) arit -> arit . POR arit
    (86) arit -> arit . DIV arit
    (87) arit -> arit . MAS arit
    (88) arit -> arit . MENOS arit
    (89) arit -> arit . MOD arit
    (90) arit -> arit . ANDB arit
    (91) arit -> arit . SHIFTI arit
    (92) arit -> arit . SHIFTD arit
    (93) arit -> arit . XORB arit
    (94) arit -> arit . ORB arit

    AND             reduce using rule 81 (rel -> arit MENORIGUAL arit .)
    ORR             reduce using rule 81 (rel -> arit MENORIGUAL arit .)
    PARC            reduce using rule 81 (rel -> arit MENORIGUAL arit .)
    COMA            reduce using rule 81 (rel -> arit MENORIGUAL arit .)
    MAYOR           reduce using rule 81 (rel -> arit MENORIGUAL arit .)
    MENOR           reduce using rule 81 (rel -> arit MENORIGUAL arit .)
    MAYORIGUAL      reduce using rule 81 (rel -> arit MENORIGUAL arit .)
    MENORIGUAL      reduce using rule 81 (rel -> arit MENORIGUAL arit .)
    IGUALIGUAL      reduce using rule 81 (rel -> arit MENORIGUAL arit .)
    NOTIGUAL        reduce using rule 81 (rel -> arit MENORIGUAL arit .)
    ANDB            reduce using rule 81 (rel -> arit MENORIGUAL arit .)
    XORB            reduce using rule 81 (rel -> arit MENORIGUAL arit .)
    ORB             reduce using rule 81 (rel -> arit MENORIGUAL arit .)
    PUNTOYCOMA      reduce using rule 81 (rel -> arit MENORIGUAL arit .)
    THEN            reduce using rule 81 (rel -> arit MENORIGUAL arit .)
    WHEN            reduce using rule 81 (rel -> arit MENORIGUAL arit .)
    ELSE            reduce using rule 81 (rel -> arit MENORIGUAL arit .)
    POR             shift and go to state 61
    DIV             shift and go to state 62
    MAS             shift and go to state 63
    MENOS           shift and go to state 64
    MOD             shift and go to state 65
    SHIFTI          shift and go to state 67
    SHIFTD          shift and go to state 68

  ! POR             [ reduce using rule 81 (rel -> arit MENORIGUAL arit .) ]
  ! DIV             [ reduce using rule 81 (rel -> arit MENORIGUAL arit .) ]
  ! MAS             [ reduce using rule 81 (rel -> arit MENORIGUAL arit .) ]
  ! MENOS           [ reduce using rule 81 (rel -> arit MENORIGUAL arit .) ]
  ! MOD             [ reduce using rule 81 (rel -> arit MENORIGUAL arit .) ]
  ! SHIFTI          [ reduce using rule 81 (rel -> arit MENORIGUAL arit .) ]
  ! SHIFTD          [ reduce using rule 81 (rel -> arit MENORIGUAL arit .) ]
  ! ANDB            [ shift and go to state 66 ]
  ! XORB            [ shift and go to state 69 ]
  ! ORB             [ shift and go to state 70 ]


state 109

    (82) rel -> arit IGUALIGUAL arit .
    (85) arit -> arit . POR arit
    (86) arit -> arit . DIV arit
    (87) arit -> arit . MAS arit
    (88) arit -> arit . MENOS arit
    (89) arit -> arit . MOD arit
    (90) arit -> arit . ANDB arit
    (91) arit -> arit . SHIFTI arit
    (92) arit -> arit . SHIFTD arit
    (93) arit -> arit . XORB arit
    (94) arit -> arit . ORB arit

    AND             reduce using rule 82 (rel -> arit IGUALIGUAL arit .)
    ORR             reduce using rule 82 (rel -> arit IGUALIGUAL arit .)
    PARC            reduce using rule 82 (rel -> arit IGUALIGUAL arit .)
    COMA            reduce using rule 82 (rel -> arit IGUALIGUAL arit .)
    MAYOR           reduce using rule 82 (rel -> arit IGUALIGUAL arit .)
    MENOR           reduce using rule 82 (rel -> arit IGUALIGUAL arit .)
    MAYORIGUAL      reduce using rule 82 (rel -> arit IGUALIGUAL arit .)
    MENORIGUAL      reduce using rule 82 (rel -> arit IGUALIGUAL arit .)
    IGUALIGUAL      reduce using rule 82 (rel -> arit IGUALIGUAL arit .)
    NOTIGUAL        reduce using rule 82 (rel -> arit IGUALIGUAL arit .)
    ANDB            reduce using rule 82 (rel -> arit IGUALIGUAL arit .)
    XORB            reduce using rule 82 (rel -> arit IGUALIGUAL arit .)
    ORB             reduce using rule 82 (rel -> arit IGUALIGUAL arit .)
    PUNTOYCOMA      reduce using rule 82 (rel -> arit IGUALIGUAL arit .)
    THEN            reduce using rule 82 (rel -> arit IGUALIGUAL arit .)
    WHEN            reduce using rule 82 (rel -> arit IGUALIGUAL arit .)
    ELSE            reduce using rule 82 (rel -> arit IGUALIGUAL arit .)
    POR             shift and go to state 61
    DIV             shift and go to state 62
    MAS             shift and go to state 63
    MENOS           shift and go to state 64
    MOD             shift and go to state 65
    SHIFTI          shift and go to state 67
    SHIFTD          shift and go to state 68

  ! POR             [ reduce using rule 82 (rel -> arit IGUALIGUAL arit .) ]
  ! DIV             [ reduce using rule 82 (rel -> arit IGUALIGUAL arit .) ]
  ! MAS             [ reduce using rule 82 (rel -> arit IGUALIGUAL arit .) ]
  ! MENOS           [ reduce using rule 82 (rel -> arit IGUALIGUAL arit .) ]
  ! MOD             [ reduce using rule 82 (rel -> arit IGUALIGUAL arit .) ]
  ! SHIFTI          [ reduce using rule 82 (rel -> arit IGUALIGUAL arit .) ]
  ! SHIFTD          [ reduce using rule 82 (rel -> arit IGUALIGUAL arit .) ]
  ! ANDB            [ shift and go to state 66 ]
  ! XORB            [ shift and go to state 69 ]
  ! ORB             [ shift and go to state 70 ]


state 110

    (83) rel -> arit NOTIGUAL arit .
    (85) arit -> arit . POR arit
    (86) arit -> arit . DIV arit
    (87) arit -> arit . MAS arit
    (88) arit -> arit . MENOS arit
    (89) arit -> arit . MOD arit
    (90) arit -> arit . ANDB arit
    (91) arit -> arit . SHIFTI arit
    (92) arit -> arit . SHIFTD arit
    (93) arit -> arit . XORB arit
    (94) arit -> arit . ORB arit

    AND             reduce using rule 83 (rel -> arit NOTIGUAL arit .)
    ORR             reduce using rule 83 (rel -> arit NOTIGUAL arit .)
    PARC            reduce using rule 83 (rel -> arit NOTIGUAL arit .)
    COMA            reduce using rule 83 (rel -> arit NOTIGUAL arit .)
    MAYOR           reduce using rule 83 (rel -> arit NOTIGUAL arit .)
    MENOR           reduce using rule 83 (rel -> arit NOTIGUAL arit .)
    MAYORIGUAL      reduce using rule 83 (rel -> arit NOTIGUAL arit .)
    MENORIGUAL      reduce using rule 83 (rel -> arit NOTIGUAL arit .)
    IGUALIGUAL      reduce using rule 83 (rel -> arit NOTIGUAL arit .)
    NOTIGUAL        reduce using rule 83 (rel -> arit NOTIGUAL arit .)
    ANDB            reduce using rule 83 (rel -> arit NOTIGUAL arit .)
    XORB            reduce using rule 83 (rel -> arit NOTIGUAL arit .)
    ORB             reduce using rule 83 (rel -> arit NOTIGUAL arit .)
    PUNTOYCOMA      reduce using rule 83 (rel -> arit NOTIGUAL arit .)
    THEN            reduce using rule 83 (rel -> arit NOTIGUAL arit .)
    WHEN            reduce using rule 83 (rel -> arit NOTIGUAL arit .)
    ELSE            reduce using rule 83 (rel -> arit NOTIGUAL arit .)
    POR             shift and go to state 61
    DIV             shift and go to state 62
    MAS             shift and go to state 63
    MENOS           shift and go to state 64
    MOD             shift and go to state 65
    SHIFTI          shift and go to state 67
    SHIFTD          shift and go to state 68

  ! POR             [ reduce using rule 83 (rel -> arit NOTIGUAL arit .) ]
  ! DIV             [ reduce using rule 83 (rel -> arit NOTIGUAL arit .) ]
  ! MAS             [ reduce using rule 83 (rel -> arit NOTIGUAL arit .) ]
  ! MENOS           [ reduce using rule 83 (rel -> arit NOTIGUAL arit .) ]
  ! MOD             [ reduce using rule 83 (rel -> arit NOTIGUAL arit .) ]
  ! SHIFTI          [ reduce using rule 83 (rel -> arit NOTIGUAL arit .) ]
  ! SHIFTD          [ reduce using rule 83 (rel -> arit NOTIGUAL arit .) ]
  ! ANDB            [ shift and go to state 66 ]
  ! XORB            [ shift and go to state 69 ]
  ! ORB             [ shift and go to state 70 ]


state 111

    (85) arit -> arit POR arit .
    (85) arit -> arit . POR arit
    (86) arit -> arit . DIV arit
    (87) arit -> arit . MAS arit
    (88) arit -> arit . MENOS arit
    (89) arit -> arit . MOD arit
    (90) arit -> arit . ANDB arit
    (91) arit -> arit . SHIFTI arit
    (92) arit -> arit . SHIFTD arit
    (93) arit -> arit . XORB arit
    (94) arit -> arit . ORB arit

    MAYOR           reduce using rule 85 (arit -> arit POR arit .)
    MENOR           reduce using rule 85 (arit -> arit POR arit .)
    MAYORIGUAL      reduce using rule 85 (arit -> arit POR arit .)
    MENORIGUAL      reduce using rule 85 (arit -> arit POR arit .)
    IGUALIGUAL      reduce using rule 85 (arit -> arit POR arit .)
    NOTIGUAL        reduce using rule 85 (arit -> arit POR arit .)
    POR             reduce using rule 85 (arit -> arit POR arit .)
    DIV             reduce using rule 85 (arit -> arit POR arit .)
    MAS             reduce using rule 85 (arit -> arit POR arit .)
    MENOS           reduce using rule 85 (arit -> arit POR arit .)
    MOD             reduce using rule 85 (arit -> arit POR arit .)
    ANDB            reduce using rule 85 (arit -> arit POR arit .)
    SHIFTI          reduce using rule 85 (arit -> arit POR arit .)
    SHIFTD          reduce using rule 85 (arit -> arit POR arit .)
    XORB            reduce using rule 85 (arit -> arit POR arit .)
    ORB             reduce using rule 85 (arit -> arit POR arit .)
    AND             reduce using rule 85 (arit -> arit POR arit .)
    ORR             reduce using rule 85 (arit -> arit POR arit .)
    PARC            reduce using rule 85 (arit -> arit POR arit .)
    COMA            reduce using rule 85 (arit -> arit POR arit .)
    PUNTOYCOMA      reduce using rule 85 (arit -> arit POR arit .)
    THEN            reduce using rule 85 (arit -> arit POR arit .)
    WHEN            reduce using rule 85 (arit -> arit POR arit .)
    ELSE            reduce using rule 85 (arit -> arit POR arit .)

  ! POR             [ shift and go to state 61 ]
  ! DIV             [ shift and go to state 62 ]
  ! MAS             [ shift and go to state 63 ]
  ! MENOS           [ shift and go to state 64 ]
  ! MOD             [ shift and go to state 65 ]
  ! ANDB            [ shift and go to state 66 ]
  ! SHIFTI          [ shift and go to state 67 ]
  ! SHIFTD          [ shift and go to state 68 ]
  ! XORB            [ shift and go to state 69 ]
  ! ORB             [ shift and go to state 70 ]


state 112

    (86) arit -> arit DIV arit .
    (85) arit -> arit . POR arit
    (86) arit -> arit . DIV arit
    (87) arit -> arit . MAS arit
    (88) arit -> arit . MENOS arit
    (89) arit -> arit . MOD arit
    (90) arit -> arit . ANDB arit
    (91) arit -> arit . SHIFTI arit
    (92) arit -> arit . SHIFTD arit
    (93) arit -> arit . XORB arit
    (94) arit -> arit . ORB arit

    MAYOR           reduce using rule 86 (arit -> arit DIV arit .)
    MENOR           reduce using rule 86 (arit -> arit DIV arit .)
    MAYORIGUAL      reduce using rule 86 (arit -> arit DIV arit .)
    MENORIGUAL      reduce using rule 86 (arit -> arit DIV arit .)
    IGUALIGUAL      reduce using rule 86 (arit -> arit DIV arit .)
    NOTIGUAL        reduce using rule 86 (arit -> arit DIV arit .)
    POR             reduce using rule 86 (arit -> arit DIV arit .)
    DIV             reduce using rule 86 (arit -> arit DIV arit .)
    MAS             reduce using rule 86 (arit -> arit DIV arit .)
    MENOS           reduce using rule 86 (arit -> arit DIV arit .)
    MOD             reduce using rule 86 (arit -> arit DIV arit .)
    ANDB            reduce using rule 86 (arit -> arit DIV arit .)
    SHIFTI          reduce using rule 86 (arit -> arit DIV arit .)
    SHIFTD          reduce using rule 86 (arit -> arit DIV arit .)
    XORB            reduce using rule 86 (arit -> arit DIV arit .)
    ORB             reduce using rule 86 (arit -> arit DIV arit .)
    AND             reduce using rule 86 (arit -> arit DIV arit .)
    ORR             reduce using rule 86 (arit -> arit DIV arit .)
    PARC            reduce using rule 86 (arit -> arit DIV arit .)
    COMA            reduce using rule 86 (arit -> arit DIV arit .)
    PUNTOYCOMA      reduce using rule 86 (arit -> arit DIV arit .)
    THEN            reduce using rule 86 (arit -> arit DIV arit .)
    WHEN            reduce using rule 86 (arit -> arit DIV arit .)
    ELSE            reduce using rule 86 (arit -> arit DIV arit .)

  ! POR             [ shift and go to state 61 ]
  ! DIV             [ shift and go to state 62 ]
  ! MAS             [ shift and go to state 63 ]
  ! MENOS           [ shift and go to state 64 ]
  ! MOD             [ shift and go to state 65 ]
  ! ANDB            [ shift and go to state 66 ]
  ! SHIFTI          [ shift and go to state 67 ]
  ! SHIFTD          [ shift and go to state 68 ]
  ! XORB            [ shift and go to state 69 ]
  ! ORB             [ shift and go to state 70 ]


state 113

    (87) arit -> arit MAS arit .
    (85) arit -> arit . POR arit
    (86) arit -> arit . DIV arit
    (87) arit -> arit . MAS arit
    (88) arit -> arit . MENOS arit
    (89) arit -> arit . MOD arit
    (90) arit -> arit . ANDB arit
    (91) arit -> arit . SHIFTI arit
    (92) arit -> arit . SHIFTD arit
    (93) arit -> arit . XORB arit
    (94) arit -> arit . ORB arit

    MAYOR           reduce using rule 87 (arit -> arit MAS arit .)
    MENOR           reduce using rule 87 (arit -> arit MAS arit .)
    MAYORIGUAL      reduce using rule 87 (arit -> arit MAS arit .)
    MENORIGUAL      reduce using rule 87 (arit -> arit MAS arit .)
    IGUALIGUAL      reduce using rule 87 (arit -> arit MAS arit .)
    NOTIGUAL        reduce using rule 87 (arit -> arit MAS arit .)
    MAS             reduce using rule 87 (arit -> arit MAS arit .)
    MENOS           reduce using rule 87 (arit -> arit MAS arit .)
    ANDB            reduce using rule 87 (arit -> arit MAS arit .)
    SHIFTI          reduce using rule 87 (arit -> arit MAS arit .)
    SHIFTD          reduce using rule 87 (arit -> arit MAS arit .)
    XORB            reduce using rule 87 (arit -> arit MAS arit .)
    ORB             reduce using rule 87 (arit -> arit MAS arit .)
    AND             reduce using rule 87 (arit -> arit MAS arit .)
    ORR             reduce using rule 87 (arit -> arit MAS arit .)
    PARC            reduce using rule 87 (arit -> arit MAS arit .)
    COMA            reduce using rule 87 (arit -> arit MAS arit .)
    PUNTOYCOMA      reduce using rule 87 (arit -> arit MAS arit .)
    THEN            reduce using rule 87 (arit -> arit MAS arit .)
    WHEN            reduce using rule 87 (arit -> arit MAS arit .)
    ELSE            reduce using rule 87 (arit -> arit MAS arit .)
    POR             shift and go to state 61
    DIV             shift and go to state 62
    MOD             shift and go to state 65

  ! POR             [ reduce using rule 87 (arit -> arit MAS arit .) ]
  ! DIV             [ reduce using rule 87 (arit -> arit MAS arit .) ]
  ! MOD             [ reduce using rule 87 (arit -> arit MAS arit .) ]
  ! MAS             [ shift and go to state 63 ]
  ! MENOS           [ shift and go to state 64 ]
  ! ANDB            [ shift and go to state 66 ]
  ! SHIFTI          [ shift and go to state 67 ]
  ! SHIFTD          [ shift and go to state 68 ]
  ! XORB            [ shift and go to state 69 ]
  ! ORB             [ shift and go to state 70 ]


state 114

    (88) arit -> arit MENOS arit .
    (85) arit -> arit . POR arit
    (86) arit -> arit . DIV arit
    (87) arit -> arit . MAS arit
    (88) arit -> arit . MENOS arit
    (89) arit -> arit . MOD arit
    (90) arit -> arit . ANDB arit
    (91) arit -> arit . SHIFTI arit
    (92) arit -> arit . SHIFTD arit
    (93) arit -> arit . XORB arit
    (94) arit -> arit . ORB arit

    MAYOR           reduce using rule 88 (arit -> arit MENOS arit .)
    MENOR           reduce using rule 88 (arit -> arit MENOS arit .)
    MAYORIGUAL      reduce using rule 88 (arit -> arit MENOS arit .)
    MENORIGUAL      reduce using rule 88 (arit -> arit MENOS arit .)
    IGUALIGUAL      reduce using rule 88 (arit -> arit MENOS arit .)
    NOTIGUAL        reduce using rule 88 (arit -> arit MENOS arit .)
    MAS             reduce using rule 88 (arit -> arit MENOS arit .)
    MENOS           reduce using rule 88 (arit -> arit MENOS arit .)
    ANDB            reduce using rule 88 (arit -> arit MENOS arit .)
    SHIFTI          reduce using rule 88 (arit -> arit MENOS arit .)
    SHIFTD          reduce using rule 88 (arit -> arit MENOS arit .)
    XORB            reduce using rule 88 (arit -> arit MENOS arit .)
    ORB             reduce using rule 88 (arit -> arit MENOS arit .)
    AND             reduce using rule 88 (arit -> arit MENOS arit .)
    ORR             reduce using rule 88 (arit -> arit MENOS arit .)
    PARC            reduce using rule 88 (arit -> arit MENOS arit .)
    COMA            reduce using rule 88 (arit -> arit MENOS arit .)
    PUNTOYCOMA      reduce using rule 88 (arit -> arit MENOS arit .)
    THEN            reduce using rule 88 (arit -> arit MENOS arit .)
    WHEN            reduce using rule 88 (arit -> arit MENOS arit .)
    ELSE            reduce using rule 88 (arit -> arit MENOS arit .)
    POR             shift and go to state 61
    DIV             shift and go to state 62
    MOD             shift and go to state 65

  ! POR             [ reduce using rule 88 (arit -> arit MENOS arit .) ]
  ! DIV             [ reduce using rule 88 (arit -> arit MENOS arit .) ]
  ! MOD             [ reduce using rule 88 (arit -> arit MENOS arit .) ]
  ! MAS             [ shift and go to state 63 ]
  ! MENOS           [ shift and go to state 64 ]
  ! ANDB            [ shift and go to state 66 ]
  ! SHIFTI          [ shift and go to state 67 ]
  ! SHIFTD          [ shift and go to state 68 ]
  ! XORB            [ shift and go to state 69 ]
  ! ORB             [ shift and go to state 70 ]


state 115

    (89) arit -> arit MOD arit .
    (85) arit -> arit . POR arit
    (86) arit -> arit . DIV arit
    (87) arit -> arit . MAS arit
    (88) arit -> arit . MENOS arit
    (89) arit -> arit . MOD arit
    (90) arit -> arit . ANDB arit
    (91) arit -> arit . SHIFTI arit
    (92) arit -> arit . SHIFTD arit
    (93) arit -> arit . XORB arit
    (94) arit -> arit . ORB arit

    MAYOR           reduce using rule 89 (arit -> arit MOD arit .)
    MENOR           reduce using rule 89 (arit -> arit MOD arit .)
    MAYORIGUAL      reduce using rule 89 (arit -> arit MOD arit .)
    MENORIGUAL      reduce using rule 89 (arit -> arit MOD arit .)
    IGUALIGUAL      reduce using rule 89 (arit -> arit MOD arit .)
    NOTIGUAL        reduce using rule 89 (arit -> arit MOD arit .)
    POR             reduce using rule 89 (arit -> arit MOD arit .)
    DIV             reduce using rule 89 (arit -> arit MOD arit .)
    MAS             reduce using rule 89 (arit -> arit MOD arit .)
    MENOS           reduce using rule 89 (arit -> arit MOD arit .)
    MOD             reduce using rule 89 (arit -> arit MOD arit .)
    ANDB            reduce using rule 89 (arit -> arit MOD arit .)
    SHIFTI          reduce using rule 89 (arit -> arit MOD arit .)
    SHIFTD          reduce using rule 89 (arit -> arit MOD arit .)
    XORB            reduce using rule 89 (arit -> arit MOD arit .)
    ORB             reduce using rule 89 (arit -> arit MOD arit .)
    AND             reduce using rule 89 (arit -> arit MOD arit .)
    ORR             reduce using rule 89 (arit -> arit MOD arit .)
    PARC            reduce using rule 89 (arit -> arit MOD arit .)
    COMA            reduce using rule 89 (arit -> arit MOD arit .)
    PUNTOYCOMA      reduce using rule 89 (arit -> arit MOD arit .)
    THEN            reduce using rule 89 (arit -> arit MOD arit .)
    WHEN            reduce using rule 89 (arit -> arit MOD arit .)
    ELSE            reduce using rule 89 (arit -> arit MOD arit .)

  ! POR             [ shift and go to state 61 ]
  ! DIV             [ shift and go to state 62 ]
  ! MAS             [ shift and go to state 63 ]
  ! MENOS           [ shift and go to state 64 ]
  ! MOD             [ shift and go to state 65 ]
  ! ANDB            [ shift and go to state 66 ]
  ! SHIFTI          [ shift and go to state 67 ]
  ! SHIFTD          [ shift and go to state 68 ]
  ! XORB            [ shift and go to state 69 ]
  ! ORB             [ shift and go to state 70 ]


state 116

    (90) arit -> arit ANDB arit .
    (85) arit -> arit . POR arit
    (86) arit -> arit . DIV arit
    (87) arit -> arit . MAS arit
    (88) arit -> arit . MENOS arit
    (89) arit -> arit . MOD arit
    (90) arit -> arit . ANDB arit
    (91) arit -> arit . SHIFTI arit
    (92) arit -> arit . SHIFTD arit
    (93) arit -> arit . XORB arit
    (94) arit -> arit . ORB arit

    MAYOR           reduce using rule 90 (arit -> arit ANDB arit .)
    MENOR           reduce using rule 90 (arit -> arit ANDB arit .)
    MAYORIGUAL      reduce using rule 90 (arit -> arit ANDB arit .)
    MENORIGUAL      reduce using rule 90 (arit -> arit ANDB arit .)
    IGUALIGUAL      reduce using rule 90 (arit -> arit ANDB arit .)
    NOTIGUAL        reduce using rule 90 (arit -> arit ANDB arit .)
    ANDB            reduce using rule 90 (arit -> arit ANDB arit .)
    XORB            reduce using rule 90 (arit -> arit ANDB arit .)
    ORB             reduce using rule 90 (arit -> arit ANDB arit .)
    AND             reduce using rule 90 (arit -> arit ANDB arit .)
    ORR             reduce using rule 90 (arit -> arit ANDB arit .)
    PARC            reduce using rule 90 (arit -> arit ANDB arit .)
    COMA            reduce using rule 90 (arit -> arit ANDB arit .)
    PUNTOYCOMA      reduce using rule 90 (arit -> arit ANDB arit .)
    THEN            reduce using rule 90 (arit -> arit ANDB arit .)
    WHEN            reduce using rule 90 (arit -> arit ANDB arit .)
    ELSE            reduce using rule 90 (arit -> arit ANDB arit .)
    POR             shift and go to state 61
    DIV             shift and go to state 62
    MAS             shift and go to state 63
    MENOS           shift and go to state 64
    MOD             shift and go to state 65
    SHIFTI          shift and go to state 67
    SHIFTD          shift and go to state 68

  ! POR             [ reduce using rule 90 (arit -> arit ANDB arit .) ]
  ! DIV             [ reduce using rule 90 (arit -> arit ANDB arit .) ]
  ! MAS             [ reduce using rule 90 (arit -> arit ANDB arit .) ]
  ! MENOS           [ reduce using rule 90 (arit -> arit ANDB arit .) ]
  ! MOD             [ reduce using rule 90 (arit -> arit ANDB arit .) ]
  ! SHIFTI          [ reduce using rule 90 (arit -> arit ANDB arit .) ]
  ! SHIFTD          [ reduce using rule 90 (arit -> arit ANDB arit .) ]
  ! ANDB            [ shift and go to state 66 ]
  ! XORB            [ shift and go to state 69 ]
  ! ORB             [ shift and go to state 70 ]


state 117

    (91) arit -> arit SHIFTI arit .
    (85) arit -> arit . POR arit
    (86) arit -> arit . DIV arit
    (87) arit -> arit . MAS arit
    (88) arit -> arit . MENOS arit
    (89) arit -> arit . MOD arit
    (90) arit -> arit . ANDB arit
    (91) arit -> arit . SHIFTI arit
    (92) arit -> arit . SHIFTD arit
    (93) arit -> arit . XORB arit
    (94) arit -> arit . ORB arit

    MAYOR           reduce using rule 91 (arit -> arit SHIFTI arit .)
    MENOR           reduce using rule 91 (arit -> arit SHIFTI arit .)
    MAYORIGUAL      reduce using rule 91 (arit -> arit SHIFTI arit .)
    MENORIGUAL      reduce using rule 91 (arit -> arit SHIFTI arit .)
    IGUALIGUAL      reduce using rule 91 (arit -> arit SHIFTI arit .)
    NOTIGUAL        reduce using rule 91 (arit -> arit SHIFTI arit .)
    ANDB            reduce using rule 91 (arit -> arit SHIFTI arit .)
    SHIFTI          reduce using rule 91 (arit -> arit SHIFTI arit .)
    SHIFTD          reduce using rule 91 (arit -> arit SHIFTI arit .)
    XORB            reduce using rule 91 (arit -> arit SHIFTI arit .)
    ORB             reduce using rule 91 (arit -> arit SHIFTI arit .)
    AND             reduce using rule 91 (arit -> arit SHIFTI arit .)
    ORR             reduce using rule 91 (arit -> arit SHIFTI arit .)
    PARC            reduce using rule 91 (arit -> arit SHIFTI arit .)
    COMA            reduce using rule 91 (arit -> arit SHIFTI arit .)
    PUNTOYCOMA      reduce using rule 91 (arit -> arit SHIFTI arit .)
    THEN            reduce using rule 91 (arit -> arit SHIFTI arit .)
    WHEN            reduce using rule 91 (arit -> arit SHIFTI arit .)
    ELSE            reduce using rule 91 (arit -> arit SHIFTI arit .)
    POR             shift and go to state 61
    DIV             shift and go to state 62
    MAS             shift and go to state 63
    MENOS           shift and go to state 64
    MOD             shift and go to state 65

  ! POR             [ reduce using rule 91 (arit -> arit SHIFTI arit .) ]
  ! DIV             [ reduce using rule 91 (arit -> arit SHIFTI arit .) ]
  ! MAS             [ reduce using rule 91 (arit -> arit SHIFTI arit .) ]
  ! MENOS           [ reduce using rule 91 (arit -> arit SHIFTI arit .) ]
  ! MOD             [ reduce using rule 91 (arit -> arit SHIFTI arit .) ]
  ! ANDB            [ shift and go to state 66 ]
  ! SHIFTI          [ shift and go to state 67 ]
  ! SHIFTD          [ shift and go to state 68 ]
  ! XORB            [ shift and go to state 69 ]
  ! ORB             [ shift and go to state 70 ]


state 118

    (92) arit -> arit SHIFTD arit .
    (85) arit -> arit . POR arit
    (86) arit -> arit . DIV arit
    (87) arit -> arit . MAS arit
    (88) arit -> arit . MENOS arit
    (89) arit -> arit . MOD arit
    (90) arit -> arit . ANDB arit
    (91) arit -> arit . SHIFTI arit
    (92) arit -> arit . SHIFTD arit
    (93) arit -> arit . XORB arit
    (94) arit -> arit . ORB arit

    MAYOR           reduce using rule 92 (arit -> arit SHIFTD arit .)
    MENOR           reduce using rule 92 (arit -> arit SHIFTD arit .)
    MAYORIGUAL      reduce using rule 92 (arit -> arit SHIFTD arit .)
    MENORIGUAL      reduce using rule 92 (arit -> arit SHIFTD arit .)
    IGUALIGUAL      reduce using rule 92 (arit -> arit SHIFTD arit .)
    NOTIGUAL        reduce using rule 92 (arit -> arit SHIFTD arit .)
    ANDB            reduce using rule 92 (arit -> arit SHIFTD arit .)
    SHIFTI          reduce using rule 92 (arit -> arit SHIFTD arit .)
    SHIFTD          reduce using rule 92 (arit -> arit SHIFTD arit .)
    XORB            reduce using rule 92 (arit -> arit SHIFTD arit .)
    ORB             reduce using rule 92 (arit -> arit SHIFTD arit .)
    AND             reduce using rule 92 (arit -> arit SHIFTD arit .)
    ORR             reduce using rule 92 (arit -> arit SHIFTD arit .)
    PARC            reduce using rule 92 (arit -> arit SHIFTD arit .)
    COMA            reduce using rule 92 (arit -> arit SHIFTD arit .)
    PUNTOYCOMA      reduce using rule 92 (arit -> arit SHIFTD arit .)
    THEN            reduce using rule 92 (arit -> arit SHIFTD arit .)
    WHEN            reduce using rule 92 (arit -> arit SHIFTD arit .)
    ELSE            reduce using rule 92 (arit -> arit SHIFTD arit .)
    POR             shift and go to state 61
    DIV             shift and go to state 62
    MAS             shift and go to state 63
    MENOS           shift and go to state 64
    MOD             shift and go to state 65

  ! POR             [ reduce using rule 92 (arit -> arit SHIFTD arit .) ]
  ! DIV             [ reduce using rule 92 (arit -> arit SHIFTD arit .) ]
  ! MAS             [ reduce using rule 92 (arit -> arit SHIFTD arit .) ]
  ! MENOS           [ reduce using rule 92 (arit -> arit SHIFTD arit .) ]
  ! MOD             [ reduce using rule 92 (arit -> arit SHIFTD arit .) ]
  ! ANDB            [ shift and go to state 66 ]
  ! SHIFTI          [ shift and go to state 67 ]
  ! SHIFTD          [ shift and go to state 68 ]
  ! XORB            [ shift and go to state 69 ]
  ! ORB             [ shift and go to state 70 ]


state 119

    (93) arit -> arit XORB arit .
    (85) arit -> arit . POR arit
    (86) arit -> arit . DIV arit
    (87) arit -> arit . MAS arit
    (88) arit -> arit . MENOS arit
    (89) arit -> arit . MOD arit
    (90) arit -> arit . ANDB arit
    (91) arit -> arit . SHIFTI arit
    (92) arit -> arit . SHIFTD arit
    (93) arit -> arit . XORB arit
    (94) arit -> arit . ORB arit

    MAYOR           reduce using rule 93 (arit -> arit XORB arit .)
    MENOR           reduce using rule 93 (arit -> arit XORB arit .)
    MAYORIGUAL      reduce using rule 93 (arit -> arit XORB arit .)
    MENORIGUAL      reduce using rule 93 (arit -> arit XORB arit .)
    IGUALIGUAL      reduce using rule 93 (arit -> arit XORB arit .)
    NOTIGUAL        reduce using rule 93 (arit -> arit XORB arit .)
    XORB            reduce using rule 93 (arit -> arit XORB arit .)
    AND             reduce using rule 93 (arit -> arit XORB arit .)
    ORR             reduce using rule 93 (arit -> arit XORB arit .)
    PARC            reduce using rule 93 (arit -> arit XORB arit .)
    COMA            reduce using rule 93 (arit -> arit XORB arit .)
    PUNTOYCOMA      reduce using rule 93 (arit -> arit XORB arit .)
    THEN            reduce using rule 93 (arit -> arit XORB arit .)
    WHEN            reduce using rule 93 (arit -> arit XORB arit .)
    ELSE            reduce using rule 93 (arit -> arit XORB arit .)
    POR             shift and go to state 61
    DIV             shift and go to state 62
    MAS             shift and go to state 63
    MENOS           shift and go to state 64
    MOD             shift and go to state 65
    ANDB            shift and go to state 66
    SHIFTI          shift and go to state 67
    SHIFTD          shift and go to state 68
    ORB             shift and go to state 70

  ! POR             [ reduce using rule 93 (arit -> arit XORB arit .) ]
  ! DIV             [ reduce using rule 93 (arit -> arit XORB arit .) ]
  ! MAS             [ reduce using rule 93 (arit -> arit XORB arit .) ]
  ! MENOS           [ reduce using rule 93 (arit -> arit XORB arit .) ]
  ! MOD             [ reduce using rule 93 (arit -> arit XORB arit .) ]
  ! ANDB            [ reduce using rule 93 (arit -> arit XORB arit .) ]
  ! SHIFTI          [ reduce using rule 93 (arit -> arit XORB arit .) ]
  ! SHIFTD          [ reduce using rule 93 (arit -> arit XORB arit .) ]
  ! ORB             [ reduce using rule 93 (arit -> arit XORB arit .) ]
  ! XORB            [ shift and go to state 69 ]


state 120

    (94) arit -> arit ORB arit .
    (85) arit -> arit . POR arit
    (86) arit -> arit . DIV arit
    (87) arit -> arit . MAS arit
    (88) arit -> arit . MENOS arit
    (89) arit -> arit . MOD arit
    (90) arit -> arit . ANDB arit
    (91) arit -> arit . SHIFTI arit
    (92) arit -> arit . SHIFTD arit
    (93) arit -> arit . XORB arit
    (94) arit -> arit . ORB arit

    MAYOR           reduce using rule 94 (arit -> arit ORB arit .)
    MENOR           reduce using rule 94 (arit -> arit ORB arit .)
    MAYORIGUAL      reduce using rule 94 (arit -> arit ORB arit .)
    MENORIGUAL      reduce using rule 94 (arit -> arit ORB arit .)
    IGUALIGUAL      reduce using rule 94 (arit -> arit ORB arit .)
    NOTIGUAL        reduce using rule 94 (arit -> arit ORB arit .)
    XORB            reduce using rule 94 (arit -> arit ORB arit .)
    ORB             reduce using rule 94 (arit -> arit ORB arit .)
    AND             reduce using rule 94 (arit -> arit ORB arit .)
    ORR             reduce using rule 94 (arit -> arit ORB arit .)
    PARC            reduce using rule 94 (arit -> arit ORB arit .)
    COMA            reduce using rule 94 (arit -> arit ORB arit .)
    PUNTOYCOMA      reduce using rule 94 (arit -> arit ORB arit .)
    THEN            reduce using rule 94 (arit -> arit ORB arit .)
    WHEN            reduce using rule 94 (arit -> arit ORB arit .)
    ELSE            reduce using rule 94 (arit -> arit ORB arit .)
    POR             shift and go to state 61
    DIV             shift and go to state 62
    MAS             shift and go to state 63
    MENOS           shift and go to state 64
    MOD             shift and go to state 65
    ANDB            shift and go to state 66
    SHIFTI          shift and go to state 67
    SHIFTD          shift and go to state 68

  ! POR             [ reduce using rule 94 (arit -> arit ORB arit .) ]
  ! DIV             [ reduce using rule 94 (arit -> arit ORB arit .) ]
  ! MAS             [ reduce using rule 94 (arit -> arit ORB arit .) ]
  ! MENOS           [ reduce using rule 94 (arit -> arit ORB arit .) ]
  ! MOD             [ reduce using rule 94 (arit -> arit ORB arit .) ]
  ! ANDB            [ reduce using rule 94 (arit -> arit ORB arit .) ]
  ! SHIFTI          [ reduce using rule 94 (arit -> arit ORB arit .) ]
  ! SHIFTD          [ reduce using rule 94 (arit -> arit ORB arit .) ]
  ! XORB            [ shift and go to state 69 ]
  ! ORB             [ shift and go to state 70 ]


state 121

    (28) llamada_funcion -> CALL ID PARA params PARC PUNTOYCOMA .

    error           reduce using rule 28 (llamada_funcion -> CALL ID PARA params PARC PUNTOYCOMA .)
    CREATE          reduce using rule 28 (llamada_funcion -> CALL ID PARA params PARC PUNTOYCOMA .)
    SELECT          reduce using rule 28 (llamada_funcion -> CALL ID PARA params PARC PUNTOYCOMA .)
    CALL            reduce using rule 28 (llamada_funcion -> CALL ID PARA params PARC PUNTOYCOMA .)
    $end            reduce using rule 28 (llamada_funcion -> CALL ID PARA params PARC PUNTOYCOMA .)
    END             reduce using rule 28 (llamada_funcion -> CALL ID PARA params PARC PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 28 (llamada_funcion -> CALL ID PARA params PARC PUNTOYCOMA .)
    ID              reduce using rule 28 (llamada_funcion -> CALL ID PARA params PARC PUNTOYCOMA .)
    RAISE           reduce using rule 28 (llamada_funcion -> CALL ID PARA params PARC PUNTOYCOMA .)
    IF              reduce using rule 28 (llamada_funcion -> CALL ID PARA params PARC PUNTOYCOMA .)
    CASE            reduce using rule 28 (llamada_funcion -> CALL ID PARA params PARC PUNTOYCOMA .)
    BEGIN           reduce using rule 28 (llamada_funcion -> CALL ID PARA params PARC PUNTOYCOMA .)
    ELSE            reduce using rule 28 (llamada_funcion -> CALL ID PARA params PARC PUNTOYCOMA .)
    ELSEIF          reduce using rule 28 (llamada_funcion -> CALL ID PARA params PARC PUNTOYCOMA .)
    WHEN            reduce using rule 28 (llamada_funcion -> CALL ID PARA params PARC PUNTOYCOMA .)


state 122

    (66) tipo -> CHAR PARA . ENTERO PARC

    ENTERO          shift and go to state 131


state 123

    (67) tipo -> CHARACTER VARYING . PARA ENTERO PARC

    PARA            shift and go to state 132


state 124

    (69) tipo -> CHARACTER PARA . ENTERO PARC

    ENTERO          shift and go to state 133


state 125

    (68) tipo -> VARCHAR PARA . ENTERO PARC

    ENTERO          shift and go to state 134


state 126

    (19) funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS . tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PUNTOYCOMA DOLAR DOLAR LANGUAGE PLPGSQL PUNTOYCOMA
    (20) funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS . tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PUNTOYCOMA DOLAR DOLAR LANGUAGE PLPGSQL PUNTOYCOMA
    (53) tipo -> . INTEGER
    (54) tipo -> . SMALLINT
    (55) tipo -> . BIGINT
    (56) tipo -> . DECIMAL
    (57) tipo -> . NUMERIC
    (58) tipo -> . REAL
    (59) tipo -> . CHAR
    (60) tipo -> . DOUBLE
    (61) tipo -> . PRECISION
    (62) tipo -> . MONEY
    (63) tipo -> . FLOAT
    (64) tipo -> . BOOLEAN
    (65) tipo -> . VOID
    (66) tipo -> . CHAR PARA ENTERO PARC
    (67) tipo -> . CHARACTER VARYING PARA ENTERO PARC
    (68) tipo -> . VARCHAR PARA ENTERO PARC
    (69) tipo -> . CHARACTER PARA ENTERO PARC
    (70) tipo -> . TEXT
    (71) tipo -> . TIME
    (72) tipo -> . TIMESTAMP
    (73) tipo -> . DATE

    INTEGER         shift and go to state 76
    SMALLINT        shift and go to state 77
    BIGINT          shift and go to state 78
    DECIMAL         shift and go to state 79
    NUMERIC         shift and go to state 80
    REAL            shift and go to state 81
    CHAR            shift and go to state 82
    DOUBLE          shift and go to state 83
    PRECISION       shift and go to state 84
    MONEY           shift and go to state 85
    FLOAT           shift and go to state 86
    BOOLEAN         shift and go to state 87
    VOID            shift and go to state 88
    CHARACTER       shift and go to state 89
    VARCHAR         shift and go to state 90
    TEXT            shift and go to state 91
    TIME            shift and go to state 92
    TIMESTAMP       shift and go to state 93
    DATE            shift and go to state 94

    tipo                           shift and go to state 135

state 127

    (32) parametros -> parametros COMA parametro .

    PARC            reduce using rule 32 (parametros -> parametros COMA parametro .)
    COMA            reduce using rule 32 (parametros -> parametros COMA parametro .)


state 128

    (21) funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros . PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PUNTOYCOMA DOLAR DOLAR LANGUAGE PLPGSQL PUNTOYCOMA
    (22) funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros . PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PUNTOYCOMA DOLAR DOLAR LANGUAGE PLPGSQL PUNTOYCOMA
    (32) parametros -> parametros . COMA parametro

    PARC            shift and go to state 136
    COMA            shift and go to state 96


state 129

    (25) funcion -> CREATE OR REPLACE PROCEDURE ID PARA parametros . PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PUNTOYCOMA DOLAR DOLAR LANGUAGE PLPGSQL PUNTOYCOMA
    (26) funcion -> CREATE OR REPLACE PROCEDURE ID PARA parametros . PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PUNTOYCOMA DOLAR DOLAR LANGUAGE PLPGSQL PUNTOYCOMA
    (32) parametros -> parametros . COMA parametro

    PARC            shift and go to state 137
    COMA            shift and go to state 96


state 130

    (23) funcion -> CREATE PROCEDURE ID PARA parametros PARC RETURNS . tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PUNTOYCOMA DOLAR DOLAR LANGUAGE PLPGSQL PUNTOYCOMA
    (24) funcion -> CREATE PROCEDURE ID PARA parametros PARC RETURNS . tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PUNTOYCOMA DOLAR DOLAR LANGUAGE PLPGSQL PUNTOYCOMA
    (53) tipo -> . INTEGER
    (54) tipo -> . SMALLINT
    (55) tipo -> . BIGINT
    (56) tipo -> . DECIMAL
    (57) tipo -> . NUMERIC
    (58) tipo -> . REAL
    (59) tipo -> . CHAR
    (60) tipo -> . DOUBLE
    (61) tipo -> . PRECISION
    (62) tipo -> . MONEY
    (63) tipo -> . FLOAT
    (64) tipo -> . BOOLEAN
    (65) tipo -> . VOID
    (66) tipo -> . CHAR PARA ENTERO PARC
    (67) tipo -> . CHARACTER VARYING PARA ENTERO PARC
    (68) tipo -> . VARCHAR PARA ENTERO PARC
    (69) tipo -> . CHARACTER PARA ENTERO PARC
    (70) tipo -> . TEXT
    (71) tipo -> . TIME
    (72) tipo -> . TIMESTAMP
    (73) tipo -> . DATE

    INTEGER         shift and go to state 76
    SMALLINT        shift and go to state 77
    BIGINT          shift and go to state 78
    DECIMAL         shift and go to state 79
    NUMERIC         shift and go to state 80
    REAL            shift and go to state 81
    CHAR            shift and go to state 82
    DOUBLE          shift and go to state 83
    PRECISION       shift and go to state 84
    MONEY           shift and go to state 85
    FLOAT           shift and go to state 86
    BOOLEAN         shift and go to state 87
    VOID            shift and go to state 88
    CHARACTER       shift and go to state 89
    VARCHAR         shift and go to state 90
    TEXT            shift and go to state 91
    TIME            shift and go to state 92
    TIMESTAMP       shift and go to state 93
    DATE            shift and go to state 94

    tipo                           shift and go to state 138

state 131

    (66) tipo -> CHAR PARA ENTERO . PARC

    PARC            shift and go to state 139


state 132

    (67) tipo -> CHARACTER VARYING PARA . ENTERO PARC

    ENTERO          shift and go to state 140


state 133

    (69) tipo -> CHARACTER PARA ENTERO . PARC

    PARC            shift and go to state 141


state 134

    (68) tipo -> VARCHAR PARA ENTERO . PARC

    PARC            shift and go to state 142


state 135

    (19) funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS tipo . AS DOLAR DOLAR BEGIN instrucciones_funct_list END PUNTOYCOMA DOLAR DOLAR LANGUAGE PLPGSQL PUNTOYCOMA
    (20) funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS tipo . AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PUNTOYCOMA DOLAR DOLAR LANGUAGE PLPGSQL PUNTOYCOMA

    AS              shift and go to state 143


state 136

    (21) funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC . RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PUNTOYCOMA DOLAR DOLAR LANGUAGE PLPGSQL PUNTOYCOMA
    (22) funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC . RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PUNTOYCOMA DOLAR DOLAR LANGUAGE PLPGSQL PUNTOYCOMA

    RETURNS         shift and go to state 144


state 137

    (25) funcion -> CREATE OR REPLACE PROCEDURE ID PARA parametros PARC . RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PUNTOYCOMA DOLAR DOLAR LANGUAGE PLPGSQL PUNTOYCOMA
    (26) funcion -> CREATE OR REPLACE PROCEDURE ID PARA parametros PARC . RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PUNTOYCOMA DOLAR DOLAR LANGUAGE PLPGSQL PUNTOYCOMA

    RETURNS         shift and go to state 145


state 138

    (23) funcion -> CREATE PROCEDURE ID PARA parametros PARC RETURNS tipo . AS DOLAR DOLAR BEGIN instrucciones_funct_list END PUNTOYCOMA DOLAR DOLAR LANGUAGE PLPGSQL PUNTOYCOMA
    (24) funcion -> CREATE PROCEDURE ID PARA parametros PARC RETURNS tipo . AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PUNTOYCOMA DOLAR DOLAR LANGUAGE PLPGSQL PUNTOYCOMA

    AS              shift and go to state 146


state 139

    (66) tipo -> CHAR PARA ENTERO PARC .

    PARC            reduce using rule 66 (tipo -> CHAR PARA ENTERO PARC .)
    COMA            reduce using rule 66 (tipo -> CHAR PARA ENTERO PARC .)
    AS              reduce using rule 66 (tipo -> CHAR PARA ENTERO PARC .)
    DOSPUNTOS       reduce using rule 66 (tipo -> CHAR PARA ENTERO PARC .)
    PUNTOYCOMA      reduce using rule 66 (tipo -> CHAR PARA ENTERO PARC .)
    DEFAULT         reduce using rule 66 (tipo -> CHAR PARA ENTERO PARC .)


state 140

    (67) tipo -> CHARACTER VARYING PARA ENTERO . PARC

    PARC            shift and go to state 147


state 141

    (69) tipo -> CHARACTER PARA ENTERO PARC .

    PARC            reduce using rule 69 (tipo -> CHARACTER PARA ENTERO PARC .)
    COMA            reduce using rule 69 (tipo -> CHARACTER PARA ENTERO PARC .)
    AS              reduce using rule 69 (tipo -> CHARACTER PARA ENTERO PARC .)
    DOSPUNTOS       reduce using rule 69 (tipo -> CHARACTER PARA ENTERO PARC .)
    PUNTOYCOMA      reduce using rule 69 (tipo -> CHARACTER PARA ENTERO PARC .)
    DEFAULT         reduce using rule 69 (tipo -> CHARACTER PARA ENTERO PARC .)


state 142

    (68) tipo -> VARCHAR PARA ENTERO PARC .

    PARC            reduce using rule 68 (tipo -> VARCHAR PARA ENTERO PARC .)
    COMA            reduce using rule 68 (tipo -> VARCHAR PARA ENTERO PARC .)
    AS              reduce using rule 68 (tipo -> VARCHAR PARA ENTERO PARC .)
    DOSPUNTOS       reduce using rule 68 (tipo -> VARCHAR PARA ENTERO PARC .)
    PUNTOYCOMA      reduce using rule 68 (tipo -> VARCHAR PARA ENTERO PARC .)
    DEFAULT         reduce using rule 68 (tipo -> VARCHAR PARA ENTERO PARC .)


state 143

    (19) funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS . DOLAR DOLAR BEGIN instrucciones_funct_list END PUNTOYCOMA DOLAR DOLAR LANGUAGE PLPGSQL PUNTOYCOMA
    (20) funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS . DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PUNTOYCOMA DOLAR DOLAR LANGUAGE PLPGSQL PUNTOYCOMA

    DOLAR           shift and go to state 148


state 144

    (21) funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS . tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PUNTOYCOMA DOLAR DOLAR LANGUAGE PLPGSQL PUNTOYCOMA
    (22) funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS . tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PUNTOYCOMA DOLAR DOLAR LANGUAGE PLPGSQL PUNTOYCOMA
    (53) tipo -> . INTEGER
    (54) tipo -> . SMALLINT
    (55) tipo -> . BIGINT
    (56) tipo -> . DECIMAL
    (57) tipo -> . NUMERIC
    (58) tipo -> . REAL
    (59) tipo -> . CHAR
    (60) tipo -> . DOUBLE
    (61) tipo -> . PRECISION
    (62) tipo -> . MONEY
    (63) tipo -> . FLOAT
    (64) tipo -> . BOOLEAN
    (65) tipo -> . VOID
    (66) tipo -> . CHAR PARA ENTERO PARC
    (67) tipo -> . CHARACTER VARYING PARA ENTERO PARC
    (68) tipo -> . VARCHAR PARA ENTERO PARC
    (69) tipo -> . CHARACTER PARA ENTERO PARC
    (70) tipo -> . TEXT
    (71) tipo -> . TIME
    (72) tipo -> . TIMESTAMP
    (73) tipo -> . DATE

    INTEGER         shift and go to state 76
    SMALLINT        shift and go to state 77
    BIGINT          shift and go to state 78
    DECIMAL         shift and go to state 79
    NUMERIC         shift and go to state 80
    REAL            shift and go to state 81
    CHAR            shift and go to state 82
    DOUBLE          shift and go to state 83
    PRECISION       shift and go to state 84
    MONEY           shift and go to state 85
    FLOAT           shift and go to state 86
    BOOLEAN         shift and go to state 87
    VOID            shift and go to state 88
    CHARACTER       shift and go to state 89
    VARCHAR         shift and go to state 90
    TEXT            shift and go to state 91
    TIME            shift and go to state 92
    TIMESTAMP       shift and go to state 93
    DATE            shift and go to state 94

    tipo                           shift and go to state 149

state 145

    (25) funcion -> CREATE OR REPLACE PROCEDURE ID PARA parametros PARC RETURNS . tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PUNTOYCOMA DOLAR DOLAR LANGUAGE PLPGSQL PUNTOYCOMA
    (26) funcion -> CREATE OR REPLACE PROCEDURE ID PARA parametros PARC RETURNS . tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PUNTOYCOMA DOLAR DOLAR LANGUAGE PLPGSQL PUNTOYCOMA
    (53) tipo -> . INTEGER
    (54) tipo -> . SMALLINT
    (55) tipo -> . BIGINT
    (56) tipo -> . DECIMAL
    (57) tipo -> . NUMERIC
    (58) tipo -> . REAL
    (59) tipo -> . CHAR
    (60) tipo -> . DOUBLE
    (61) tipo -> . PRECISION
    (62) tipo -> . MONEY
    (63) tipo -> . FLOAT
    (64) tipo -> . BOOLEAN
    (65) tipo -> . VOID
    (66) tipo -> . CHAR PARA ENTERO PARC
    (67) tipo -> . CHARACTER VARYING PARA ENTERO PARC
    (68) tipo -> . VARCHAR PARA ENTERO PARC
    (69) tipo -> . CHARACTER PARA ENTERO PARC
    (70) tipo -> . TEXT
    (71) tipo -> . TIME
    (72) tipo -> . TIMESTAMP
    (73) tipo -> . DATE

    INTEGER         shift and go to state 76
    SMALLINT        shift and go to state 77
    BIGINT          shift and go to state 78
    DECIMAL         shift and go to state 79
    NUMERIC         shift and go to state 80
    REAL            shift and go to state 81
    CHAR            shift and go to state 82
    DOUBLE          shift and go to state 83
    PRECISION       shift and go to state 84
    MONEY           shift and go to state 85
    FLOAT           shift and go to state 86
    BOOLEAN         shift and go to state 87
    VOID            shift and go to state 88
    CHARACTER       shift and go to state 89
    VARCHAR         shift and go to state 90
    TEXT            shift and go to state 91
    TIME            shift and go to state 92
    TIMESTAMP       shift and go to state 93
    DATE            shift and go to state 94

    tipo                           shift and go to state 150

state 146

    (23) funcion -> CREATE PROCEDURE ID PARA parametros PARC RETURNS tipo AS . DOLAR DOLAR BEGIN instrucciones_funct_list END PUNTOYCOMA DOLAR DOLAR LANGUAGE PLPGSQL PUNTOYCOMA
    (24) funcion -> CREATE PROCEDURE ID PARA parametros PARC RETURNS tipo AS . DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PUNTOYCOMA DOLAR DOLAR LANGUAGE PLPGSQL PUNTOYCOMA

    DOLAR           shift and go to state 151


state 147

    (67) tipo -> CHARACTER VARYING PARA ENTERO PARC .

    PARC            reduce using rule 67 (tipo -> CHARACTER VARYING PARA ENTERO PARC .)
    COMA            reduce using rule 67 (tipo -> CHARACTER VARYING PARA ENTERO PARC .)
    AS              reduce using rule 67 (tipo -> CHARACTER VARYING PARA ENTERO PARC .)
    DOSPUNTOS       reduce using rule 67 (tipo -> CHARACTER VARYING PARA ENTERO PARC .)
    PUNTOYCOMA      reduce using rule 67 (tipo -> CHARACTER VARYING PARA ENTERO PARC .)
    DEFAULT         reduce using rule 67 (tipo -> CHARACTER VARYING PARA ENTERO PARC .)


state 148

    (19) funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR . DOLAR BEGIN instrucciones_funct_list END PUNTOYCOMA DOLAR DOLAR LANGUAGE PLPGSQL PUNTOYCOMA
    (20) funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR . DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PUNTOYCOMA DOLAR DOLAR LANGUAGE PLPGSQL PUNTOYCOMA

    DOLAR           shift and go to state 152


state 149

    (21) funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo . AS DOLAR DOLAR BEGIN instrucciones_funct_list END PUNTOYCOMA DOLAR DOLAR LANGUAGE PLPGSQL PUNTOYCOMA
    (22) funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo . AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PUNTOYCOMA DOLAR DOLAR LANGUAGE PLPGSQL PUNTOYCOMA

    AS              shift and go to state 153


state 150

    (25) funcion -> CREATE OR REPLACE PROCEDURE ID PARA parametros PARC RETURNS tipo . AS DOLAR DOLAR BEGIN instrucciones_funct_list END PUNTOYCOMA DOLAR DOLAR LANGUAGE PLPGSQL PUNTOYCOMA
    (26) funcion -> CREATE OR REPLACE PROCEDURE ID PARA parametros PARC RETURNS tipo . AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PUNTOYCOMA DOLAR DOLAR LANGUAGE PLPGSQL PUNTOYCOMA

    AS              shift and go to state 154


state 151

    (23) funcion -> CREATE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR . DOLAR BEGIN instrucciones_funct_list END PUNTOYCOMA DOLAR DOLAR LANGUAGE PLPGSQL PUNTOYCOMA
    (24) funcion -> CREATE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR . DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PUNTOYCOMA DOLAR DOLAR LANGUAGE PLPGSQL PUNTOYCOMA

    DOLAR           shift and go to state 155


state 152

    (19) funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR . BEGIN instrucciones_funct_list END PUNTOYCOMA DOLAR DOLAR LANGUAGE PLPGSQL PUNTOYCOMA
    (20) funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR . DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PUNTOYCOMA DOLAR DOLAR LANGUAGE PLPGSQL PUNTOYCOMA

    BEGIN           shift and go to state 156
    DECLARE         shift and go to state 157


state 153

    (21) funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS . DOLAR DOLAR BEGIN instrucciones_funct_list END PUNTOYCOMA DOLAR DOLAR LANGUAGE PLPGSQL PUNTOYCOMA
    (22) funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS . DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PUNTOYCOMA DOLAR DOLAR LANGUAGE PLPGSQL PUNTOYCOMA

    DOLAR           shift and go to state 158


state 154

    (25) funcion -> CREATE OR REPLACE PROCEDURE ID PARA parametros PARC RETURNS tipo AS . DOLAR DOLAR BEGIN instrucciones_funct_list END PUNTOYCOMA DOLAR DOLAR LANGUAGE PLPGSQL PUNTOYCOMA
    (26) funcion -> CREATE OR REPLACE PROCEDURE ID PARA parametros PARC RETURNS tipo AS . DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PUNTOYCOMA DOLAR DOLAR LANGUAGE PLPGSQL PUNTOYCOMA

    DOLAR           shift and go to state 159


state 155

    (23) funcion -> CREATE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR . BEGIN instrucciones_funct_list END PUNTOYCOMA DOLAR DOLAR LANGUAGE PLPGSQL PUNTOYCOMA
    (24) funcion -> CREATE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR . DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PUNTOYCOMA DOLAR DOLAR LANGUAGE PLPGSQL PUNTOYCOMA

    BEGIN           shift and go to state 160
    DECLARE         shift and go to state 161


state 156

    (19) funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN . instrucciones_funct_list END PUNTOYCOMA DOLAR DOLAR LANGUAGE PLPGSQL PUNTOYCOMA
    (8) instrucciones_funct_list -> . instrucciones_funct_list instrucciones_funct_sent
    (9) instrucciones_funct_list -> . instrucciones_funct_sent
    (10) instrucciones_funct_sent -> . asignacion
    (11) instrucciones_funct_sent -> . declaracion
    (12) instrucciones_funct_sent -> . imprimir
    (13) instrucciones_funct_sent -> . sentencia_if
    (14) instrucciones_funct_sent -> . sentencia_switch
    (15) instrucciones_funct_sent -> . PUNTOYCOMA
    (16) instrucciones_funct_sent -> . llamada_funcion
    (17) instrucciones_funct_sent -> . empty
    (18) instrucciones_funct_sent -> . error
    (49) asignacion -> . ID DOSPUNTOS IGUAL expresion PUNTOYCOMA
    (50) declaracion -> . ID tipo DOSPUNTOS IGUAL expresion PUNTOYCOMA
    (51) declaracion -> . ID tipo PUNTOYCOMA
    (52) declaracion -> . ID tipo DEFAULT expresion PUNTOYCOMA
    (45) imprimir -> . RAISE lista_imprimir PUNTOYCOMA
    (41) sentencia_if -> . IF expresion THEN instrucciones_funct_list else END IF PUNTOYCOMA
    (36) sentencia_switch -> . CASE expresion case_list END CASE PUNTOYCOMA
    (27) llamada_funcion -> . SELECT ID PARA params PARC PUNTOYCOMA
    (28) llamada_funcion -> . CALL ID PARA params PARC PUNTOYCOMA
    (105) empty -> .

  ! shift/reduce conflict for PUNTOYCOMA resolved as shift
  ! shift/reduce conflict for error resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for RAISE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for SELECT resolved as shift
  ! shift/reduce conflict for CALL resolved as shift
    PUNTOYCOMA      shift and go to state 164
    error           shift and go to state 173
    ID              shift and go to state 162
    RAISE           shift and go to state 174
    IF              shift and go to state 175
    CASE            shift and go to state 176
    SELECT          shift and go to state 9
    CALL            shift and go to state 10
    END             reduce using rule 105 (empty -> .)

  ! PUNTOYCOMA      [ reduce using rule 105 (empty -> .) ]
  ! error           [ reduce using rule 105 (empty -> .) ]
  ! ID              [ reduce using rule 105 (empty -> .) ]
  ! RAISE           [ reduce using rule 105 (empty -> .) ]
  ! IF              [ reduce using rule 105 (empty -> .) ]
  ! CASE            [ reduce using rule 105 (empty -> .) ]
  ! SELECT          [ reduce using rule 105 (empty -> .) ]
  ! CALL            [ reduce using rule 105 (empty -> .) ]

    instrucciones_funct_list       shift and go to state 163
    instrucciones_funct_sent       shift and go to state 165
    asignacion                     shift and go to state 166
    declaracion                    shift and go to state 167
    imprimir                       shift and go to state 168
    sentencia_if                   shift and go to state 169
    sentencia_switch               shift and go to state 170
    llamada_funcion                shift and go to state 171
    empty                          shift and go to state 172

state 157

    (20) funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE . instrucciones_funct_list BEGIN instrucciones_funct_list END PUNTOYCOMA DOLAR DOLAR LANGUAGE PLPGSQL PUNTOYCOMA
    (8) instrucciones_funct_list -> . instrucciones_funct_list instrucciones_funct_sent
    (9) instrucciones_funct_list -> . instrucciones_funct_sent
    (10) instrucciones_funct_sent -> . asignacion
    (11) instrucciones_funct_sent -> . declaracion
    (12) instrucciones_funct_sent -> . imprimir
    (13) instrucciones_funct_sent -> . sentencia_if
    (14) instrucciones_funct_sent -> . sentencia_switch
    (15) instrucciones_funct_sent -> . PUNTOYCOMA
    (16) instrucciones_funct_sent -> . llamada_funcion
    (17) instrucciones_funct_sent -> . empty
    (18) instrucciones_funct_sent -> . error
    (49) asignacion -> . ID DOSPUNTOS IGUAL expresion PUNTOYCOMA
    (50) declaracion -> . ID tipo DOSPUNTOS IGUAL expresion PUNTOYCOMA
    (51) declaracion -> . ID tipo PUNTOYCOMA
    (52) declaracion -> . ID tipo DEFAULT expresion PUNTOYCOMA
    (45) imprimir -> . RAISE lista_imprimir PUNTOYCOMA
    (41) sentencia_if -> . IF expresion THEN instrucciones_funct_list else END IF PUNTOYCOMA
    (36) sentencia_switch -> . CASE expresion case_list END CASE PUNTOYCOMA
    (27) llamada_funcion -> . SELECT ID PARA params PARC PUNTOYCOMA
    (28) llamada_funcion -> . CALL ID PARA params PARC PUNTOYCOMA
    (105) empty -> .

  ! shift/reduce conflict for PUNTOYCOMA resolved as shift
  ! shift/reduce conflict for error resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for RAISE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for SELECT resolved as shift
  ! shift/reduce conflict for CALL resolved as shift
    PUNTOYCOMA      shift and go to state 164
    error           shift and go to state 173
    ID              shift and go to state 162
    RAISE           shift and go to state 174
    IF              shift and go to state 175
    CASE            shift and go to state 176
    SELECT          shift and go to state 9
    CALL            shift and go to state 10
    BEGIN           reduce using rule 105 (empty -> .)

  ! PUNTOYCOMA      [ reduce using rule 105 (empty -> .) ]
  ! error           [ reduce using rule 105 (empty -> .) ]
  ! ID              [ reduce using rule 105 (empty -> .) ]
  ! RAISE           [ reduce using rule 105 (empty -> .) ]
  ! IF              [ reduce using rule 105 (empty -> .) ]
  ! CASE            [ reduce using rule 105 (empty -> .) ]
  ! SELECT          [ reduce using rule 105 (empty -> .) ]
  ! CALL            [ reduce using rule 105 (empty -> .) ]

    instrucciones_funct_list       shift and go to state 177
    instrucciones_funct_sent       shift and go to state 165
    asignacion                     shift and go to state 166
    declaracion                    shift and go to state 167
    imprimir                       shift and go to state 168
    sentencia_if                   shift and go to state 169
    sentencia_switch               shift and go to state 170
    llamada_funcion                shift and go to state 171
    empty                          shift and go to state 172

state 158

    (21) funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR . DOLAR BEGIN instrucciones_funct_list END PUNTOYCOMA DOLAR DOLAR LANGUAGE PLPGSQL PUNTOYCOMA
    (22) funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR . DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PUNTOYCOMA DOLAR DOLAR LANGUAGE PLPGSQL PUNTOYCOMA

    DOLAR           shift and go to state 178


state 159

    (25) funcion -> CREATE OR REPLACE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR . DOLAR BEGIN instrucciones_funct_list END PUNTOYCOMA DOLAR DOLAR LANGUAGE PLPGSQL PUNTOYCOMA
    (26) funcion -> CREATE OR REPLACE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR . DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PUNTOYCOMA DOLAR DOLAR LANGUAGE PLPGSQL PUNTOYCOMA

    DOLAR           shift and go to state 179


state 160

    (23) funcion -> CREATE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN . instrucciones_funct_list END PUNTOYCOMA DOLAR DOLAR LANGUAGE PLPGSQL PUNTOYCOMA
    (8) instrucciones_funct_list -> . instrucciones_funct_list instrucciones_funct_sent
    (9) instrucciones_funct_list -> . instrucciones_funct_sent
    (10) instrucciones_funct_sent -> . asignacion
    (11) instrucciones_funct_sent -> . declaracion
    (12) instrucciones_funct_sent -> . imprimir
    (13) instrucciones_funct_sent -> . sentencia_if
    (14) instrucciones_funct_sent -> . sentencia_switch
    (15) instrucciones_funct_sent -> . PUNTOYCOMA
    (16) instrucciones_funct_sent -> . llamada_funcion
    (17) instrucciones_funct_sent -> . empty
    (18) instrucciones_funct_sent -> . error
    (49) asignacion -> . ID DOSPUNTOS IGUAL expresion PUNTOYCOMA
    (50) declaracion -> . ID tipo DOSPUNTOS IGUAL expresion PUNTOYCOMA
    (51) declaracion -> . ID tipo PUNTOYCOMA
    (52) declaracion -> . ID tipo DEFAULT expresion PUNTOYCOMA
    (45) imprimir -> . RAISE lista_imprimir PUNTOYCOMA
    (41) sentencia_if -> . IF expresion THEN instrucciones_funct_list else END IF PUNTOYCOMA
    (36) sentencia_switch -> . CASE expresion case_list END CASE PUNTOYCOMA
    (27) llamada_funcion -> . SELECT ID PARA params PARC PUNTOYCOMA
    (28) llamada_funcion -> . CALL ID PARA params PARC PUNTOYCOMA
    (105) empty -> .

  ! shift/reduce conflict for PUNTOYCOMA resolved as shift
  ! shift/reduce conflict for error resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for RAISE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for SELECT resolved as shift
  ! shift/reduce conflict for CALL resolved as shift
    PUNTOYCOMA      shift and go to state 164
    error           shift and go to state 173
    ID              shift and go to state 162
    RAISE           shift and go to state 174
    IF              shift and go to state 175
    CASE            shift and go to state 176
    SELECT          shift and go to state 9
    CALL            shift and go to state 10
    END             reduce using rule 105 (empty -> .)

  ! PUNTOYCOMA      [ reduce using rule 105 (empty -> .) ]
  ! error           [ reduce using rule 105 (empty -> .) ]
  ! ID              [ reduce using rule 105 (empty -> .) ]
  ! RAISE           [ reduce using rule 105 (empty -> .) ]
  ! IF              [ reduce using rule 105 (empty -> .) ]
  ! CASE            [ reduce using rule 105 (empty -> .) ]
  ! SELECT          [ reduce using rule 105 (empty -> .) ]
  ! CALL            [ reduce using rule 105 (empty -> .) ]

    instrucciones_funct_list       shift and go to state 180
    instrucciones_funct_sent       shift and go to state 165
    asignacion                     shift and go to state 166
    declaracion                    shift and go to state 167
    imprimir                       shift and go to state 168
    sentencia_if                   shift and go to state 169
    sentencia_switch               shift and go to state 170
    llamada_funcion                shift and go to state 171
    empty                          shift and go to state 172

state 161

    (24) funcion -> CREATE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE . instrucciones_funct_list BEGIN instrucciones_funct_list END PUNTOYCOMA DOLAR DOLAR LANGUAGE PLPGSQL PUNTOYCOMA
    (8) instrucciones_funct_list -> . instrucciones_funct_list instrucciones_funct_sent
    (9) instrucciones_funct_list -> . instrucciones_funct_sent
    (10) instrucciones_funct_sent -> . asignacion
    (11) instrucciones_funct_sent -> . declaracion
    (12) instrucciones_funct_sent -> . imprimir
    (13) instrucciones_funct_sent -> . sentencia_if
    (14) instrucciones_funct_sent -> . sentencia_switch
    (15) instrucciones_funct_sent -> . PUNTOYCOMA
    (16) instrucciones_funct_sent -> . llamada_funcion
    (17) instrucciones_funct_sent -> . empty
    (18) instrucciones_funct_sent -> . error
    (49) asignacion -> . ID DOSPUNTOS IGUAL expresion PUNTOYCOMA
    (50) declaracion -> . ID tipo DOSPUNTOS IGUAL expresion PUNTOYCOMA
    (51) declaracion -> . ID tipo PUNTOYCOMA
    (52) declaracion -> . ID tipo DEFAULT expresion PUNTOYCOMA
    (45) imprimir -> . RAISE lista_imprimir PUNTOYCOMA
    (41) sentencia_if -> . IF expresion THEN instrucciones_funct_list else END IF PUNTOYCOMA
    (36) sentencia_switch -> . CASE expresion case_list END CASE PUNTOYCOMA
    (27) llamada_funcion -> . SELECT ID PARA params PARC PUNTOYCOMA
    (28) llamada_funcion -> . CALL ID PARA params PARC PUNTOYCOMA
    (105) empty -> .

  ! shift/reduce conflict for PUNTOYCOMA resolved as shift
  ! shift/reduce conflict for error resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for RAISE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for SELECT resolved as shift
  ! shift/reduce conflict for CALL resolved as shift
    PUNTOYCOMA      shift and go to state 164
    error           shift and go to state 173
    ID              shift and go to state 162
    RAISE           shift and go to state 174
    IF              shift and go to state 175
    CASE            shift and go to state 176
    SELECT          shift and go to state 9
    CALL            shift and go to state 10
    BEGIN           reduce using rule 105 (empty -> .)

  ! PUNTOYCOMA      [ reduce using rule 105 (empty -> .) ]
  ! error           [ reduce using rule 105 (empty -> .) ]
  ! ID              [ reduce using rule 105 (empty -> .) ]
  ! RAISE           [ reduce using rule 105 (empty -> .) ]
  ! IF              [ reduce using rule 105 (empty -> .) ]
  ! CASE            [ reduce using rule 105 (empty -> .) ]
  ! SELECT          [ reduce using rule 105 (empty -> .) ]
  ! CALL            [ reduce using rule 105 (empty -> .) ]

    instrucciones_funct_list       shift and go to state 181
    instrucciones_funct_sent       shift and go to state 165
    asignacion                     shift and go to state 166
    declaracion                    shift and go to state 167
    imprimir                       shift and go to state 168
    sentencia_if                   shift and go to state 169
    sentencia_switch               shift and go to state 170
    llamada_funcion                shift and go to state 171
    empty                          shift and go to state 172

state 162

    (49) asignacion -> ID . DOSPUNTOS IGUAL expresion PUNTOYCOMA
    (50) declaracion -> ID . tipo DOSPUNTOS IGUAL expresion PUNTOYCOMA
    (51) declaracion -> ID . tipo PUNTOYCOMA
    (52) declaracion -> ID . tipo DEFAULT expresion PUNTOYCOMA
    (53) tipo -> . INTEGER
    (54) tipo -> . SMALLINT
    (55) tipo -> . BIGINT
    (56) tipo -> . DECIMAL
    (57) tipo -> . NUMERIC
    (58) tipo -> . REAL
    (59) tipo -> . CHAR
    (60) tipo -> . DOUBLE
    (61) tipo -> . PRECISION
    (62) tipo -> . MONEY
    (63) tipo -> . FLOAT
    (64) tipo -> . BOOLEAN
    (65) tipo -> . VOID
    (66) tipo -> . CHAR PARA ENTERO PARC
    (67) tipo -> . CHARACTER VARYING PARA ENTERO PARC
    (68) tipo -> . VARCHAR PARA ENTERO PARC
    (69) tipo -> . CHARACTER PARA ENTERO PARC
    (70) tipo -> . TEXT
    (71) tipo -> . TIME
    (72) tipo -> . TIMESTAMP
    (73) tipo -> . DATE

    DOSPUNTOS       shift and go to state 182
    INTEGER         shift and go to state 76
    SMALLINT        shift and go to state 77
    BIGINT          shift and go to state 78
    DECIMAL         shift and go to state 79
    NUMERIC         shift and go to state 80
    REAL            shift and go to state 81
    CHAR            shift and go to state 82
    DOUBLE          shift and go to state 83
    PRECISION       shift and go to state 84
    MONEY           shift and go to state 85
    FLOAT           shift and go to state 86
    BOOLEAN         shift and go to state 87
    VOID            shift and go to state 88
    CHARACTER       shift and go to state 89
    VARCHAR         shift and go to state 90
    TEXT            shift and go to state 91
    TIME            shift and go to state 92
    TIMESTAMP       shift and go to state 93
    DATE            shift and go to state 94

    tipo                           shift and go to state 183

state 163

    (19) funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list . END PUNTOYCOMA DOLAR DOLAR LANGUAGE PLPGSQL PUNTOYCOMA
    (8) instrucciones_funct_list -> instrucciones_funct_list . instrucciones_funct_sent
    (10) instrucciones_funct_sent -> . asignacion
    (11) instrucciones_funct_sent -> . declaracion
    (12) instrucciones_funct_sent -> . imprimir
    (13) instrucciones_funct_sent -> . sentencia_if
    (14) instrucciones_funct_sent -> . sentencia_switch
    (15) instrucciones_funct_sent -> . PUNTOYCOMA
    (16) instrucciones_funct_sent -> . llamada_funcion
    (17) instrucciones_funct_sent -> . empty
    (18) instrucciones_funct_sent -> . error
    (49) asignacion -> . ID DOSPUNTOS IGUAL expresion PUNTOYCOMA
    (50) declaracion -> . ID tipo DOSPUNTOS IGUAL expresion PUNTOYCOMA
    (51) declaracion -> . ID tipo PUNTOYCOMA
    (52) declaracion -> . ID tipo DEFAULT expresion PUNTOYCOMA
    (45) imprimir -> . RAISE lista_imprimir PUNTOYCOMA
    (41) sentencia_if -> . IF expresion THEN instrucciones_funct_list else END IF PUNTOYCOMA
    (36) sentencia_switch -> . CASE expresion case_list END CASE PUNTOYCOMA
    (27) llamada_funcion -> . SELECT ID PARA params PARC PUNTOYCOMA
    (28) llamada_funcion -> . CALL ID PARA params PARC PUNTOYCOMA
    (105) empty -> .

  ! shift/reduce conflict for END resolved as shift
  ! shift/reduce conflict for PUNTOYCOMA resolved as shift
  ! shift/reduce conflict for error resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for RAISE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for SELECT resolved as shift
  ! shift/reduce conflict for CALL resolved as shift
    END             shift and go to state 184
    PUNTOYCOMA      shift and go to state 164
    error           shift and go to state 173
    ID              shift and go to state 162
    RAISE           shift and go to state 174
    IF              shift and go to state 175
    CASE            shift and go to state 176
    SELECT          shift and go to state 9
    CALL            shift and go to state 10

  ! END             [ reduce using rule 105 (empty -> .) ]
  ! PUNTOYCOMA      [ reduce using rule 105 (empty -> .) ]
  ! error           [ reduce using rule 105 (empty -> .) ]
  ! ID              [ reduce using rule 105 (empty -> .) ]
  ! RAISE           [ reduce using rule 105 (empty -> .) ]
  ! IF              [ reduce using rule 105 (empty -> .) ]
  ! CASE            [ reduce using rule 105 (empty -> .) ]
  ! SELECT          [ reduce using rule 105 (empty -> .) ]
  ! CALL            [ reduce using rule 105 (empty -> .) ]

    instrucciones_funct_sent       shift and go to state 185
    asignacion                     shift and go to state 166
    declaracion                    shift and go to state 167
    imprimir                       shift and go to state 168
    sentencia_if                   shift and go to state 169
    sentencia_switch               shift and go to state 170
    llamada_funcion                shift and go to state 171
    empty                          shift and go to state 172

state 164

    (15) instrucciones_funct_sent -> PUNTOYCOMA .

    END             reduce using rule 15 (instrucciones_funct_sent -> PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 15 (instrucciones_funct_sent -> PUNTOYCOMA .)
    error           reduce using rule 15 (instrucciones_funct_sent -> PUNTOYCOMA .)
    ID              reduce using rule 15 (instrucciones_funct_sent -> PUNTOYCOMA .)
    RAISE           reduce using rule 15 (instrucciones_funct_sent -> PUNTOYCOMA .)
    IF              reduce using rule 15 (instrucciones_funct_sent -> PUNTOYCOMA .)
    CASE            reduce using rule 15 (instrucciones_funct_sent -> PUNTOYCOMA .)
    SELECT          reduce using rule 15 (instrucciones_funct_sent -> PUNTOYCOMA .)
    CALL            reduce using rule 15 (instrucciones_funct_sent -> PUNTOYCOMA .)
    BEGIN           reduce using rule 15 (instrucciones_funct_sent -> PUNTOYCOMA .)
    ELSE            reduce using rule 15 (instrucciones_funct_sent -> PUNTOYCOMA .)
    ELSEIF          reduce using rule 15 (instrucciones_funct_sent -> PUNTOYCOMA .)
    WHEN            reduce using rule 15 (instrucciones_funct_sent -> PUNTOYCOMA .)


state 165

    (9) instrucciones_funct_list -> instrucciones_funct_sent .

    END             reduce using rule 9 (instrucciones_funct_list -> instrucciones_funct_sent .)
    PUNTOYCOMA      reduce using rule 9 (instrucciones_funct_list -> instrucciones_funct_sent .)
    error           reduce using rule 9 (instrucciones_funct_list -> instrucciones_funct_sent .)
    ID              reduce using rule 9 (instrucciones_funct_list -> instrucciones_funct_sent .)
    RAISE           reduce using rule 9 (instrucciones_funct_list -> instrucciones_funct_sent .)
    IF              reduce using rule 9 (instrucciones_funct_list -> instrucciones_funct_sent .)
    CASE            reduce using rule 9 (instrucciones_funct_list -> instrucciones_funct_sent .)
    SELECT          reduce using rule 9 (instrucciones_funct_list -> instrucciones_funct_sent .)
    CALL            reduce using rule 9 (instrucciones_funct_list -> instrucciones_funct_sent .)
    BEGIN           reduce using rule 9 (instrucciones_funct_list -> instrucciones_funct_sent .)
    ELSE            reduce using rule 9 (instrucciones_funct_list -> instrucciones_funct_sent .)
    ELSEIF          reduce using rule 9 (instrucciones_funct_list -> instrucciones_funct_sent .)
    WHEN            reduce using rule 9 (instrucciones_funct_list -> instrucciones_funct_sent .)


state 166

    (10) instrucciones_funct_sent -> asignacion .

    END             reduce using rule 10 (instrucciones_funct_sent -> asignacion .)
    PUNTOYCOMA      reduce using rule 10 (instrucciones_funct_sent -> asignacion .)
    error           reduce using rule 10 (instrucciones_funct_sent -> asignacion .)
    ID              reduce using rule 10 (instrucciones_funct_sent -> asignacion .)
    RAISE           reduce using rule 10 (instrucciones_funct_sent -> asignacion .)
    IF              reduce using rule 10 (instrucciones_funct_sent -> asignacion .)
    CASE            reduce using rule 10 (instrucciones_funct_sent -> asignacion .)
    SELECT          reduce using rule 10 (instrucciones_funct_sent -> asignacion .)
    CALL            reduce using rule 10 (instrucciones_funct_sent -> asignacion .)
    BEGIN           reduce using rule 10 (instrucciones_funct_sent -> asignacion .)
    ELSE            reduce using rule 10 (instrucciones_funct_sent -> asignacion .)
    ELSEIF          reduce using rule 10 (instrucciones_funct_sent -> asignacion .)
    WHEN            reduce using rule 10 (instrucciones_funct_sent -> asignacion .)


state 167

    (11) instrucciones_funct_sent -> declaracion .

    END             reduce using rule 11 (instrucciones_funct_sent -> declaracion .)
    PUNTOYCOMA      reduce using rule 11 (instrucciones_funct_sent -> declaracion .)
    error           reduce using rule 11 (instrucciones_funct_sent -> declaracion .)
    ID              reduce using rule 11 (instrucciones_funct_sent -> declaracion .)
    RAISE           reduce using rule 11 (instrucciones_funct_sent -> declaracion .)
    IF              reduce using rule 11 (instrucciones_funct_sent -> declaracion .)
    CASE            reduce using rule 11 (instrucciones_funct_sent -> declaracion .)
    SELECT          reduce using rule 11 (instrucciones_funct_sent -> declaracion .)
    CALL            reduce using rule 11 (instrucciones_funct_sent -> declaracion .)
    BEGIN           reduce using rule 11 (instrucciones_funct_sent -> declaracion .)
    ELSE            reduce using rule 11 (instrucciones_funct_sent -> declaracion .)
    ELSEIF          reduce using rule 11 (instrucciones_funct_sent -> declaracion .)
    WHEN            reduce using rule 11 (instrucciones_funct_sent -> declaracion .)


state 168

    (12) instrucciones_funct_sent -> imprimir .

    END             reduce using rule 12 (instrucciones_funct_sent -> imprimir .)
    PUNTOYCOMA      reduce using rule 12 (instrucciones_funct_sent -> imprimir .)
    error           reduce using rule 12 (instrucciones_funct_sent -> imprimir .)
    ID              reduce using rule 12 (instrucciones_funct_sent -> imprimir .)
    RAISE           reduce using rule 12 (instrucciones_funct_sent -> imprimir .)
    IF              reduce using rule 12 (instrucciones_funct_sent -> imprimir .)
    CASE            reduce using rule 12 (instrucciones_funct_sent -> imprimir .)
    SELECT          reduce using rule 12 (instrucciones_funct_sent -> imprimir .)
    CALL            reduce using rule 12 (instrucciones_funct_sent -> imprimir .)
    BEGIN           reduce using rule 12 (instrucciones_funct_sent -> imprimir .)
    ELSE            reduce using rule 12 (instrucciones_funct_sent -> imprimir .)
    ELSEIF          reduce using rule 12 (instrucciones_funct_sent -> imprimir .)
    WHEN            reduce using rule 12 (instrucciones_funct_sent -> imprimir .)


state 169

    (13) instrucciones_funct_sent -> sentencia_if .

    END             reduce using rule 13 (instrucciones_funct_sent -> sentencia_if .)
    PUNTOYCOMA      reduce using rule 13 (instrucciones_funct_sent -> sentencia_if .)
    error           reduce using rule 13 (instrucciones_funct_sent -> sentencia_if .)
    ID              reduce using rule 13 (instrucciones_funct_sent -> sentencia_if .)
    RAISE           reduce using rule 13 (instrucciones_funct_sent -> sentencia_if .)
    IF              reduce using rule 13 (instrucciones_funct_sent -> sentencia_if .)
    CASE            reduce using rule 13 (instrucciones_funct_sent -> sentencia_if .)
    SELECT          reduce using rule 13 (instrucciones_funct_sent -> sentencia_if .)
    CALL            reduce using rule 13 (instrucciones_funct_sent -> sentencia_if .)
    BEGIN           reduce using rule 13 (instrucciones_funct_sent -> sentencia_if .)
    ELSE            reduce using rule 13 (instrucciones_funct_sent -> sentencia_if .)
    ELSEIF          reduce using rule 13 (instrucciones_funct_sent -> sentencia_if .)
    WHEN            reduce using rule 13 (instrucciones_funct_sent -> sentencia_if .)


state 170

    (14) instrucciones_funct_sent -> sentencia_switch .

    END             reduce using rule 14 (instrucciones_funct_sent -> sentencia_switch .)
    PUNTOYCOMA      reduce using rule 14 (instrucciones_funct_sent -> sentencia_switch .)
    error           reduce using rule 14 (instrucciones_funct_sent -> sentencia_switch .)
    ID              reduce using rule 14 (instrucciones_funct_sent -> sentencia_switch .)
    RAISE           reduce using rule 14 (instrucciones_funct_sent -> sentencia_switch .)
    IF              reduce using rule 14 (instrucciones_funct_sent -> sentencia_switch .)
    CASE            reduce using rule 14 (instrucciones_funct_sent -> sentencia_switch .)
    SELECT          reduce using rule 14 (instrucciones_funct_sent -> sentencia_switch .)
    CALL            reduce using rule 14 (instrucciones_funct_sent -> sentencia_switch .)
    BEGIN           reduce using rule 14 (instrucciones_funct_sent -> sentencia_switch .)
    ELSE            reduce using rule 14 (instrucciones_funct_sent -> sentencia_switch .)
    ELSEIF          reduce using rule 14 (instrucciones_funct_sent -> sentencia_switch .)
    WHEN            reduce using rule 14 (instrucciones_funct_sent -> sentencia_switch .)


state 171

    (16) instrucciones_funct_sent -> llamada_funcion .

    END             reduce using rule 16 (instrucciones_funct_sent -> llamada_funcion .)
    PUNTOYCOMA      reduce using rule 16 (instrucciones_funct_sent -> llamada_funcion .)
    error           reduce using rule 16 (instrucciones_funct_sent -> llamada_funcion .)
    ID              reduce using rule 16 (instrucciones_funct_sent -> llamada_funcion .)
    RAISE           reduce using rule 16 (instrucciones_funct_sent -> llamada_funcion .)
    IF              reduce using rule 16 (instrucciones_funct_sent -> llamada_funcion .)
    CASE            reduce using rule 16 (instrucciones_funct_sent -> llamada_funcion .)
    SELECT          reduce using rule 16 (instrucciones_funct_sent -> llamada_funcion .)
    CALL            reduce using rule 16 (instrucciones_funct_sent -> llamada_funcion .)
    BEGIN           reduce using rule 16 (instrucciones_funct_sent -> llamada_funcion .)
    ELSE            reduce using rule 16 (instrucciones_funct_sent -> llamada_funcion .)
    ELSEIF          reduce using rule 16 (instrucciones_funct_sent -> llamada_funcion .)
    WHEN            reduce using rule 16 (instrucciones_funct_sent -> llamada_funcion .)


state 172

    (17) instrucciones_funct_sent -> empty .

    END             reduce using rule 17 (instrucciones_funct_sent -> empty .)
    PUNTOYCOMA      reduce using rule 17 (instrucciones_funct_sent -> empty .)
    error           reduce using rule 17 (instrucciones_funct_sent -> empty .)
    ID              reduce using rule 17 (instrucciones_funct_sent -> empty .)
    RAISE           reduce using rule 17 (instrucciones_funct_sent -> empty .)
    IF              reduce using rule 17 (instrucciones_funct_sent -> empty .)
    CASE            reduce using rule 17 (instrucciones_funct_sent -> empty .)
    SELECT          reduce using rule 17 (instrucciones_funct_sent -> empty .)
    CALL            reduce using rule 17 (instrucciones_funct_sent -> empty .)
    BEGIN           reduce using rule 17 (instrucciones_funct_sent -> empty .)
    ELSE            reduce using rule 17 (instrucciones_funct_sent -> empty .)
    ELSEIF          reduce using rule 17 (instrucciones_funct_sent -> empty .)
    WHEN            reduce using rule 17 (instrucciones_funct_sent -> empty .)


state 173

    (18) instrucciones_funct_sent -> error .

    END             reduce using rule 18 (instrucciones_funct_sent -> error .)
    PUNTOYCOMA      reduce using rule 18 (instrucciones_funct_sent -> error .)
    error           reduce using rule 18 (instrucciones_funct_sent -> error .)
    ID              reduce using rule 18 (instrucciones_funct_sent -> error .)
    RAISE           reduce using rule 18 (instrucciones_funct_sent -> error .)
    IF              reduce using rule 18 (instrucciones_funct_sent -> error .)
    CASE            reduce using rule 18 (instrucciones_funct_sent -> error .)
    SELECT          reduce using rule 18 (instrucciones_funct_sent -> error .)
    CALL            reduce using rule 18 (instrucciones_funct_sent -> error .)
    BEGIN           reduce using rule 18 (instrucciones_funct_sent -> error .)
    ELSE            reduce using rule 18 (instrucciones_funct_sent -> error .)
    ELSEIF          reduce using rule 18 (instrucciones_funct_sent -> error .)
    WHEN            reduce using rule 18 (instrucciones_funct_sent -> error .)


state 174

    (45) imprimir -> RAISE . lista_imprimir PUNTOYCOMA
    (46) lista_imprimir -> . lista_imprimir COMA sent_imprimir
    (47) lista_imprimir -> . sent_imprimir
    (48) sent_imprimir -> . expresion
    (74) expresion -> . log
    (75) log -> . expresion AND expresion
    (76) log -> . expresion ORR expresion
    (77) log -> . rel
    (78) rel -> . arit MAYOR arit
    (79) rel -> . arit MENOR arit
    (80) rel -> . arit MAYORIGUAL arit
    (81) rel -> . arit MENORIGUAL arit
    (82) rel -> . arit IGUALIGUAL arit
    (83) rel -> . arit NOTIGUAL arit
    (84) rel -> . arit
    (85) arit -> . arit POR arit
    (86) arit -> . arit DIV arit
    (87) arit -> . arit MAS arit
    (88) arit -> . arit MENOS arit
    (89) arit -> . arit MOD arit
    (90) arit -> . arit ANDB arit
    (91) arit -> . arit SHIFTI arit
    (92) arit -> . arit SHIFTD arit
    (93) arit -> . arit XORB arit
    (94) arit -> . arit ORB arit
    (95) arit -> . PARA expresion PARC
    (96) arit -> . ID
    (97) arit -> . CADENA
    (98) arit -> . ENTERO
    (99) arit -> . FLOTANTE
    (100) arit -> . MENOS expresion
    (101) arit -> . NOTB expresion
    (102) arit -> . NOT expresion
    (103) arit -> . TRUE
    (104) arit -> . FALSE

    PARA            shift and go to state 27
    ID              shift and go to state 26
    CADENA          shift and go to state 35
    ENTERO          shift and go to state 36
    FLOTANTE        shift and go to state 37
    MENOS           shift and go to state 34
    NOTB            shift and go to state 38
    NOT             shift and go to state 39
    TRUE            shift and go to state 40
    FALSE           shift and go to state 41

    lista_imprimir                 shift and go to state 186
    sent_imprimir                  shift and go to state 187
    expresion                      shift and go to state 188
    log                            shift and go to state 31
    rel                            shift and go to state 32
    arit                           shift and go to state 33

state 175

    (41) sentencia_if -> IF . expresion THEN instrucciones_funct_list else END IF PUNTOYCOMA
    (74) expresion -> . log
    (75) log -> . expresion AND expresion
    (76) log -> . expresion ORR expresion
    (77) log -> . rel
    (78) rel -> . arit MAYOR arit
    (79) rel -> . arit MENOR arit
    (80) rel -> . arit MAYORIGUAL arit
    (81) rel -> . arit MENORIGUAL arit
    (82) rel -> . arit IGUALIGUAL arit
    (83) rel -> . arit NOTIGUAL arit
    (84) rel -> . arit
    (85) arit -> . arit POR arit
    (86) arit -> . arit DIV arit
    (87) arit -> . arit MAS arit
    (88) arit -> . arit MENOS arit
    (89) arit -> . arit MOD arit
    (90) arit -> . arit ANDB arit
    (91) arit -> . arit SHIFTI arit
    (92) arit -> . arit SHIFTD arit
    (93) arit -> . arit XORB arit
    (94) arit -> . arit ORB arit
    (95) arit -> . PARA expresion PARC
    (96) arit -> . ID
    (97) arit -> . CADENA
    (98) arit -> . ENTERO
    (99) arit -> . FLOTANTE
    (100) arit -> . MENOS expresion
    (101) arit -> . NOTB expresion
    (102) arit -> . NOT expresion
    (103) arit -> . TRUE
    (104) arit -> . FALSE

    PARA            shift and go to state 27
    ID              shift and go to state 26
    CADENA          shift and go to state 35
    ENTERO          shift and go to state 36
    FLOTANTE        shift and go to state 37
    MENOS           shift and go to state 34
    NOTB            shift and go to state 38
    NOT             shift and go to state 39
    TRUE            shift and go to state 40
    FALSE           shift and go to state 41

    expresion                      shift and go to state 189
    log                            shift and go to state 31
    rel                            shift and go to state 32
    arit                           shift and go to state 33

state 176

    (36) sentencia_switch -> CASE . expresion case_list END CASE PUNTOYCOMA
    (74) expresion -> . log
    (75) log -> . expresion AND expresion
    (76) log -> . expresion ORR expresion
    (77) log -> . rel
    (78) rel -> . arit MAYOR arit
    (79) rel -> . arit MENOR arit
    (80) rel -> . arit MAYORIGUAL arit
    (81) rel -> . arit MENORIGUAL arit
    (82) rel -> . arit IGUALIGUAL arit
    (83) rel -> . arit NOTIGUAL arit
    (84) rel -> . arit
    (85) arit -> . arit POR arit
    (86) arit -> . arit DIV arit
    (87) arit -> . arit MAS arit
    (88) arit -> . arit MENOS arit
    (89) arit -> . arit MOD arit
    (90) arit -> . arit ANDB arit
    (91) arit -> . arit SHIFTI arit
    (92) arit -> . arit SHIFTD arit
    (93) arit -> . arit XORB arit
    (94) arit -> . arit ORB arit
    (95) arit -> . PARA expresion PARC
    (96) arit -> . ID
    (97) arit -> . CADENA
    (98) arit -> . ENTERO
    (99) arit -> . FLOTANTE
    (100) arit -> . MENOS expresion
    (101) arit -> . NOTB expresion
    (102) arit -> . NOT expresion
    (103) arit -> . TRUE
    (104) arit -> . FALSE

    PARA            shift and go to state 27
    ID              shift and go to state 26
    CADENA          shift and go to state 35
    ENTERO          shift and go to state 36
    FLOTANTE        shift and go to state 37
    MENOS           shift and go to state 34
    NOTB            shift and go to state 38
    NOT             shift and go to state 39
    TRUE            shift and go to state 40
    FALSE           shift and go to state 41

    expresion                      shift and go to state 190
    log                            shift and go to state 31
    rel                            shift and go to state 32
    arit                           shift and go to state 33

state 177

    (20) funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list . BEGIN instrucciones_funct_list END PUNTOYCOMA DOLAR DOLAR LANGUAGE PLPGSQL PUNTOYCOMA
    (8) instrucciones_funct_list -> instrucciones_funct_list . instrucciones_funct_sent
    (10) instrucciones_funct_sent -> . asignacion
    (11) instrucciones_funct_sent -> . declaracion
    (12) instrucciones_funct_sent -> . imprimir
    (13) instrucciones_funct_sent -> . sentencia_if
    (14) instrucciones_funct_sent -> . sentencia_switch
    (15) instrucciones_funct_sent -> . PUNTOYCOMA
    (16) instrucciones_funct_sent -> . llamada_funcion
    (17) instrucciones_funct_sent -> . empty
    (18) instrucciones_funct_sent -> . error
    (49) asignacion -> . ID DOSPUNTOS IGUAL expresion PUNTOYCOMA
    (50) declaracion -> . ID tipo DOSPUNTOS IGUAL expresion PUNTOYCOMA
    (51) declaracion -> . ID tipo PUNTOYCOMA
    (52) declaracion -> . ID tipo DEFAULT expresion PUNTOYCOMA
    (45) imprimir -> . RAISE lista_imprimir PUNTOYCOMA
    (41) sentencia_if -> . IF expresion THEN instrucciones_funct_list else END IF PUNTOYCOMA
    (36) sentencia_switch -> . CASE expresion case_list END CASE PUNTOYCOMA
    (27) llamada_funcion -> . SELECT ID PARA params PARC PUNTOYCOMA
    (28) llamada_funcion -> . CALL ID PARA params PARC PUNTOYCOMA
    (105) empty -> .

  ! shift/reduce conflict for BEGIN resolved as shift
  ! shift/reduce conflict for PUNTOYCOMA resolved as shift
  ! shift/reduce conflict for error resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for RAISE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for SELECT resolved as shift
  ! shift/reduce conflict for CALL resolved as shift
    BEGIN           shift and go to state 191
    PUNTOYCOMA      shift and go to state 164
    error           shift and go to state 173
    ID              shift and go to state 162
    RAISE           shift and go to state 174
    IF              shift and go to state 175
    CASE            shift and go to state 176
    SELECT          shift and go to state 9
    CALL            shift and go to state 10

  ! BEGIN           [ reduce using rule 105 (empty -> .) ]
  ! PUNTOYCOMA      [ reduce using rule 105 (empty -> .) ]
  ! error           [ reduce using rule 105 (empty -> .) ]
  ! ID              [ reduce using rule 105 (empty -> .) ]
  ! RAISE           [ reduce using rule 105 (empty -> .) ]
  ! IF              [ reduce using rule 105 (empty -> .) ]
  ! CASE            [ reduce using rule 105 (empty -> .) ]
  ! SELECT          [ reduce using rule 105 (empty -> .) ]
  ! CALL            [ reduce using rule 105 (empty -> .) ]

    instrucciones_funct_sent       shift and go to state 185
    asignacion                     shift and go to state 166
    declaracion                    shift and go to state 167
    imprimir                       shift and go to state 168
    sentencia_if                   shift and go to state 169
    sentencia_switch               shift and go to state 170
    llamada_funcion                shift and go to state 171
    empty                          shift and go to state 172

state 178

    (21) funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR . BEGIN instrucciones_funct_list END PUNTOYCOMA DOLAR DOLAR LANGUAGE PLPGSQL PUNTOYCOMA
    (22) funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR . DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PUNTOYCOMA DOLAR DOLAR LANGUAGE PLPGSQL PUNTOYCOMA

    BEGIN           shift and go to state 192
    DECLARE         shift and go to state 193


state 179

    (25) funcion -> CREATE OR REPLACE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR . BEGIN instrucciones_funct_list END PUNTOYCOMA DOLAR DOLAR LANGUAGE PLPGSQL PUNTOYCOMA
    (26) funcion -> CREATE OR REPLACE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR . DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PUNTOYCOMA DOLAR DOLAR LANGUAGE PLPGSQL PUNTOYCOMA

    BEGIN           shift and go to state 194
    DECLARE         shift and go to state 195


state 180

    (23) funcion -> CREATE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list . END PUNTOYCOMA DOLAR DOLAR LANGUAGE PLPGSQL PUNTOYCOMA
    (8) instrucciones_funct_list -> instrucciones_funct_list . instrucciones_funct_sent
    (10) instrucciones_funct_sent -> . asignacion
    (11) instrucciones_funct_sent -> . declaracion
    (12) instrucciones_funct_sent -> . imprimir
    (13) instrucciones_funct_sent -> . sentencia_if
    (14) instrucciones_funct_sent -> . sentencia_switch
    (15) instrucciones_funct_sent -> . PUNTOYCOMA
    (16) instrucciones_funct_sent -> . llamada_funcion
    (17) instrucciones_funct_sent -> . empty
    (18) instrucciones_funct_sent -> . error
    (49) asignacion -> . ID DOSPUNTOS IGUAL expresion PUNTOYCOMA
    (50) declaracion -> . ID tipo DOSPUNTOS IGUAL expresion PUNTOYCOMA
    (51) declaracion -> . ID tipo PUNTOYCOMA
    (52) declaracion -> . ID tipo DEFAULT expresion PUNTOYCOMA
    (45) imprimir -> . RAISE lista_imprimir PUNTOYCOMA
    (41) sentencia_if -> . IF expresion THEN instrucciones_funct_list else END IF PUNTOYCOMA
    (36) sentencia_switch -> . CASE expresion case_list END CASE PUNTOYCOMA
    (27) llamada_funcion -> . SELECT ID PARA params PARC PUNTOYCOMA
    (28) llamada_funcion -> . CALL ID PARA params PARC PUNTOYCOMA
    (105) empty -> .

  ! shift/reduce conflict for END resolved as shift
  ! shift/reduce conflict for PUNTOYCOMA resolved as shift
  ! shift/reduce conflict for error resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for RAISE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for SELECT resolved as shift
  ! shift/reduce conflict for CALL resolved as shift
    END             shift and go to state 196
    PUNTOYCOMA      shift and go to state 164
    error           shift and go to state 173
    ID              shift and go to state 162
    RAISE           shift and go to state 174
    IF              shift and go to state 175
    CASE            shift and go to state 176
    SELECT          shift and go to state 9
    CALL            shift and go to state 10

  ! END             [ reduce using rule 105 (empty -> .) ]
  ! PUNTOYCOMA      [ reduce using rule 105 (empty -> .) ]
  ! error           [ reduce using rule 105 (empty -> .) ]
  ! ID              [ reduce using rule 105 (empty -> .) ]
  ! RAISE           [ reduce using rule 105 (empty -> .) ]
  ! IF              [ reduce using rule 105 (empty -> .) ]
  ! CASE            [ reduce using rule 105 (empty -> .) ]
  ! SELECT          [ reduce using rule 105 (empty -> .) ]
  ! CALL            [ reduce using rule 105 (empty -> .) ]

    instrucciones_funct_sent       shift and go to state 185
    asignacion                     shift and go to state 166
    declaracion                    shift and go to state 167
    imprimir                       shift and go to state 168
    sentencia_if                   shift and go to state 169
    sentencia_switch               shift and go to state 170
    llamada_funcion                shift and go to state 171
    empty                          shift and go to state 172

state 181

    (24) funcion -> CREATE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list . BEGIN instrucciones_funct_list END PUNTOYCOMA DOLAR DOLAR LANGUAGE PLPGSQL PUNTOYCOMA
    (8) instrucciones_funct_list -> instrucciones_funct_list . instrucciones_funct_sent
    (10) instrucciones_funct_sent -> . asignacion
    (11) instrucciones_funct_sent -> . declaracion
    (12) instrucciones_funct_sent -> . imprimir
    (13) instrucciones_funct_sent -> . sentencia_if
    (14) instrucciones_funct_sent -> . sentencia_switch
    (15) instrucciones_funct_sent -> . PUNTOYCOMA
    (16) instrucciones_funct_sent -> . llamada_funcion
    (17) instrucciones_funct_sent -> . empty
    (18) instrucciones_funct_sent -> . error
    (49) asignacion -> . ID DOSPUNTOS IGUAL expresion PUNTOYCOMA
    (50) declaracion -> . ID tipo DOSPUNTOS IGUAL expresion PUNTOYCOMA
    (51) declaracion -> . ID tipo PUNTOYCOMA
    (52) declaracion -> . ID tipo DEFAULT expresion PUNTOYCOMA
    (45) imprimir -> . RAISE lista_imprimir PUNTOYCOMA
    (41) sentencia_if -> . IF expresion THEN instrucciones_funct_list else END IF PUNTOYCOMA
    (36) sentencia_switch -> . CASE expresion case_list END CASE PUNTOYCOMA
    (27) llamada_funcion -> . SELECT ID PARA params PARC PUNTOYCOMA
    (28) llamada_funcion -> . CALL ID PARA params PARC PUNTOYCOMA
    (105) empty -> .

  ! shift/reduce conflict for BEGIN resolved as shift
  ! shift/reduce conflict for PUNTOYCOMA resolved as shift
  ! shift/reduce conflict for error resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for RAISE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for SELECT resolved as shift
  ! shift/reduce conflict for CALL resolved as shift
    BEGIN           shift and go to state 197
    PUNTOYCOMA      shift and go to state 164
    error           shift and go to state 173
    ID              shift and go to state 162
    RAISE           shift and go to state 174
    IF              shift and go to state 175
    CASE            shift and go to state 176
    SELECT          shift and go to state 9
    CALL            shift and go to state 10

  ! BEGIN           [ reduce using rule 105 (empty -> .) ]
  ! PUNTOYCOMA      [ reduce using rule 105 (empty -> .) ]
  ! error           [ reduce using rule 105 (empty -> .) ]
  ! ID              [ reduce using rule 105 (empty -> .) ]
  ! RAISE           [ reduce using rule 105 (empty -> .) ]
  ! IF              [ reduce using rule 105 (empty -> .) ]
  ! CASE            [ reduce using rule 105 (empty -> .) ]
  ! SELECT          [ reduce using rule 105 (empty -> .) ]
  ! CALL            [ reduce using rule 105 (empty -> .) ]

    instrucciones_funct_sent       shift and go to state 185
    asignacion                     shift and go to state 166
    declaracion                    shift and go to state 167
    imprimir                       shift and go to state 168
    sentencia_if                   shift and go to state 169
    sentencia_switch               shift and go to state 170
    llamada_funcion                shift and go to state 171
    empty                          shift and go to state 172

state 182

    (49) asignacion -> ID DOSPUNTOS . IGUAL expresion PUNTOYCOMA

    IGUAL           shift and go to state 198


state 183

    (50) declaracion -> ID tipo . DOSPUNTOS IGUAL expresion PUNTOYCOMA
    (51) declaracion -> ID tipo . PUNTOYCOMA
    (52) declaracion -> ID tipo . DEFAULT expresion PUNTOYCOMA

    DOSPUNTOS       shift and go to state 199
    PUNTOYCOMA      shift and go to state 200
    DEFAULT         shift and go to state 201


state 184

    (19) funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END . PUNTOYCOMA DOLAR DOLAR LANGUAGE PLPGSQL PUNTOYCOMA

    PUNTOYCOMA      shift and go to state 202


state 185

    (8) instrucciones_funct_list -> instrucciones_funct_list instrucciones_funct_sent .

    END             reduce using rule 8 (instrucciones_funct_list -> instrucciones_funct_list instrucciones_funct_sent .)
    PUNTOYCOMA      reduce using rule 8 (instrucciones_funct_list -> instrucciones_funct_list instrucciones_funct_sent .)
    error           reduce using rule 8 (instrucciones_funct_list -> instrucciones_funct_list instrucciones_funct_sent .)
    ID              reduce using rule 8 (instrucciones_funct_list -> instrucciones_funct_list instrucciones_funct_sent .)
    RAISE           reduce using rule 8 (instrucciones_funct_list -> instrucciones_funct_list instrucciones_funct_sent .)
    IF              reduce using rule 8 (instrucciones_funct_list -> instrucciones_funct_list instrucciones_funct_sent .)
    CASE            reduce using rule 8 (instrucciones_funct_list -> instrucciones_funct_list instrucciones_funct_sent .)
    SELECT          reduce using rule 8 (instrucciones_funct_list -> instrucciones_funct_list instrucciones_funct_sent .)
    CALL            reduce using rule 8 (instrucciones_funct_list -> instrucciones_funct_list instrucciones_funct_sent .)
    BEGIN           reduce using rule 8 (instrucciones_funct_list -> instrucciones_funct_list instrucciones_funct_sent .)
    ELSE            reduce using rule 8 (instrucciones_funct_list -> instrucciones_funct_list instrucciones_funct_sent .)
    ELSEIF          reduce using rule 8 (instrucciones_funct_list -> instrucciones_funct_list instrucciones_funct_sent .)
    WHEN            reduce using rule 8 (instrucciones_funct_list -> instrucciones_funct_list instrucciones_funct_sent .)


state 186

    (45) imprimir -> RAISE lista_imprimir . PUNTOYCOMA
    (46) lista_imprimir -> lista_imprimir . COMA sent_imprimir

    PUNTOYCOMA      shift and go to state 203
    COMA            shift and go to state 204


state 187

    (47) lista_imprimir -> sent_imprimir .

    PUNTOYCOMA      reduce using rule 47 (lista_imprimir -> sent_imprimir .)
    COMA            reduce using rule 47 (lista_imprimir -> sent_imprimir .)


state 188

    (48) sent_imprimir -> expresion .
    (75) log -> expresion . AND expresion
    (76) log -> expresion . ORR expresion

    PUNTOYCOMA      reduce using rule 48 (sent_imprimir -> expresion .)
    COMA            reduce using rule 48 (sent_imprimir -> expresion .)
    AND             shift and go to state 53
    ORR             shift and go to state 54


state 189

    (41) sentencia_if -> IF expresion . THEN instrucciones_funct_list else END IF PUNTOYCOMA
    (75) log -> expresion . AND expresion
    (76) log -> expresion . ORR expresion

    THEN            shift and go to state 205
    AND             shift and go to state 53
    ORR             shift and go to state 54


state 190

    (36) sentencia_switch -> CASE expresion . case_list END CASE PUNTOYCOMA
    (75) log -> expresion . AND expresion
    (76) log -> expresion . ORR expresion
    (37) case_list -> . case_list case
    (38) case_list -> . case
    (39) case -> . WHEN expresion THEN instrucciones_funct_list
    (40) case -> . ELSE instrucciones_funct_list

    AND             shift and go to state 53
    ORR             shift and go to state 54
    WHEN            shift and go to state 208
    ELSE            shift and go to state 209

    case_list                      shift and go to state 206
    case                           shift and go to state 207

state 191

    (20) funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN . instrucciones_funct_list END PUNTOYCOMA DOLAR DOLAR LANGUAGE PLPGSQL PUNTOYCOMA
    (8) instrucciones_funct_list -> . instrucciones_funct_list instrucciones_funct_sent
    (9) instrucciones_funct_list -> . instrucciones_funct_sent
    (10) instrucciones_funct_sent -> . asignacion
    (11) instrucciones_funct_sent -> . declaracion
    (12) instrucciones_funct_sent -> . imprimir
    (13) instrucciones_funct_sent -> . sentencia_if
    (14) instrucciones_funct_sent -> . sentencia_switch
    (15) instrucciones_funct_sent -> . PUNTOYCOMA
    (16) instrucciones_funct_sent -> . llamada_funcion
    (17) instrucciones_funct_sent -> . empty
    (18) instrucciones_funct_sent -> . error
    (49) asignacion -> . ID DOSPUNTOS IGUAL expresion PUNTOYCOMA
    (50) declaracion -> . ID tipo DOSPUNTOS IGUAL expresion PUNTOYCOMA
    (51) declaracion -> . ID tipo PUNTOYCOMA
    (52) declaracion -> . ID tipo DEFAULT expresion PUNTOYCOMA
    (45) imprimir -> . RAISE lista_imprimir PUNTOYCOMA
    (41) sentencia_if -> . IF expresion THEN instrucciones_funct_list else END IF PUNTOYCOMA
    (36) sentencia_switch -> . CASE expresion case_list END CASE PUNTOYCOMA
    (27) llamada_funcion -> . SELECT ID PARA params PARC PUNTOYCOMA
    (28) llamada_funcion -> . CALL ID PARA params PARC PUNTOYCOMA
    (105) empty -> .

  ! shift/reduce conflict for PUNTOYCOMA resolved as shift
  ! shift/reduce conflict for error resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for RAISE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for SELECT resolved as shift
  ! shift/reduce conflict for CALL resolved as shift
    PUNTOYCOMA      shift and go to state 164
    error           shift and go to state 173
    ID              shift and go to state 162
    RAISE           shift and go to state 174
    IF              shift and go to state 175
    CASE            shift and go to state 176
    SELECT          shift and go to state 9
    CALL            shift and go to state 10
    END             reduce using rule 105 (empty -> .)

  ! PUNTOYCOMA      [ reduce using rule 105 (empty -> .) ]
  ! error           [ reduce using rule 105 (empty -> .) ]
  ! ID              [ reduce using rule 105 (empty -> .) ]
  ! RAISE           [ reduce using rule 105 (empty -> .) ]
  ! IF              [ reduce using rule 105 (empty -> .) ]
  ! CASE            [ reduce using rule 105 (empty -> .) ]
  ! SELECT          [ reduce using rule 105 (empty -> .) ]
  ! CALL            [ reduce using rule 105 (empty -> .) ]

    instrucciones_funct_list       shift and go to state 210
    instrucciones_funct_sent       shift and go to state 165
    asignacion                     shift and go to state 166
    declaracion                    shift and go to state 167
    imprimir                       shift and go to state 168
    sentencia_if                   shift and go to state 169
    sentencia_switch               shift and go to state 170
    llamada_funcion                shift and go to state 171
    empty                          shift and go to state 172

state 192

    (21) funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN . instrucciones_funct_list END PUNTOYCOMA DOLAR DOLAR LANGUAGE PLPGSQL PUNTOYCOMA
    (8) instrucciones_funct_list -> . instrucciones_funct_list instrucciones_funct_sent
    (9) instrucciones_funct_list -> . instrucciones_funct_sent
    (10) instrucciones_funct_sent -> . asignacion
    (11) instrucciones_funct_sent -> . declaracion
    (12) instrucciones_funct_sent -> . imprimir
    (13) instrucciones_funct_sent -> . sentencia_if
    (14) instrucciones_funct_sent -> . sentencia_switch
    (15) instrucciones_funct_sent -> . PUNTOYCOMA
    (16) instrucciones_funct_sent -> . llamada_funcion
    (17) instrucciones_funct_sent -> . empty
    (18) instrucciones_funct_sent -> . error
    (49) asignacion -> . ID DOSPUNTOS IGUAL expresion PUNTOYCOMA
    (50) declaracion -> . ID tipo DOSPUNTOS IGUAL expresion PUNTOYCOMA
    (51) declaracion -> . ID tipo PUNTOYCOMA
    (52) declaracion -> . ID tipo DEFAULT expresion PUNTOYCOMA
    (45) imprimir -> . RAISE lista_imprimir PUNTOYCOMA
    (41) sentencia_if -> . IF expresion THEN instrucciones_funct_list else END IF PUNTOYCOMA
    (36) sentencia_switch -> . CASE expresion case_list END CASE PUNTOYCOMA
    (27) llamada_funcion -> . SELECT ID PARA params PARC PUNTOYCOMA
    (28) llamada_funcion -> . CALL ID PARA params PARC PUNTOYCOMA
    (105) empty -> .

  ! shift/reduce conflict for PUNTOYCOMA resolved as shift
  ! shift/reduce conflict for error resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for RAISE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for SELECT resolved as shift
  ! shift/reduce conflict for CALL resolved as shift
    PUNTOYCOMA      shift and go to state 164
    error           shift and go to state 173
    ID              shift and go to state 162
    RAISE           shift and go to state 174
    IF              shift and go to state 175
    CASE            shift and go to state 176
    SELECT          shift and go to state 9
    CALL            shift and go to state 10
    END             reduce using rule 105 (empty -> .)

  ! PUNTOYCOMA      [ reduce using rule 105 (empty -> .) ]
  ! error           [ reduce using rule 105 (empty -> .) ]
  ! ID              [ reduce using rule 105 (empty -> .) ]
  ! RAISE           [ reduce using rule 105 (empty -> .) ]
  ! IF              [ reduce using rule 105 (empty -> .) ]
  ! CASE            [ reduce using rule 105 (empty -> .) ]
  ! SELECT          [ reduce using rule 105 (empty -> .) ]
  ! CALL            [ reduce using rule 105 (empty -> .) ]

    instrucciones_funct_list       shift and go to state 211
    instrucciones_funct_sent       shift and go to state 165
    asignacion                     shift and go to state 166
    declaracion                    shift and go to state 167
    imprimir                       shift and go to state 168
    sentencia_if                   shift and go to state 169
    sentencia_switch               shift and go to state 170
    llamada_funcion                shift and go to state 171
    empty                          shift and go to state 172

state 193

    (22) funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE . instrucciones_funct_list BEGIN instrucciones_funct_list END PUNTOYCOMA DOLAR DOLAR LANGUAGE PLPGSQL PUNTOYCOMA
    (8) instrucciones_funct_list -> . instrucciones_funct_list instrucciones_funct_sent
    (9) instrucciones_funct_list -> . instrucciones_funct_sent
    (10) instrucciones_funct_sent -> . asignacion
    (11) instrucciones_funct_sent -> . declaracion
    (12) instrucciones_funct_sent -> . imprimir
    (13) instrucciones_funct_sent -> . sentencia_if
    (14) instrucciones_funct_sent -> . sentencia_switch
    (15) instrucciones_funct_sent -> . PUNTOYCOMA
    (16) instrucciones_funct_sent -> . llamada_funcion
    (17) instrucciones_funct_sent -> . empty
    (18) instrucciones_funct_sent -> . error
    (49) asignacion -> . ID DOSPUNTOS IGUAL expresion PUNTOYCOMA
    (50) declaracion -> . ID tipo DOSPUNTOS IGUAL expresion PUNTOYCOMA
    (51) declaracion -> . ID tipo PUNTOYCOMA
    (52) declaracion -> . ID tipo DEFAULT expresion PUNTOYCOMA
    (45) imprimir -> . RAISE lista_imprimir PUNTOYCOMA
    (41) sentencia_if -> . IF expresion THEN instrucciones_funct_list else END IF PUNTOYCOMA
    (36) sentencia_switch -> . CASE expresion case_list END CASE PUNTOYCOMA
    (27) llamada_funcion -> . SELECT ID PARA params PARC PUNTOYCOMA
    (28) llamada_funcion -> . CALL ID PARA params PARC PUNTOYCOMA
    (105) empty -> .

  ! shift/reduce conflict for PUNTOYCOMA resolved as shift
  ! shift/reduce conflict for error resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for RAISE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for SELECT resolved as shift
  ! shift/reduce conflict for CALL resolved as shift
    PUNTOYCOMA      shift and go to state 164
    error           shift and go to state 173
    ID              shift and go to state 162
    RAISE           shift and go to state 174
    IF              shift and go to state 175
    CASE            shift and go to state 176
    SELECT          shift and go to state 9
    CALL            shift and go to state 10
    BEGIN           reduce using rule 105 (empty -> .)

  ! PUNTOYCOMA      [ reduce using rule 105 (empty -> .) ]
  ! error           [ reduce using rule 105 (empty -> .) ]
  ! ID              [ reduce using rule 105 (empty -> .) ]
  ! RAISE           [ reduce using rule 105 (empty -> .) ]
  ! IF              [ reduce using rule 105 (empty -> .) ]
  ! CASE            [ reduce using rule 105 (empty -> .) ]
  ! SELECT          [ reduce using rule 105 (empty -> .) ]
  ! CALL            [ reduce using rule 105 (empty -> .) ]

    instrucciones_funct_list       shift and go to state 212
    instrucciones_funct_sent       shift and go to state 165
    asignacion                     shift and go to state 166
    declaracion                    shift and go to state 167
    imprimir                       shift and go to state 168
    sentencia_if                   shift and go to state 169
    sentencia_switch               shift and go to state 170
    llamada_funcion                shift and go to state 171
    empty                          shift and go to state 172

state 194

    (25) funcion -> CREATE OR REPLACE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN . instrucciones_funct_list END PUNTOYCOMA DOLAR DOLAR LANGUAGE PLPGSQL PUNTOYCOMA
    (8) instrucciones_funct_list -> . instrucciones_funct_list instrucciones_funct_sent
    (9) instrucciones_funct_list -> . instrucciones_funct_sent
    (10) instrucciones_funct_sent -> . asignacion
    (11) instrucciones_funct_sent -> . declaracion
    (12) instrucciones_funct_sent -> . imprimir
    (13) instrucciones_funct_sent -> . sentencia_if
    (14) instrucciones_funct_sent -> . sentencia_switch
    (15) instrucciones_funct_sent -> . PUNTOYCOMA
    (16) instrucciones_funct_sent -> . llamada_funcion
    (17) instrucciones_funct_sent -> . empty
    (18) instrucciones_funct_sent -> . error
    (49) asignacion -> . ID DOSPUNTOS IGUAL expresion PUNTOYCOMA
    (50) declaracion -> . ID tipo DOSPUNTOS IGUAL expresion PUNTOYCOMA
    (51) declaracion -> . ID tipo PUNTOYCOMA
    (52) declaracion -> . ID tipo DEFAULT expresion PUNTOYCOMA
    (45) imprimir -> . RAISE lista_imprimir PUNTOYCOMA
    (41) sentencia_if -> . IF expresion THEN instrucciones_funct_list else END IF PUNTOYCOMA
    (36) sentencia_switch -> . CASE expresion case_list END CASE PUNTOYCOMA
    (27) llamada_funcion -> . SELECT ID PARA params PARC PUNTOYCOMA
    (28) llamada_funcion -> . CALL ID PARA params PARC PUNTOYCOMA
    (105) empty -> .

  ! shift/reduce conflict for PUNTOYCOMA resolved as shift
  ! shift/reduce conflict for error resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for RAISE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for SELECT resolved as shift
  ! shift/reduce conflict for CALL resolved as shift
    PUNTOYCOMA      shift and go to state 164
    error           shift and go to state 173
    ID              shift and go to state 162
    RAISE           shift and go to state 174
    IF              shift and go to state 175
    CASE            shift and go to state 176
    SELECT          shift and go to state 9
    CALL            shift and go to state 10
    END             reduce using rule 105 (empty -> .)

  ! PUNTOYCOMA      [ reduce using rule 105 (empty -> .) ]
  ! error           [ reduce using rule 105 (empty -> .) ]
  ! ID              [ reduce using rule 105 (empty -> .) ]
  ! RAISE           [ reduce using rule 105 (empty -> .) ]
  ! IF              [ reduce using rule 105 (empty -> .) ]
  ! CASE            [ reduce using rule 105 (empty -> .) ]
  ! SELECT          [ reduce using rule 105 (empty -> .) ]
  ! CALL            [ reduce using rule 105 (empty -> .) ]

    instrucciones_funct_list       shift and go to state 213
    instrucciones_funct_sent       shift and go to state 165
    asignacion                     shift and go to state 166
    declaracion                    shift and go to state 167
    imprimir                       shift and go to state 168
    sentencia_if                   shift and go to state 169
    sentencia_switch               shift and go to state 170
    llamada_funcion                shift and go to state 171
    empty                          shift and go to state 172

state 195

    (26) funcion -> CREATE OR REPLACE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE . instrucciones_funct_list BEGIN instrucciones_funct_list END PUNTOYCOMA DOLAR DOLAR LANGUAGE PLPGSQL PUNTOYCOMA
    (8) instrucciones_funct_list -> . instrucciones_funct_list instrucciones_funct_sent
    (9) instrucciones_funct_list -> . instrucciones_funct_sent
    (10) instrucciones_funct_sent -> . asignacion
    (11) instrucciones_funct_sent -> . declaracion
    (12) instrucciones_funct_sent -> . imprimir
    (13) instrucciones_funct_sent -> . sentencia_if
    (14) instrucciones_funct_sent -> . sentencia_switch
    (15) instrucciones_funct_sent -> . PUNTOYCOMA
    (16) instrucciones_funct_sent -> . llamada_funcion
    (17) instrucciones_funct_sent -> . empty
    (18) instrucciones_funct_sent -> . error
    (49) asignacion -> . ID DOSPUNTOS IGUAL expresion PUNTOYCOMA
    (50) declaracion -> . ID tipo DOSPUNTOS IGUAL expresion PUNTOYCOMA
    (51) declaracion -> . ID tipo PUNTOYCOMA
    (52) declaracion -> . ID tipo DEFAULT expresion PUNTOYCOMA
    (45) imprimir -> . RAISE lista_imprimir PUNTOYCOMA
    (41) sentencia_if -> . IF expresion THEN instrucciones_funct_list else END IF PUNTOYCOMA
    (36) sentencia_switch -> . CASE expresion case_list END CASE PUNTOYCOMA
    (27) llamada_funcion -> . SELECT ID PARA params PARC PUNTOYCOMA
    (28) llamada_funcion -> . CALL ID PARA params PARC PUNTOYCOMA
    (105) empty -> .

  ! shift/reduce conflict for PUNTOYCOMA resolved as shift
  ! shift/reduce conflict for error resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for RAISE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for SELECT resolved as shift
  ! shift/reduce conflict for CALL resolved as shift
    PUNTOYCOMA      shift and go to state 164
    error           shift and go to state 173
    ID              shift and go to state 162
    RAISE           shift and go to state 174
    IF              shift and go to state 175
    CASE            shift and go to state 176
    SELECT          shift and go to state 9
    CALL            shift and go to state 10
    BEGIN           reduce using rule 105 (empty -> .)

  ! PUNTOYCOMA      [ reduce using rule 105 (empty -> .) ]
  ! error           [ reduce using rule 105 (empty -> .) ]
  ! ID              [ reduce using rule 105 (empty -> .) ]
  ! RAISE           [ reduce using rule 105 (empty -> .) ]
  ! IF              [ reduce using rule 105 (empty -> .) ]
  ! CASE            [ reduce using rule 105 (empty -> .) ]
  ! SELECT          [ reduce using rule 105 (empty -> .) ]
  ! CALL            [ reduce using rule 105 (empty -> .) ]

    instrucciones_funct_list       shift and go to state 214
    instrucciones_funct_sent       shift and go to state 165
    asignacion                     shift and go to state 166
    declaracion                    shift and go to state 167
    imprimir                       shift and go to state 168
    sentencia_if                   shift and go to state 169
    sentencia_switch               shift and go to state 170
    llamada_funcion                shift and go to state 171
    empty                          shift and go to state 172

state 196

    (23) funcion -> CREATE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END . PUNTOYCOMA DOLAR DOLAR LANGUAGE PLPGSQL PUNTOYCOMA

    PUNTOYCOMA      shift and go to state 215


state 197

    (24) funcion -> CREATE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN . instrucciones_funct_list END PUNTOYCOMA DOLAR DOLAR LANGUAGE PLPGSQL PUNTOYCOMA
    (8) instrucciones_funct_list -> . instrucciones_funct_list instrucciones_funct_sent
    (9) instrucciones_funct_list -> . instrucciones_funct_sent
    (10) instrucciones_funct_sent -> . asignacion
    (11) instrucciones_funct_sent -> . declaracion
    (12) instrucciones_funct_sent -> . imprimir
    (13) instrucciones_funct_sent -> . sentencia_if
    (14) instrucciones_funct_sent -> . sentencia_switch
    (15) instrucciones_funct_sent -> . PUNTOYCOMA
    (16) instrucciones_funct_sent -> . llamada_funcion
    (17) instrucciones_funct_sent -> . empty
    (18) instrucciones_funct_sent -> . error
    (49) asignacion -> . ID DOSPUNTOS IGUAL expresion PUNTOYCOMA
    (50) declaracion -> . ID tipo DOSPUNTOS IGUAL expresion PUNTOYCOMA
    (51) declaracion -> . ID tipo PUNTOYCOMA
    (52) declaracion -> . ID tipo DEFAULT expresion PUNTOYCOMA
    (45) imprimir -> . RAISE lista_imprimir PUNTOYCOMA
    (41) sentencia_if -> . IF expresion THEN instrucciones_funct_list else END IF PUNTOYCOMA
    (36) sentencia_switch -> . CASE expresion case_list END CASE PUNTOYCOMA
    (27) llamada_funcion -> . SELECT ID PARA params PARC PUNTOYCOMA
    (28) llamada_funcion -> . CALL ID PARA params PARC PUNTOYCOMA
    (105) empty -> .

  ! shift/reduce conflict for PUNTOYCOMA resolved as shift
  ! shift/reduce conflict for error resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for RAISE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for SELECT resolved as shift
  ! shift/reduce conflict for CALL resolved as shift
    PUNTOYCOMA      shift and go to state 164
    error           shift and go to state 173
    ID              shift and go to state 162
    RAISE           shift and go to state 174
    IF              shift and go to state 175
    CASE            shift and go to state 176
    SELECT          shift and go to state 9
    CALL            shift and go to state 10
    END             reduce using rule 105 (empty -> .)

  ! PUNTOYCOMA      [ reduce using rule 105 (empty -> .) ]
  ! error           [ reduce using rule 105 (empty -> .) ]
  ! ID              [ reduce using rule 105 (empty -> .) ]
  ! RAISE           [ reduce using rule 105 (empty -> .) ]
  ! IF              [ reduce using rule 105 (empty -> .) ]
  ! CASE            [ reduce using rule 105 (empty -> .) ]
  ! SELECT          [ reduce using rule 105 (empty -> .) ]
  ! CALL            [ reduce using rule 105 (empty -> .) ]

    instrucciones_funct_list       shift and go to state 216
    instrucciones_funct_sent       shift and go to state 165
    asignacion                     shift and go to state 166
    declaracion                    shift and go to state 167
    imprimir                       shift and go to state 168
    sentencia_if                   shift and go to state 169
    sentencia_switch               shift and go to state 170
    llamada_funcion                shift and go to state 171
    empty                          shift and go to state 172

state 198

    (49) asignacion -> ID DOSPUNTOS IGUAL . expresion PUNTOYCOMA
    (74) expresion -> . log
    (75) log -> . expresion AND expresion
    (76) log -> . expresion ORR expresion
    (77) log -> . rel
    (78) rel -> . arit MAYOR arit
    (79) rel -> . arit MENOR arit
    (80) rel -> . arit MAYORIGUAL arit
    (81) rel -> . arit MENORIGUAL arit
    (82) rel -> . arit IGUALIGUAL arit
    (83) rel -> . arit NOTIGUAL arit
    (84) rel -> . arit
    (85) arit -> . arit POR arit
    (86) arit -> . arit DIV arit
    (87) arit -> . arit MAS arit
    (88) arit -> . arit MENOS arit
    (89) arit -> . arit MOD arit
    (90) arit -> . arit ANDB arit
    (91) arit -> . arit SHIFTI arit
    (92) arit -> . arit SHIFTD arit
    (93) arit -> . arit XORB arit
    (94) arit -> . arit ORB arit
    (95) arit -> . PARA expresion PARC
    (96) arit -> . ID
    (97) arit -> . CADENA
    (98) arit -> . ENTERO
    (99) arit -> . FLOTANTE
    (100) arit -> . MENOS expresion
    (101) arit -> . NOTB expresion
    (102) arit -> . NOT expresion
    (103) arit -> . TRUE
    (104) arit -> . FALSE

    PARA            shift and go to state 27
    ID              shift and go to state 26
    CADENA          shift and go to state 35
    ENTERO          shift and go to state 36
    FLOTANTE        shift and go to state 37
    MENOS           shift and go to state 34
    NOTB            shift and go to state 38
    NOT             shift and go to state 39
    TRUE            shift and go to state 40
    FALSE           shift and go to state 41

    expresion                      shift and go to state 217
    log                            shift and go to state 31
    rel                            shift and go to state 32
    arit                           shift and go to state 33

state 199

    (50) declaracion -> ID tipo DOSPUNTOS . IGUAL expresion PUNTOYCOMA

    IGUAL           shift and go to state 218


state 200

    (51) declaracion -> ID tipo PUNTOYCOMA .

    END             reduce using rule 51 (declaracion -> ID tipo PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 51 (declaracion -> ID tipo PUNTOYCOMA .)
    error           reduce using rule 51 (declaracion -> ID tipo PUNTOYCOMA .)
    ID              reduce using rule 51 (declaracion -> ID tipo PUNTOYCOMA .)
    RAISE           reduce using rule 51 (declaracion -> ID tipo PUNTOYCOMA .)
    IF              reduce using rule 51 (declaracion -> ID tipo PUNTOYCOMA .)
    CASE            reduce using rule 51 (declaracion -> ID tipo PUNTOYCOMA .)
    SELECT          reduce using rule 51 (declaracion -> ID tipo PUNTOYCOMA .)
    CALL            reduce using rule 51 (declaracion -> ID tipo PUNTOYCOMA .)
    BEGIN           reduce using rule 51 (declaracion -> ID tipo PUNTOYCOMA .)
    ELSE            reduce using rule 51 (declaracion -> ID tipo PUNTOYCOMA .)
    ELSEIF          reduce using rule 51 (declaracion -> ID tipo PUNTOYCOMA .)
    WHEN            reduce using rule 51 (declaracion -> ID tipo PUNTOYCOMA .)


state 201

    (52) declaracion -> ID tipo DEFAULT . expresion PUNTOYCOMA
    (74) expresion -> . log
    (75) log -> . expresion AND expresion
    (76) log -> . expresion ORR expresion
    (77) log -> . rel
    (78) rel -> . arit MAYOR arit
    (79) rel -> . arit MENOR arit
    (80) rel -> . arit MAYORIGUAL arit
    (81) rel -> . arit MENORIGUAL arit
    (82) rel -> . arit IGUALIGUAL arit
    (83) rel -> . arit NOTIGUAL arit
    (84) rel -> . arit
    (85) arit -> . arit POR arit
    (86) arit -> . arit DIV arit
    (87) arit -> . arit MAS arit
    (88) arit -> . arit MENOS arit
    (89) arit -> . arit MOD arit
    (90) arit -> . arit ANDB arit
    (91) arit -> . arit SHIFTI arit
    (92) arit -> . arit SHIFTD arit
    (93) arit -> . arit XORB arit
    (94) arit -> . arit ORB arit
    (95) arit -> . PARA expresion PARC
    (96) arit -> . ID
    (97) arit -> . CADENA
    (98) arit -> . ENTERO
    (99) arit -> . FLOTANTE
    (100) arit -> . MENOS expresion
    (101) arit -> . NOTB expresion
    (102) arit -> . NOT expresion
    (103) arit -> . TRUE
    (104) arit -> . FALSE

    PARA            shift and go to state 27
    ID              shift and go to state 26
    CADENA          shift and go to state 35
    ENTERO          shift and go to state 36
    FLOTANTE        shift and go to state 37
    MENOS           shift and go to state 34
    NOTB            shift and go to state 38
    NOT             shift and go to state 39
    TRUE            shift and go to state 40
    FALSE           shift and go to state 41

    expresion                      shift and go to state 219
    log                            shift and go to state 31
    rel                            shift and go to state 32
    arit                           shift and go to state 33

state 202

    (19) funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PUNTOYCOMA . DOLAR DOLAR LANGUAGE PLPGSQL PUNTOYCOMA

    DOLAR           shift and go to state 220


state 203

    (45) imprimir -> RAISE lista_imprimir PUNTOYCOMA .

    END             reduce using rule 45 (imprimir -> RAISE lista_imprimir PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 45 (imprimir -> RAISE lista_imprimir PUNTOYCOMA .)
    error           reduce using rule 45 (imprimir -> RAISE lista_imprimir PUNTOYCOMA .)
    ID              reduce using rule 45 (imprimir -> RAISE lista_imprimir PUNTOYCOMA .)
    RAISE           reduce using rule 45 (imprimir -> RAISE lista_imprimir PUNTOYCOMA .)
    IF              reduce using rule 45 (imprimir -> RAISE lista_imprimir PUNTOYCOMA .)
    CASE            reduce using rule 45 (imprimir -> RAISE lista_imprimir PUNTOYCOMA .)
    SELECT          reduce using rule 45 (imprimir -> RAISE lista_imprimir PUNTOYCOMA .)
    CALL            reduce using rule 45 (imprimir -> RAISE lista_imprimir PUNTOYCOMA .)
    BEGIN           reduce using rule 45 (imprimir -> RAISE lista_imprimir PUNTOYCOMA .)
    ELSE            reduce using rule 45 (imprimir -> RAISE lista_imprimir PUNTOYCOMA .)
    ELSEIF          reduce using rule 45 (imprimir -> RAISE lista_imprimir PUNTOYCOMA .)
    WHEN            reduce using rule 45 (imprimir -> RAISE lista_imprimir PUNTOYCOMA .)


state 204

    (46) lista_imprimir -> lista_imprimir COMA . sent_imprimir
    (48) sent_imprimir -> . expresion
    (74) expresion -> . log
    (75) log -> . expresion AND expresion
    (76) log -> . expresion ORR expresion
    (77) log -> . rel
    (78) rel -> . arit MAYOR arit
    (79) rel -> . arit MENOR arit
    (80) rel -> . arit MAYORIGUAL arit
    (81) rel -> . arit MENORIGUAL arit
    (82) rel -> . arit IGUALIGUAL arit
    (83) rel -> . arit NOTIGUAL arit
    (84) rel -> . arit
    (85) arit -> . arit POR arit
    (86) arit -> . arit DIV arit
    (87) arit -> . arit MAS arit
    (88) arit -> . arit MENOS arit
    (89) arit -> . arit MOD arit
    (90) arit -> . arit ANDB arit
    (91) arit -> . arit SHIFTI arit
    (92) arit -> . arit SHIFTD arit
    (93) arit -> . arit XORB arit
    (94) arit -> . arit ORB arit
    (95) arit -> . PARA expresion PARC
    (96) arit -> . ID
    (97) arit -> . CADENA
    (98) arit -> . ENTERO
    (99) arit -> . FLOTANTE
    (100) arit -> . MENOS expresion
    (101) arit -> . NOTB expresion
    (102) arit -> . NOT expresion
    (103) arit -> . TRUE
    (104) arit -> . FALSE

    PARA            shift and go to state 27
    ID              shift and go to state 26
    CADENA          shift and go to state 35
    ENTERO          shift and go to state 36
    FLOTANTE        shift and go to state 37
    MENOS           shift and go to state 34
    NOTB            shift and go to state 38
    NOT             shift and go to state 39
    TRUE            shift and go to state 40
    FALSE           shift and go to state 41

    sent_imprimir                  shift and go to state 221
    expresion                      shift and go to state 188
    log                            shift and go to state 31
    rel                            shift and go to state 32
    arit                           shift and go to state 33

state 205

    (41) sentencia_if -> IF expresion THEN . instrucciones_funct_list else END IF PUNTOYCOMA
    (8) instrucciones_funct_list -> . instrucciones_funct_list instrucciones_funct_sent
    (9) instrucciones_funct_list -> . instrucciones_funct_sent
    (10) instrucciones_funct_sent -> . asignacion
    (11) instrucciones_funct_sent -> . declaracion
    (12) instrucciones_funct_sent -> . imprimir
    (13) instrucciones_funct_sent -> . sentencia_if
    (14) instrucciones_funct_sent -> . sentencia_switch
    (15) instrucciones_funct_sent -> . PUNTOYCOMA
    (16) instrucciones_funct_sent -> . llamada_funcion
    (17) instrucciones_funct_sent -> . empty
    (18) instrucciones_funct_sent -> . error
    (49) asignacion -> . ID DOSPUNTOS IGUAL expresion PUNTOYCOMA
    (50) declaracion -> . ID tipo DOSPUNTOS IGUAL expresion PUNTOYCOMA
    (51) declaracion -> . ID tipo PUNTOYCOMA
    (52) declaracion -> . ID tipo DEFAULT expresion PUNTOYCOMA
    (45) imprimir -> . RAISE lista_imprimir PUNTOYCOMA
    (41) sentencia_if -> . IF expresion THEN instrucciones_funct_list else END IF PUNTOYCOMA
    (36) sentencia_switch -> . CASE expresion case_list END CASE PUNTOYCOMA
    (27) llamada_funcion -> . SELECT ID PARA params PARC PUNTOYCOMA
    (28) llamada_funcion -> . CALL ID PARA params PARC PUNTOYCOMA
    (105) empty -> .

  ! shift/reduce conflict for PUNTOYCOMA resolved as shift
  ! shift/reduce conflict for error resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for RAISE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for SELECT resolved as shift
  ! shift/reduce conflict for CALL resolved as shift
    PUNTOYCOMA      shift and go to state 164
    error           shift and go to state 173
    ID              shift and go to state 162
    RAISE           shift and go to state 174
    IF              shift and go to state 175
    CASE            shift and go to state 176
    SELECT          shift and go to state 9
    CALL            shift and go to state 10
    ELSE            reduce using rule 105 (empty -> .)
    ELSEIF          reduce using rule 105 (empty -> .)
    END             reduce using rule 105 (empty -> .)

  ! PUNTOYCOMA      [ reduce using rule 105 (empty -> .) ]
  ! error           [ reduce using rule 105 (empty -> .) ]
  ! ID              [ reduce using rule 105 (empty -> .) ]
  ! RAISE           [ reduce using rule 105 (empty -> .) ]
  ! IF              [ reduce using rule 105 (empty -> .) ]
  ! CASE            [ reduce using rule 105 (empty -> .) ]
  ! SELECT          [ reduce using rule 105 (empty -> .) ]
  ! CALL            [ reduce using rule 105 (empty -> .) ]

    instrucciones_funct_list       shift and go to state 222
    instrucciones_funct_sent       shift and go to state 165
    asignacion                     shift and go to state 166
    declaracion                    shift and go to state 167
    imprimir                       shift and go to state 168
    sentencia_if                   shift and go to state 169
    sentencia_switch               shift and go to state 170
    llamada_funcion                shift and go to state 171
    empty                          shift and go to state 172

state 206

    (36) sentencia_switch -> CASE expresion case_list . END CASE PUNTOYCOMA
    (37) case_list -> case_list . case
    (39) case -> . WHEN expresion THEN instrucciones_funct_list
    (40) case -> . ELSE instrucciones_funct_list

    END             shift and go to state 223
    WHEN            shift and go to state 208
    ELSE            shift and go to state 209

    case                           shift and go to state 224

state 207

    (38) case_list -> case .

    END             reduce using rule 38 (case_list -> case .)
    WHEN            reduce using rule 38 (case_list -> case .)
    ELSE            reduce using rule 38 (case_list -> case .)


state 208

    (39) case -> WHEN . expresion THEN instrucciones_funct_list
    (74) expresion -> . log
    (75) log -> . expresion AND expresion
    (76) log -> . expresion ORR expresion
    (77) log -> . rel
    (78) rel -> . arit MAYOR arit
    (79) rel -> . arit MENOR arit
    (80) rel -> . arit MAYORIGUAL arit
    (81) rel -> . arit MENORIGUAL arit
    (82) rel -> . arit IGUALIGUAL arit
    (83) rel -> . arit NOTIGUAL arit
    (84) rel -> . arit
    (85) arit -> . arit POR arit
    (86) arit -> . arit DIV arit
    (87) arit -> . arit MAS arit
    (88) arit -> . arit MENOS arit
    (89) arit -> . arit MOD arit
    (90) arit -> . arit ANDB arit
    (91) arit -> . arit SHIFTI arit
    (92) arit -> . arit SHIFTD arit
    (93) arit -> . arit XORB arit
    (94) arit -> . arit ORB arit
    (95) arit -> . PARA expresion PARC
    (96) arit -> . ID
    (97) arit -> . CADENA
    (98) arit -> . ENTERO
    (99) arit -> . FLOTANTE
    (100) arit -> . MENOS expresion
    (101) arit -> . NOTB expresion
    (102) arit -> . NOT expresion
    (103) arit -> . TRUE
    (104) arit -> . FALSE

    PARA            shift and go to state 27
    ID              shift and go to state 26
    CADENA          shift and go to state 35
    ENTERO          shift and go to state 36
    FLOTANTE        shift and go to state 37
    MENOS           shift and go to state 34
    NOTB            shift and go to state 38
    NOT             shift and go to state 39
    TRUE            shift and go to state 40
    FALSE           shift and go to state 41

    expresion                      shift and go to state 225
    log                            shift and go to state 31
    rel                            shift and go to state 32
    arit                           shift and go to state 33

state 209

    (40) case -> ELSE . instrucciones_funct_list
    (8) instrucciones_funct_list -> . instrucciones_funct_list instrucciones_funct_sent
    (9) instrucciones_funct_list -> . instrucciones_funct_sent
    (10) instrucciones_funct_sent -> . asignacion
    (11) instrucciones_funct_sent -> . declaracion
    (12) instrucciones_funct_sent -> . imprimir
    (13) instrucciones_funct_sent -> . sentencia_if
    (14) instrucciones_funct_sent -> . sentencia_switch
    (15) instrucciones_funct_sent -> . PUNTOYCOMA
    (16) instrucciones_funct_sent -> . llamada_funcion
    (17) instrucciones_funct_sent -> . empty
    (18) instrucciones_funct_sent -> . error
    (49) asignacion -> . ID DOSPUNTOS IGUAL expresion PUNTOYCOMA
    (50) declaracion -> . ID tipo DOSPUNTOS IGUAL expresion PUNTOYCOMA
    (51) declaracion -> . ID tipo PUNTOYCOMA
    (52) declaracion -> . ID tipo DEFAULT expresion PUNTOYCOMA
    (45) imprimir -> . RAISE lista_imprimir PUNTOYCOMA
    (41) sentencia_if -> . IF expresion THEN instrucciones_funct_list else END IF PUNTOYCOMA
    (36) sentencia_switch -> . CASE expresion case_list END CASE PUNTOYCOMA
    (27) llamada_funcion -> . SELECT ID PARA params PARC PUNTOYCOMA
    (28) llamada_funcion -> . CALL ID PARA params PARC PUNTOYCOMA
    (105) empty -> .

  ! shift/reduce conflict for PUNTOYCOMA resolved as shift
  ! shift/reduce conflict for error resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for RAISE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for SELECT resolved as shift
  ! shift/reduce conflict for CALL resolved as shift
    PUNTOYCOMA      shift and go to state 164
    error           shift and go to state 173
    ID              shift and go to state 162
    RAISE           shift and go to state 174
    IF              shift and go to state 175
    CASE            shift and go to state 176
    SELECT          shift and go to state 9
    CALL            shift and go to state 10
    END             reduce using rule 105 (empty -> .)
    WHEN            reduce using rule 105 (empty -> .)
    ELSE            reduce using rule 105 (empty -> .)

  ! PUNTOYCOMA      [ reduce using rule 105 (empty -> .) ]
  ! error           [ reduce using rule 105 (empty -> .) ]
  ! ID              [ reduce using rule 105 (empty -> .) ]
  ! RAISE           [ reduce using rule 105 (empty -> .) ]
  ! IF              [ reduce using rule 105 (empty -> .) ]
  ! CASE            [ reduce using rule 105 (empty -> .) ]
  ! SELECT          [ reduce using rule 105 (empty -> .) ]
  ! CALL            [ reduce using rule 105 (empty -> .) ]

    instrucciones_funct_list       shift and go to state 226
    instrucciones_funct_sent       shift and go to state 165
    asignacion                     shift and go to state 166
    declaracion                    shift and go to state 167
    imprimir                       shift and go to state 168
    sentencia_if                   shift and go to state 169
    sentencia_switch               shift and go to state 170
    llamada_funcion                shift and go to state 171
    empty                          shift and go to state 172

state 210

    (20) funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list . END PUNTOYCOMA DOLAR DOLAR LANGUAGE PLPGSQL PUNTOYCOMA
    (8) instrucciones_funct_list -> instrucciones_funct_list . instrucciones_funct_sent
    (10) instrucciones_funct_sent -> . asignacion
    (11) instrucciones_funct_sent -> . declaracion
    (12) instrucciones_funct_sent -> . imprimir
    (13) instrucciones_funct_sent -> . sentencia_if
    (14) instrucciones_funct_sent -> . sentencia_switch
    (15) instrucciones_funct_sent -> . PUNTOYCOMA
    (16) instrucciones_funct_sent -> . llamada_funcion
    (17) instrucciones_funct_sent -> . empty
    (18) instrucciones_funct_sent -> . error
    (49) asignacion -> . ID DOSPUNTOS IGUAL expresion PUNTOYCOMA
    (50) declaracion -> . ID tipo DOSPUNTOS IGUAL expresion PUNTOYCOMA
    (51) declaracion -> . ID tipo PUNTOYCOMA
    (52) declaracion -> . ID tipo DEFAULT expresion PUNTOYCOMA
    (45) imprimir -> . RAISE lista_imprimir PUNTOYCOMA
    (41) sentencia_if -> . IF expresion THEN instrucciones_funct_list else END IF PUNTOYCOMA
    (36) sentencia_switch -> . CASE expresion case_list END CASE PUNTOYCOMA
    (27) llamada_funcion -> . SELECT ID PARA params PARC PUNTOYCOMA
    (28) llamada_funcion -> . CALL ID PARA params PARC PUNTOYCOMA
    (105) empty -> .

  ! shift/reduce conflict for END resolved as shift
  ! shift/reduce conflict for PUNTOYCOMA resolved as shift
  ! shift/reduce conflict for error resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for RAISE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for SELECT resolved as shift
  ! shift/reduce conflict for CALL resolved as shift
    END             shift and go to state 227
    PUNTOYCOMA      shift and go to state 164
    error           shift and go to state 173
    ID              shift and go to state 162
    RAISE           shift and go to state 174
    IF              shift and go to state 175
    CASE            shift and go to state 176
    SELECT          shift and go to state 9
    CALL            shift and go to state 10

  ! END             [ reduce using rule 105 (empty -> .) ]
  ! PUNTOYCOMA      [ reduce using rule 105 (empty -> .) ]
  ! error           [ reduce using rule 105 (empty -> .) ]
  ! ID              [ reduce using rule 105 (empty -> .) ]
  ! RAISE           [ reduce using rule 105 (empty -> .) ]
  ! IF              [ reduce using rule 105 (empty -> .) ]
  ! CASE            [ reduce using rule 105 (empty -> .) ]
  ! SELECT          [ reduce using rule 105 (empty -> .) ]
  ! CALL            [ reduce using rule 105 (empty -> .) ]

    instrucciones_funct_sent       shift and go to state 185
    asignacion                     shift and go to state 166
    declaracion                    shift and go to state 167
    imprimir                       shift and go to state 168
    sentencia_if                   shift and go to state 169
    sentencia_switch               shift and go to state 170
    llamada_funcion                shift and go to state 171
    empty                          shift and go to state 172

state 211

    (21) funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list . END PUNTOYCOMA DOLAR DOLAR LANGUAGE PLPGSQL PUNTOYCOMA
    (8) instrucciones_funct_list -> instrucciones_funct_list . instrucciones_funct_sent
    (10) instrucciones_funct_sent -> . asignacion
    (11) instrucciones_funct_sent -> . declaracion
    (12) instrucciones_funct_sent -> . imprimir
    (13) instrucciones_funct_sent -> . sentencia_if
    (14) instrucciones_funct_sent -> . sentencia_switch
    (15) instrucciones_funct_sent -> . PUNTOYCOMA
    (16) instrucciones_funct_sent -> . llamada_funcion
    (17) instrucciones_funct_sent -> . empty
    (18) instrucciones_funct_sent -> . error
    (49) asignacion -> . ID DOSPUNTOS IGUAL expresion PUNTOYCOMA
    (50) declaracion -> . ID tipo DOSPUNTOS IGUAL expresion PUNTOYCOMA
    (51) declaracion -> . ID tipo PUNTOYCOMA
    (52) declaracion -> . ID tipo DEFAULT expresion PUNTOYCOMA
    (45) imprimir -> . RAISE lista_imprimir PUNTOYCOMA
    (41) sentencia_if -> . IF expresion THEN instrucciones_funct_list else END IF PUNTOYCOMA
    (36) sentencia_switch -> . CASE expresion case_list END CASE PUNTOYCOMA
    (27) llamada_funcion -> . SELECT ID PARA params PARC PUNTOYCOMA
    (28) llamada_funcion -> . CALL ID PARA params PARC PUNTOYCOMA
    (105) empty -> .

  ! shift/reduce conflict for END resolved as shift
  ! shift/reduce conflict for PUNTOYCOMA resolved as shift
  ! shift/reduce conflict for error resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for RAISE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for SELECT resolved as shift
  ! shift/reduce conflict for CALL resolved as shift
    END             shift and go to state 228
    PUNTOYCOMA      shift and go to state 164
    error           shift and go to state 173
    ID              shift and go to state 162
    RAISE           shift and go to state 174
    IF              shift and go to state 175
    CASE            shift and go to state 176
    SELECT          shift and go to state 9
    CALL            shift and go to state 10

  ! END             [ reduce using rule 105 (empty -> .) ]
  ! PUNTOYCOMA      [ reduce using rule 105 (empty -> .) ]
  ! error           [ reduce using rule 105 (empty -> .) ]
  ! ID              [ reduce using rule 105 (empty -> .) ]
  ! RAISE           [ reduce using rule 105 (empty -> .) ]
  ! IF              [ reduce using rule 105 (empty -> .) ]
  ! CASE            [ reduce using rule 105 (empty -> .) ]
  ! SELECT          [ reduce using rule 105 (empty -> .) ]
  ! CALL            [ reduce using rule 105 (empty -> .) ]

    instrucciones_funct_sent       shift and go to state 185
    asignacion                     shift and go to state 166
    declaracion                    shift and go to state 167
    imprimir                       shift and go to state 168
    sentencia_if                   shift and go to state 169
    sentencia_switch               shift and go to state 170
    llamada_funcion                shift and go to state 171
    empty                          shift and go to state 172

state 212

    (22) funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list . BEGIN instrucciones_funct_list END PUNTOYCOMA DOLAR DOLAR LANGUAGE PLPGSQL PUNTOYCOMA
    (8) instrucciones_funct_list -> instrucciones_funct_list . instrucciones_funct_sent
    (10) instrucciones_funct_sent -> . asignacion
    (11) instrucciones_funct_sent -> . declaracion
    (12) instrucciones_funct_sent -> . imprimir
    (13) instrucciones_funct_sent -> . sentencia_if
    (14) instrucciones_funct_sent -> . sentencia_switch
    (15) instrucciones_funct_sent -> . PUNTOYCOMA
    (16) instrucciones_funct_sent -> . llamada_funcion
    (17) instrucciones_funct_sent -> . empty
    (18) instrucciones_funct_sent -> . error
    (49) asignacion -> . ID DOSPUNTOS IGUAL expresion PUNTOYCOMA
    (50) declaracion -> . ID tipo DOSPUNTOS IGUAL expresion PUNTOYCOMA
    (51) declaracion -> . ID tipo PUNTOYCOMA
    (52) declaracion -> . ID tipo DEFAULT expresion PUNTOYCOMA
    (45) imprimir -> . RAISE lista_imprimir PUNTOYCOMA
    (41) sentencia_if -> . IF expresion THEN instrucciones_funct_list else END IF PUNTOYCOMA
    (36) sentencia_switch -> . CASE expresion case_list END CASE PUNTOYCOMA
    (27) llamada_funcion -> . SELECT ID PARA params PARC PUNTOYCOMA
    (28) llamada_funcion -> . CALL ID PARA params PARC PUNTOYCOMA
    (105) empty -> .

  ! shift/reduce conflict for BEGIN resolved as shift
  ! shift/reduce conflict for PUNTOYCOMA resolved as shift
  ! shift/reduce conflict for error resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for RAISE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for SELECT resolved as shift
  ! shift/reduce conflict for CALL resolved as shift
    BEGIN           shift and go to state 229
    PUNTOYCOMA      shift and go to state 164
    error           shift and go to state 173
    ID              shift and go to state 162
    RAISE           shift and go to state 174
    IF              shift and go to state 175
    CASE            shift and go to state 176
    SELECT          shift and go to state 9
    CALL            shift and go to state 10

  ! BEGIN           [ reduce using rule 105 (empty -> .) ]
  ! PUNTOYCOMA      [ reduce using rule 105 (empty -> .) ]
  ! error           [ reduce using rule 105 (empty -> .) ]
  ! ID              [ reduce using rule 105 (empty -> .) ]
  ! RAISE           [ reduce using rule 105 (empty -> .) ]
  ! IF              [ reduce using rule 105 (empty -> .) ]
  ! CASE            [ reduce using rule 105 (empty -> .) ]
  ! SELECT          [ reduce using rule 105 (empty -> .) ]
  ! CALL            [ reduce using rule 105 (empty -> .) ]

    instrucciones_funct_sent       shift and go to state 185
    asignacion                     shift and go to state 166
    declaracion                    shift and go to state 167
    imprimir                       shift and go to state 168
    sentencia_if                   shift and go to state 169
    sentencia_switch               shift and go to state 170
    llamada_funcion                shift and go to state 171
    empty                          shift and go to state 172

state 213

    (25) funcion -> CREATE OR REPLACE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list . END PUNTOYCOMA DOLAR DOLAR LANGUAGE PLPGSQL PUNTOYCOMA
    (8) instrucciones_funct_list -> instrucciones_funct_list . instrucciones_funct_sent
    (10) instrucciones_funct_sent -> . asignacion
    (11) instrucciones_funct_sent -> . declaracion
    (12) instrucciones_funct_sent -> . imprimir
    (13) instrucciones_funct_sent -> . sentencia_if
    (14) instrucciones_funct_sent -> . sentencia_switch
    (15) instrucciones_funct_sent -> . PUNTOYCOMA
    (16) instrucciones_funct_sent -> . llamada_funcion
    (17) instrucciones_funct_sent -> . empty
    (18) instrucciones_funct_sent -> . error
    (49) asignacion -> . ID DOSPUNTOS IGUAL expresion PUNTOYCOMA
    (50) declaracion -> . ID tipo DOSPUNTOS IGUAL expresion PUNTOYCOMA
    (51) declaracion -> . ID tipo PUNTOYCOMA
    (52) declaracion -> . ID tipo DEFAULT expresion PUNTOYCOMA
    (45) imprimir -> . RAISE lista_imprimir PUNTOYCOMA
    (41) sentencia_if -> . IF expresion THEN instrucciones_funct_list else END IF PUNTOYCOMA
    (36) sentencia_switch -> . CASE expresion case_list END CASE PUNTOYCOMA
    (27) llamada_funcion -> . SELECT ID PARA params PARC PUNTOYCOMA
    (28) llamada_funcion -> . CALL ID PARA params PARC PUNTOYCOMA
    (105) empty -> .

  ! shift/reduce conflict for END resolved as shift
  ! shift/reduce conflict for PUNTOYCOMA resolved as shift
  ! shift/reduce conflict for error resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for RAISE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for SELECT resolved as shift
  ! shift/reduce conflict for CALL resolved as shift
    END             shift and go to state 230
    PUNTOYCOMA      shift and go to state 164
    error           shift and go to state 173
    ID              shift and go to state 162
    RAISE           shift and go to state 174
    IF              shift and go to state 175
    CASE            shift and go to state 176
    SELECT          shift and go to state 9
    CALL            shift and go to state 10

  ! END             [ reduce using rule 105 (empty -> .) ]
  ! PUNTOYCOMA      [ reduce using rule 105 (empty -> .) ]
  ! error           [ reduce using rule 105 (empty -> .) ]
  ! ID              [ reduce using rule 105 (empty -> .) ]
  ! RAISE           [ reduce using rule 105 (empty -> .) ]
  ! IF              [ reduce using rule 105 (empty -> .) ]
  ! CASE            [ reduce using rule 105 (empty -> .) ]
  ! SELECT          [ reduce using rule 105 (empty -> .) ]
  ! CALL            [ reduce using rule 105 (empty -> .) ]

    instrucciones_funct_sent       shift and go to state 185
    asignacion                     shift and go to state 166
    declaracion                    shift and go to state 167
    imprimir                       shift and go to state 168
    sentencia_if                   shift and go to state 169
    sentencia_switch               shift and go to state 170
    llamada_funcion                shift and go to state 171
    empty                          shift and go to state 172

state 214

    (26) funcion -> CREATE OR REPLACE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list . BEGIN instrucciones_funct_list END PUNTOYCOMA DOLAR DOLAR LANGUAGE PLPGSQL PUNTOYCOMA
    (8) instrucciones_funct_list -> instrucciones_funct_list . instrucciones_funct_sent
    (10) instrucciones_funct_sent -> . asignacion
    (11) instrucciones_funct_sent -> . declaracion
    (12) instrucciones_funct_sent -> . imprimir
    (13) instrucciones_funct_sent -> . sentencia_if
    (14) instrucciones_funct_sent -> . sentencia_switch
    (15) instrucciones_funct_sent -> . PUNTOYCOMA
    (16) instrucciones_funct_sent -> . llamada_funcion
    (17) instrucciones_funct_sent -> . empty
    (18) instrucciones_funct_sent -> . error
    (49) asignacion -> . ID DOSPUNTOS IGUAL expresion PUNTOYCOMA
    (50) declaracion -> . ID tipo DOSPUNTOS IGUAL expresion PUNTOYCOMA
    (51) declaracion -> . ID tipo PUNTOYCOMA
    (52) declaracion -> . ID tipo DEFAULT expresion PUNTOYCOMA
    (45) imprimir -> . RAISE lista_imprimir PUNTOYCOMA
    (41) sentencia_if -> . IF expresion THEN instrucciones_funct_list else END IF PUNTOYCOMA
    (36) sentencia_switch -> . CASE expresion case_list END CASE PUNTOYCOMA
    (27) llamada_funcion -> . SELECT ID PARA params PARC PUNTOYCOMA
    (28) llamada_funcion -> . CALL ID PARA params PARC PUNTOYCOMA
    (105) empty -> .

  ! shift/reduce conflict for BEGIN resolved as shift
  ! shift/reduce conflict for PUNTOYCOMA resolved as shift
  ! shift/reduce conflict for error resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for RAISE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for SELECT resolved as shift
  ! shift/reduce conflict for CALL resolved as shift
    BEGIN           shift and go to state 231
    PUNTOYCOMA      shift and go to state 164
    error           shift and go to state 173
    ID              shift and go to state 162
    RAISE           shift and go to state 174
    IF              shift and go to state 175
    CASE            shift and go to state 176
    SELECT          shift and go to state 9
    CALL            shift and go to state 10

  ! BEGIN           [ reduce using rule 105 (empty -> .) ]
  ! PUNTOYCOMA      [ reduce using rule 105 (empty -> .) ]
  ! error           [ reduce using rule 105 (empty -> .) ]
  ! ID              [ reduce using rule 105 (empty -> .) ]
  ! RAISE           [ reduce using rule 105 (empty -> .) ]
  ! IF              [ reduce using rule 105 (empty -> .) ]
  ! CASE            [ reduce using rule 105 (empty -> .) ]
  ! SELECT          [ reduce using rule 105 (empty -> .) ]
  ! CALL            [ reduce using rule 105 (empty -> .) ]

    instrucciones_funct_sent       shift and go to state 185
    asignacion                     shift and go to state 166
    declaracion                    shift and go to state 167
    imprimir                       shift and go to state 168
    sentencia_if                   shift and go to state 169
    sentencia_switch               shift and go to state 170
    llamada_funcion                shift and go to state 171
    empty                          shift and go to state 172

state 215

    (23) funcion -> CREATE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PUNTOYCOMA . DOLAR DOLAR LANGUAGE PLPGSQL PUNTOYCOMA

    DOLAR           shift and go to state 232


state 216

    (24) funcion -> CREATE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list . END PUNTOYCOMA DOLAR DOLAR LANGUAGE PLPGSQL PUNTOYCOMA
    (8) instrucciones_funct_list -> instrucciones_funct_list . instrucciones_funct_sent
    (10) instrucciones_funct_sent -> . asignacion
    (11) instrucciones_funct_sent -> . declaracion
    (12) instrucciones_funct_sent -> . imprimir
    (13) instrucciones_funct_sent -> . sentencia_if
    (14) instrucciones_funct_sent -> . sentencia_switch
    (15) instrucciones_funct_sent -> . PUNTOYCOMA
    (16) instrucciones_funct_sent -> . llamada_funcion
    (17) instrucciones_funct_sent -> . empty
    (18) instrucciones_funct_sent -> . error
    (49) asignacion -> . ID DOSPUNTOS IGUAL expresion PUNTOYCOMA
    (50) declaracion -> . ID tipo DOSPUNTOS IGUAL expresion PUNTOYCOMA
    (51) declaracion -> . ID tipo PUNTOYCOMA
    (52) declaracion -> . ID tipo DEFAULT expresion PUNTOYCOMA
    (45) imprimir -> . RAISE lista_imprimir PUNTOYCOMA
    (41) sentencia_if -> . IF expresion THEN instrucciones_funct_list else END IF PUNTOYCOMA
    (36) sentencia_switch -> . CASE expresion case_list END CASE PUNTOYCOMA
    (27) llamada_funcion -> . SELECT ID PARA params PARC PUNTOYCOMA
    (28) llamada_funcion -> . CALL ID PARA params PARC PUNTOYCOMA
    (105) empty -> .

  ! shift/reduce conflict for END resolved as shift
  ! shift/reduce conflict for PUNTOYCOMA resolved as shift
  ! shift/reduce conflict for error resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for RAISE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for SELECT resolved as shift
  ! shift/reduce conflict for CALL resolved as shift
    END             shift and go to state 233
    PUNTOYCOMA      shift and go to state 164
    error           shift and go to state 173
    ID              shift and go to state 162
    RAISE           shift and go to state 174
    IF              shift and go to state 175
    CASE            shift and go to state 176
    SELECT          shift and go to state 9
    CALL            shift and go to state 10

  ! END             [ reduce using rule 105 (empty -> .) ]
  ! PUNTOYCOMA      [ reduce using rule 105 (empty -> .) ]
  ! error           [ reduce using rule 105 (empty -> .) ]
  ! ID              [ reduce using rule 105 (empty -> .) ]
  ! RAISE           [ reduce using rule 105 (empty -> .) ]
  ! IF              [ reduce using rule 105 (empty -> .) ]
  ! CASE            [ reduce using rule 105 (empty -> .) ]
  ! SELECT          [ reduce using rule 105 (empty -> .) ]
  ! CALL            [ reduce using rule 105 (empty -> .) ]

    instrucciones_funct_sent       shift and go to state 185
    asignacion                     shift and go to state 166
    declaracion                    shift and go to state 167
    imprimir                       shift and go to state 168
    sentencia_if                   shift and go to state 169
    sentencia_switch               shift and go to state 170
    llamada_funcion                shift and go to state 171
    empty                          shift and go to state 172

state 217

    (49) asignacion -> ID DOSPUNTOS IGUAL expresion . PUNTOYCOMA
    (75) log -> expresion . AND expresion
    (76) log -> expresion . ORR expresion

    PUNTOYCOMA      shift and go to state 234
    AND             shift and go to state 53
    ORR             shift and go to state 54


state 218

    (50) declaracion -> ID tipo DOSPUNTOS IGUAL . expresion PUNTOYCOMA
    (74) expresion -> . log
    (75) log -> . expresion AND expresion
    (76) log -> . expresion ORR expresion
    (77) log -> . rel
    (78) rel -> . arit MAYOR arit
    (79) rel -> . arit MENOR arit
    (80) rel -> . arit MAYORIGUAL arit
    (81) rel -> . arit MENORIGUAL arit
    (82) rel -> . arit IGUALIGUAL arit
    (83) rel -> . arit NOTIGUAL arit
    (84) rel -> . arit
    (85) arit -> . arit POR arit
    (86) arit -> . arit DIV arit
    (87) arit -> . arit MAS arit
    (88) arit -> . arit MENOS arit
    (89) arit -> . arit MOD arit
    (90) arit -> . arit ANDB arit
    (91) arit -> . arit SHIFTI arit
    (92) arit -> . arit SHIFTD arit
    (93) arit -> . arit XORB arit
    (94) arit -> . arit ORB arit
    (95) arit -> . PARA expresion PARC
    (96) arit -> . ID
    (97) arit -> . CADENA
    (98) arit -> . ENTERO
    (99) arit -> . FLOTANTE
    (100) arit -> . MENOS expresion
    (101) arit -> . NOTB expresion
    (102) arit -> . NOT expresion
    (103) arit -> . TRUE
    (104) arit -> . FALSE

    PARA            shift and go to state 27
    ID              shift and go to state 26
    CADENA          shift and go to state 35
    ENTERO          shift and go to state 36
    FLOTANTE        shift and go to state 37
    MENOS           shift and go to state 34
    NOTB            shift and go to state 38
    NOT             shift and go to state 39
    TRUE            shift and go to state 40
    FALSE           shift and go to state 41

    expresion                      shift and go to state 235
    log                            shift and go to state 31
    rel                            shift and go to state 32
    arit                           shift and go to state 33

state 219

    (52) declaracion -> ID tipo DEFAULT expresion . PUNTOYCOMA
    (75) log -> expresion . AND expresion
    (76) log -> expresion . ORR expresion

    PUNTOYCOMA      shift and go to state 236
    AND             shift and go to state 53
    ORR             shift and go to state 54


state 220

    (19) funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PUNTOYCOMA DOLAR . DOLAR LANGUAGE PLPGSQL PUNTOYCOMA

    DOLAR           shift and go to state 237


state 221

    (46) lista_imprimir -> lista_imprimir COMA sent_imprimir .

    PUNTOYCOMA      reduce using rule 46 (lista_imprimir -> lista_imprimir COMA sent_imprimir .)
    COMA            reduce using rule 46 (lista_imprimir -> lista_imprimir COMA sent_imprimir .)


state 222

    (41) sentencia_if -> IF expresion THEN instrucciones_funct_list . else END IF PUNTOYCOMA
    (8) instrucciones_funct_list -> instrucciones_funct_list . instrucciones_funct_sent
    (42) else -> . ELSE instrucciones_funct_list
    (43) else -> . ELSEIF expresion THEN instrucciones_funct_list else
    (44) else -> .
    (10) instrucciones_funct_sent -> . asignacion
    (11) instrucciones_funct_sent -> . declaracion
    (12) instrucciones_funct_sent -> . imprimir
    (13) instrucciones_funct_sent -> . sentencia_if
    (14) instrucciones_funct_sent -> . sentencia_switch
    (15) instrucciones_funct_sent -> . PUNTOYCOMA
    (16) instrucciones_funct_sent -> . llamada_funcion
    (17) instrucciones_funct_sent -> . empty
    (18) instrucciones_funct_sent -> . error
    (49) asignacion -> . ID DOSPUNTOS IGUAL expresion PUNTOYCOMA
    (50) declaracion -> . ID tipo DOSPUNTOS IGUAL expresion PUNTOYCOMA
    (51) declaracion -> . ID tipo PUNTOYCOMA
    (52) declaracion -> . ID tipo DEFAULT expresion PUNTOYCOMA
    (45) imprimir -> . RAISE lista_imprimir PUNTOYCOMA
    (41) sentencia_if -> . IF expresion THEN instrucciones_funct_list else END IF PUNTOYCOMA
    (36) sentencia_switch -> . CASE expresion case_list END CASE PUNTOYCOMA
    (27) llamada_funcion -> . SELECT ID PARA params PARC PUNTOYCOMA
    (28) llamada_funcion -> . CALL ID PARA params PARC PUNTOYCOMA
    (105) empty -> .

  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for PUNTOYCOMA resolved as shift
  ! shift/reduce conflict for error resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for RAISE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for SELECT resolved as shift
  ! shift/reduce conflict for CALL resolved as shift
  ! reduce/reduce conflict for END resolved using rule 44 (else -> .)
    ELSE            shift and go to state 239
    ELSEIF          shift and go to state 240
    END             reduce using rule 44 (else -> .)
    PUNTOYCOMA      shift and go to state 164
    error           shift and go to state 173
    ID              shift and go to state 162
    RAISE           shift and go to state 174
    IF              shift and go to state 175
    CASE            shift and go to state 176
    SELECT          shift and go to state 9
    CALL            shift and go to state 10

  ! ELSE            [ reduce using rule 105 (empty -> .) ]
  ! ELSEIF          [ reduce using rule 105 (empty -> .) ]
  ! PUNTOYCOMA      [ reduce using rule 105 (empty -> .) ]
  ! error           [ reduce using rule 105 (empty -> .) ]
  ! ID              [ reduce using rule 105 (empty -> .) ]
  ! RAISE           [ reduce using rule 105 (empty -> .) ]
  ! IF              [ reduce using rule 105 (empty -> .) ]
  ! CASE            [ reduce using rule 105 (empty -> .) ]
  ! SELECT          [ reduce using rule 105 (empty -> .) ]
  ! CALL            [ reduce using rule 105 (empty -> .) ]
  ! END             [ reduce using rule 105 (empty -> .) ]

    else                           shift and go to state 238
    instrucciones_funct_sent       shift and go to state 185
    asignacion                     shift and go to state 166
    declaracion                    shift and go to state 167
    imprimir                       shift and go to state 168
    sentencia_if                   shift and go to state 169
    sentencia_switch               shift and go to state 170
    llamada_funcion                shift and go to state 171
    empty                          shift and go to state 172

state 223

    (36) sentencia_switch -> CASE expresion case_list END . CASE PUNTOYCOMA

    CASE            shift and go to state 241


state 224

    (37) case_list -> case_list case .

    END             reduce using rule 37 (case_list -> case_list case .)
    WHEN            reduce using rule 37 (case_list -> case_list case .)
    ELSE            reduce using rule 37 (case_list -> case_list case .)


state 225

    (39) case -> WHEN expresion . THEN instrucciones_funct_list
    (75) log -> expresion . AND expresion
    (76) log -> expresion . ORR expresion

    THEN            shift and go to state 242
    AND             shift and go to state 53
    ORR             shift and go to state 54


state 226

    (40) case -> ELSE instrucciones_funct_list .
    (8) instrucciones_funct_list -> instrucciones_funct_list . instrucciones_funct_sent
    (10) instrucciones_funct_sent -> . asignacion
    (11) instrucciones_funct_sent -> . declaracion
    (12) instrucciones_funct_sent -> . imprimir
    (13) instrucciones_funct_sent -> . sentencia_if
    (14) instrucciones_funct_sent -> . sentencia_switch
    (15) instrucciones_funct_sent -> . PUNTOYCOMA
    (16) instrucciones_funct_sent -> . llamada_funcion
    (17) instrucciones_funct_sent -> . empty
    (18) instrucciones_funct_sent -> . error
    (49) asignacion -> . ID DOSPUNTOS IGUAL expresion PUNTOYCOMA
    (50) declaracion -> . ID tipo DOSPUNTOS IGUAL expresion PUNTOYCOMA
    (51) declaracion -> . ID tipo PUNTOYCOMA
    (52) declaracion -> . ID tipo DEFAULT expresion PUNTOYCOMA
    (45) imprimir -> . RAISE lista_imprimir PUNTOYCOMA
    (41) sentencia_if -> . IF expresion THEN instrucciones_funct_list else END IF PUNTOYCOMA
    (36) sentencia_switch -> . CASE expresion case_list END CASE PUNTOYCOMA
    (27) llamada_funcion -> . SELECT ID PARA params PARC PUNTOYCOMA
    (28) llamada_funcion -> . CALL ID PARA params PARC PUNTOYCOMA
    (105) empty -> .

  ! shift/reduce conflict for PUNTOYCOMA resolved as shift
  ! shift/reduce conflict for error resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for RAISE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for SELECT resolved as shift
  ! shift/reduce conflict for CALL resolved as shift
  ! reduce/reduce conflict for END resolved using rule 40 (case -> ELSE instrucciones_funct_list .)
  ! reduce/reduce conflict for WHEN resolved using rule 40 (case -> ELSE instrucciones_funct_list .)
  ! reduce/reduce conflict for ELSE resolved using rule 40 (case -> ELSE instrucciones_funct_list .)
    END             reduce using rule 40 (case -> ELSE instrucciones_funct_list .)
    WHEN            reduce using rule 40 (case -> ELSE instrucciones_funct_list .)
    ELSE            reduce using rule 40 (case -> ELSE instrucciones_funct_list .)
    PUNTOYCOMA      shift and go to state 164
    error           shift and go to state 173
    ID              shift and go to state 162
    RAISE           shift and go to state 174
    IF              shift and go to state 175
    CASE            shift and go to state 176
    SELECT          shift and go to state 9
    CALL            shift and go to state 10

  ! PUNTOYCOMA      [ reduce using rule 105 (empty -> .) ]
  ! error           [ reduce using rule 105 (empty -> .) ]
  ! ID              [ reduce using rule 105 (empty -> .) ]
  ! RAISE           [ reduce using rule 105 (empty -> .) ]
  ! IF              [ reduce using rule 105 (empty -> .) ]
  ! CASE            [ reduce using rule 105 (empty -> .) ]
  ! SELECT          [ reduce using rule 105 (empty -> .) ]
  ! CALL            [ reduce using rule 105 (empty -> .) ]
  ! END             [ reduce using rule 105 (empty -> .) ]
  ! WHEN            [ reduce using rule 105 (empty -> .) ]
  ! ELSE            [ reduce using rule 105 (empty -> .) ]

    instrucciones_funct_sent       shift and go to state 185
    asignacion                     shift and go to state 166
    declaracion                    shift and go to state 167
    imprimir                       shift and go to state 168
    sentencia_if                   shift and go to state 169
    sentencia_switch               shift and go to state 170
    llamada_funcion                shift and go to state 171
    empty                          shift and go to state 172

state 227

    (20) funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END . PUNTOYCOMA DOLAR DOLAR LANGUAGE PLPGSQL PUNTOYCOMA

    PUNTOYCOMA      shift and go to state 243


state 228

    (21) funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END . PUNTOYCOMA DOLAR DOLAR LANGUAGE PLPGSQL PUNTOYCOMA

    PUNTOYCOMA      shift and go to state 244


state 229

    (22) funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN . instrucciones_funct_list END PUNTOYCOMA DOLAR DOLAR LANGUAGE PLPGSQL PUNTOYCOMA
    (8) instrucciones_funct_list -> . instrucciones_funct_list instrucciones_funct_sent
    (9) instrucciones_funct_list -> . instrucciones_funct_sent
    (10) instrucciones_funct_sent -> . asignacion
    (11) instrucciones_funct_sent -> . declaracion
    (12) instrucciones_funct_sent -> . imprimir
    (13) instrucciones_funct_sent -> . sentencia_if
    (14) instrucciones_funct_sent -> . sentencia_switch
    (15) instrucciones_funct_sent -> . PUNTOYCOMA
    (16) instrucciones_funct_sent -> . llamada_funcion
    (17) instrucciones_funct_sent -> . empty
    (18) instrucciones_funct_sent -> . error
    (49) asignacion -> . ID DOSPUNTOS IGUAL expresion PUNTOYCOMA
    (50) declaracion -> . ID tipo DOSPUNTOS IGUAL expresion PUNTOYCOMA
    (51) declaracion -> . ID tipo PUNTOYCOMA
    (52) declaracion -> . ID tipo DEFAULT expresion PUNTOYCOMA
    (45) imprimir -> . RAISE lista_imprimir PUNTOYCOMA
    (41) sentencia_if -> . IF expresion THEN instrucciones_funct_list else END IF PUNTOYCOMA
    (36) sentencia_switch -> . CASE expresion case_list END CASE PUNTOYCOMA
    (27) llamada_funcion -> . SELECT ID PARA params PARC PUNTOYCOMA
    (28) llamada_funcion -> . CALL ID PARA params PARC PUNTOYCOMA
    (105) empty -> .

  ! shift/reduce conflict for PUNTOYCOMA resolved as shift
  ! shift/reduce conflict for error resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for RAISE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for SELECT resolved as shift
  ! shift/reduce conflict for CALL resolved as shift
    PUNTOYCOMA      shift and go to state 164
    error           shift and go to state 173
    ID              shift and go to state 162
    RAISE           shift and go to state 174
    IF              shift and go to state 175
    CASE            shift and go to state 176
    SELECT          shift and go to state 9
    CALL            shift and go to state 10
    END             reduce using rule 105 (empty -> .)

  ! PUNTOYCOMA      [ reduce using rule 105 (empty -> .) ]
  ! error           [ reduce using rule 105 (empty -> .) ]
  ! ID              [ reduce using rule 105 (empty -> .) ]
  ! RAISE           [ reduce using rule 105 (empty -> .) ]
  ! IF              [ reduce using rule 105 (empty -> .) ]
  ! CASE            [ reduce using rule 105 (empty -> .) ]
  ! SELECT          [ reduce using rule 105 (empty -> .) ]
  ! CALL            [ reduce using rule 105 (empty -> .) ]

    instrucciones_funct_list       shift and go to state 245
    instrucciones_funct_sent       shift and go to state 165
    asignacion                     shift and go to state 166
    declaracion                    shift and go to state 167
    imprimir                       shift and go to state 168
    sentencia_if                   shift and go to state 169
    sentencia_switch               shift and go to state 170
    llamada_funcion                shift and go to state 171
    empty                          shift and go to state 172

state 230

    (25) funcion -> CREATE OR REPLACE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END . PUNTOYCOMA DOLAR DOLAR LANGUAGE PLPGSQL PUNTOYCOMA

    PUNTOYCOMA      shift and go to state 246


state 231

    (26) funcion -> CREATE OR REPLACE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN . instrucciones_funct_list END PUNTOYCOMA DOLAR DOLAR LANGUAGE PLPGSQL PUNTOYCOMA
    (8) instrucciones_funct_list -> . instrucciones_funct_list instrucciones_funct_sent
    (9) instrucciones_funct_list -> . instrucciones_funct_sent
    (10) instrucciones_funct_sent -> . asignacion
    (11) instrucciones_funct_sent -> . declaracion
    (12) instrucciones_funct_sent -> . imprimir
    (13) instrucciones_funct_sent -> . sentencia_if
    (14) instrucciones_funct_sent -> . sentencia_switch
    (15) instrucciones_funct_sent -> . PUNTOYCOMA
    (16) instrucciones_funct_sent -> . llamada_funcion
    (17) instrucciones_funct_sent -> . empty
    (18) instrucciones_funct_sent -> . error
    (49) asignacion -> . ID DOSPUNTOS IGUAL expresion PUNTOYCOMA
    (50) declaracion -> . ID tipo DOSPUNTOS IGUAL expresion PUNTOYCOMA
    (51) declaracion -> . ID tipo PUNTOYCOMA
    (52) declaracion -> . ID tipo DEFAULT expresion PUNTOYCOMA
    (45) imprimir -> . RAISE lista_imprimir PUNTOYCOMA
    (41) sentencia_if -> . IF expresion THEN instrucciones_funct_list else END IF PUNTOYCOMA
    (36) sentencia_switch -> . CASE expresion case_list END CASE PUNTOYCOMA
    (27) llamada_funcion -> . SELECT ID PARA params PARC PUNTOYCOMA
    (28) llamada_funcion -> . CALL ID PARA params PARC PUNTOYCOMA
    (105) empty -> .

  ! shift/reduce conflict for PUNTOYCOMA resolved as shift
  ! shift/reduce conflict for error resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for RAISE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for SELECT resolved as shift
  ! shift/reduce conflict for CALL resolved as shift
    PUNTOYCOMA      shift and go to state 164
    error           shift and go to state 173
    ID              shift and go to state 162
    RAISE           shift and go to state 174
    IF              shift and go to state 175
    CASE            shift and go to state 176
    SELECT          shift and go to state 9
    CALL            shift and go to state 10
    END             reduce using rule 105 (empty -> .)

  ! PUNTOYCOMA      [ reduce using rule 105 (empty -> .) ]
  ! error           [ reduce using rule 105 (empty -> .) ]
  ! ID              [ reduce using rule 105 (empty -> .) ]
  ! RAISE           [ reduce using rule 105 (empty -> .) ]
  ! IF              [ reduce using rule 105 (empty -> .) ]
  ! CASE            [ reduce using rule 105 (empty -> .) ]
  ! SELECT          [ reduce using rule 105 (empty -> .) ]
  ! CALL            [ reduce using rule 105 (empty -> .) ]

    instrucciones_funct_list       shift and go to state 247
    instrucciones_funct_sent       shift and go to state 165
    asignacion                     shift and go to state 166
    declaracion                    shift and go to state 167
    imprimir                       shift and go to state 168
    sentencia_if                   shift and go to state 169
    sentencia_switch               shift and go to state 170
    llamada_funcion                shift and go to state 171
    empty                          shift and go to state 172

state 232

    (23) funcion -> CREATE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PUNTOYCOMA DOLAR . DOLAR LANGUAGE PLPGSQL PUNTOYCOMA

    DOLAR           shift and go to state 248


state 233

    (24) funcion -> CREATE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END . PUNTOYCOMA DOLAR DOLAR LANGUAGE PLPGSQL PUNTOYCOMA

    PUNTOYCOMA      shift and go to state 249


state 234

    (49) asignacion -> ID DOSPUNTOS IGUAL expresion PUNTOYCOMA .

    END             reduce using rule 49 (asignacion -> ID DOSPUNTOS IGUAL expresion PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 49 (asignacion -> ID DOSPUNTOS IGUAL expresion PUNTOYCOMA .)
    error           reduce using rule 49 (asignacion -> ID DOSPUNTOS IGUAL expresion PUNTOYCOMA .)
    ID              reduce using rule 49 (asignacion -> ID DOSPUNTOS IGUAL expresion PUNTOYCOMA .)
    RAISE           reduce using rule 49 (asignacion -> ID DOSPUNTOS IGUAL expresion PUNTOYCOMA .)
    IF              reduce using rule 49 (asignacion -> ID DOSPUNTOS IGUAL expresion PUNTOYCOMA .)
    CASE            reduce using rule 49 (asignacion -> ID DOSPUNTOS IGUAL expresion PUNTOYCOMA .)
    SELECT          reduce using rule 49 (asignacion -> ID DOSPUNTOS IGUAL expresion PUNTOYCOMA .)
    CALL            reduce using rule 49 (asignacion -> ID DOSPUNTOS IGUAL expresion PUNTOYCOMA .)
    BEGIN           reduce using rule 49 (asignacion -> ID DOSPUNTOS IGUAL expresion PUNTOYCOMA .)
    ELSE            reduce using rule 49 (asignacion -> ID DOSPUNTOS IGUAL expresion PUNTOYCOMA .)
    ELSEIF          reduce using rule 49 (asignacion -> ID DOSPUNTOS IGUAL expresion PUNTOYCOMA .)
    WHEN            reduce using rule 49 (asignacion -> ID DOSPUNTOS IGUAL expresion PUNTOYCOMA .)


state 235

    (50) declaracion -> ID tipo DOSPUNTOS IGUAL expresion . PUNTOYCOMA
    (75) log -> expresion . AND expresion
    (76) log -> expresion . ORR expresion

    PUNTOYCOMA      shift and go to state 250
    AND             shift and go to state 53
    ORR             shift and go to state 54


state 236

    (52) declaracion -> ID tipo DEFAULT expresion PUNTOYCOMA .

    END             reduce using rule 52 (declaracion -> ID tipo DEFAULT expresion PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 52 (declaracion -> ID tipo DEFAULT expresion PUNTOYCOMA .)
    error           reduce using rule 52 (declaracion -> ID tipo DEFAULT expresion PUNTOYCOMA .)
    ID              reduce using rule 52 (declaracion -> ID tipo DEFAULT expresion PUNTOYCOMA .)
    RAISE           reduce using rule 52 (declaracion -> ID tipo DEFAULT expresion PUNTOYCOMA .)
    IF              reduce using rule 52 (declaracion -> ID tipo DEFAULT expresion PUNTOYCOMA .)
    CASE            reduce using rule 52 (declaracion -> ID tipo DEFAULT expresion PUNTOYCOMA .)
    SELECT          reduce using rule 52 (declaracion -> ID tipo DEFAULT expresion PUNTOYCOMA .)
    CALL            reduce using rule 52 (declaracion -> ID tipo DEFAULT expresion PUNTOYCOMA .)
    BEGIN           reduce using rule 52 (declaracion -> ID tipo DEFAULT expresion PUNTOYCOMA .)
    ELSE            reduce using rule 52 (declaracion -> ID tipo DEFAULT expresion PUNTOYCOMA .)
    ELSEIF          reduce using rule 52 (declaracion -> ID tipo DEFAULT expresion PUNTOYCOMA .)
    WHEN            reduce using rule 52 (declaracion -> ID tipo DEFAULT expresion PUNTOYCOMA .)


state 237

    (19) funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PUNTOYCOMA DOLAR DOLAR . LANGUAGE PLPGSQL PUNTOYCOMA

    LANGUAGE        shift and go to state 251


state 238

    (41) sentencia_if -> IF expresion THEN instrucciones_funct_list else . END IF PUNTOYCOMA

    END             shift and go to state 252


state 239

    (42) else -> ELSE . instrucciones_funct_list
    (8) instrucciones_funct_list -> . instrucciones_funct_list instrucciones_funct_sent
    (9) instrucciones_funct_list -> . instrucciones_funct_sent
    (10) instrucciones_funct_sent -> . asignacion
    (11) instrucciones_funct_sent -> . declaracion
    (12) instrucciones_funct_sent -> . imprimir
    (13) instrucciones_funct_sent -> . sentencia_if
    (14) instrucciones_funct_sent -> . sentencia_switch
    (15) instrucciones_funct_sent -> . PUNTOYCOMA
    (16) instrucciones_funct_sent -> . llamada_funcion
    (17) instrucciones_funct_sent -> . empty
    (18) instrucciones_funct_sent -> . error
    (49) asignacion -> . ID DOSPUNTOS IGUAL expresion PUNTOYCOMA
    (50) declaracion -> . ID tipo DOSPUNTOS IGUAL expresion PUNTOYCOMA
    (51) declaracion -> . ID tipo PUNTOYCOMA
    (52) declaracion -> . ID tipo DEFAULT expresion PUNTOYCOMA
    (45) imprimir -> . RAISE lista_imprimir PUNTOYCOMA
    (41) sentencia_if -> . IF expresion THEN instrucciones_funct_list else END IF PUNTOYCOMA
    (36) sentencia_switch -> . CASE expresion case_list END CASE PUNTOYCOMA
    (27) llamada_funcion -> . SELECT ID PARA params PARC PUNTOYCOMA
    (28) llamada_funcion -> . CALL ID PARA params PARC PUNTOYCOMA
    (105) empty -> .

  ! shift/reduce conflict for PUNTOYCOMA resolved as shift
  ! shift/reduce conflict for error resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for RAISE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for SELECT resolved as shift
  ! shift/reduce conflict for CALL resolved as shift
    PUNTOYCOMA      shift and go to state 164
    error           shift and go to state 173
    ID              shift and go to state 162
    RAISE           shift and go to state 174
    IF              shift and go to state 175
    CASE            shift and go to state 176
    SELECT          shift and go to state 9
    CALL            shift and go to state 10
    END             reduce using rule 105 (empty -> .)

  ! PUNTOYCOMA      [ reduce using rule 105 (empty -> .) ]
  ! error           [ reduce using rule 105 (empty -> .) ]
  ! ID              [ reduce using rule 105 (empty -> .) ]
  ! RAISE           [ reduce using rule 105 (empty -> .) ]
  ! IF              [ reduce using rule 105 (empty -> .) ]
  ! CASE            [ reduce using rule 105 (empty -> .) ]
  ! SELECT          [ reduce using rule 105 (empty -> .) ]
  ! CALL            [ reduce using rule 105 (empty -> .) ]

    instrucciones_funct_list       shift and go to state 253
    instrucciones_funct_sent       shift and go to state 165
    asignacion                     shift and go to state 166
    declaracion                    shift and go to state 167
    imprimir                       shift and go to state 168
    sentencia_if                   shift and go to state 169
    sentencia_switch               shift and go to state 170
    llamada_funcion                shift and go to state 171
    empty                          shift and go to state 172

state 240

    (43) else -> ELSEIF . expresion THEN instrucciones_funct_list else
    (74) expresion -> . log
    (75) log -> . expresion AND expresion
    (76) log -> . expresion ORR expresion
    (77) log -> . rel
    (78) rel -> . arit MAYOR arit
    (79) rel -> . arit MENOR arit
    (80) rel -> . arit MAYORIGUAL arit
    (81) rel -> . arit MENORIGUAL arit
    (82) rel -> . arit IGUALIGUAL arit
    (83) rel -> . arit NOTIGUAL arit
    (84) rel -> . arit
    (85) arit -> . arit POR arit
    (86) arit -> . arit DIV arit
    (87) arit -> . arit MAS arit
    (88) arit -> . arit MENOS arit
    (89) arit -> . arit MOD arit
    (90) arit -> . arit ANDB arit
    (91) arit -> . arit SHIFTI arit
    (92) arit -> . arit SHIFTD arit
    (93) arit -> . arit XORB arit
    (94) arit -> . arit ORB arit
    (95) arit -> . PARA expresion PARC
    (96) arit -> . ID
    (97) arit -> . CADENA
    (98) arit -> . ENTERO
    (99) arit -> . FLOTANTE
    (100) arit -> . MENOS expresion
    (101) arit -> . NOTB expresion
    (102) arit -> . NOT expresion
    (103) arit -> . TRUE
    (104) arit -> . FALSE

    PARA            shift and go to state 27
    ID              shift and go to state 26
    CADENA          shift and go to state 35
    ENTERO          shift and go to state 36
    FLOTANTE        shift and go to state 37
    MENOS           shift and go to state 34
    NOTB            shift and go to state 38
    NOT             shift and go to state 39
    TRUE            shift and go to state 40
    FALSE           shift and go to state 41

    expresion                      shift and go to state 254
    log                            shift and go to state 31
    rel                            shift and go to state 32
    arit                           shift and go to state 33

state 241

    (36) sentencia_switch -> CASE expresion case_list END CASE . PUNTOYCOMA

    PUNTOYCOMA      shift and go to state 255


state 242

    (39) case -> WHEN expresion THEN . instrucciones_funct_list
    (8) instrucciones_funct_list -> . instrucciones_funct_list instrucciones_funct_sent
    (9) instrucciones_funct_list -> . instrucciones_funct_sent
    (10) instrucciones_funct_sent -> . asignacion
    (11) instrucciones_funct_sent -> . declaracion
    (12) instrucciones_funct_sent -> . imprimir
    (13) instrucciones_funct_sent -> . sentencia_if
    (14) instrucciones_funct_sent -> . sentencia_switch
    (15) instrucciones_funct_sent -> . PUNTOYCOMA
    (16) instrucciones_funct_sent -> . llamada_funcion
    (17) instrucciones_funct_sent -> . empty
    (18) instrucciones_funct_sent -> . error
    (49) asignacion -> . ID DOSPUNTOS IGUAL expresion PUNTOYCOMA
    (50) declaracion -> . ID tipo DOSPUNTOS IGUAL expresion PUNTOYCOMA
    (51) declaracion -> . ID tipo PUNTOYCOMA
    (52) declaracion -> . ID tipo DEFAULT expresion PUNTOYCOMA
    (45) imprimir -> . RAISE lista_imprimir PUNTOYCOMA
    (41) sentencia_if -> . IF expresion THEN instrucciones_funct_list else END IF PUNTOYCOMA
    (36) sentencia_switch -> . CASE expresion case_list END CASE PUNTOYCOMA
    (27) llamada_funcion -> . SELECT ID PARA params PARC PUNTOYCOMA
    (28) llamada_funcion -> . CALL ID PARA params PARC PUNTOYCOMA
    (105) empty -> .

  ! shift/reduce conflict for PUNTOYCOMA resolved as shift
  ! shift/reduce conflict for error resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for RAISE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for SELECT resolved as shift
  ! shift/reduce conflict for CALL resolved as shift
    PUNTOYCOMA      shift and go to state 164
    error           shift and go to state 173
    ID              shift and go to state 162
    RAISE           shift and go to state 174
    IF              shift and go to state 175
    CASE            shift and go to state 176
    SELECT          shift and go to state 9
    CALL            shift and go to state 10
    END             reduce using rule 105 (empty -> .)
    WHEN            reduce using rule 105 (empty -> .)
    ELSE            reduce using rule 105 (empty -> .)

  ! PUNTOYCOMA      [ reduce using rule 105 (empty -> .) ]
  ! error           [ reduce using rule 105 (empty -> .) ]
  ! ID              [ reduce using rule 105 (empty -> .) ]
  ! RAISE           [ reduce using rule 105 (empty -> .) ]
  ! IF              [ reduce using rule 105 (empty -> .) ]
  ! CASE            [ reduce using rule 105 (empty -> .) ]
  ! SELECT          [ reduce using rule 105 (empty -> .) ]
  ! CALL            [ reduce using rule 105 (empty -> .) ]

    instrucciones_funct_list       shift and go to state 256
    instrucciones_funct_sent       shift and go to state 165
    asignacion                     shift and go to state 166
    declaracion                    shift and go to state 167
    imprimir                       shift and go to state 168
    sentencia_if                   shift and go to state 169
    sentencia_switch               shift and go to state 170
    llamada_funcion                shift and go to state 171
    empty                          shift and go to state 172

state 243

    (20) funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PUNTOYCOMA . DOLAR DOLAR LANGUAGE PLPGSQL PUNTOYCOMA

    DOLAR           shift and go to state 257


state 244

    (21) funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PUNTOYCOMA . DOLAR DOLAR LANGUAGE PLPGSQL PUNTOYCOMA

    DOLAR           shift and go to state 258


state 245

    (22) funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list . END PUNTOYCOMA DOLAR DOLAR LANGUAGE PLPGSQL PUNTOYCOMA
    (8) instrucciones_funct_list -> instrucciones_funct_list . instrucciones_funct_sent
    (10) instrucciones_funct_sent -> . asignacion
    (11) instrucciones_funct_sent -> . declaracion
    (12) instrucciones_funct_sent -> . imprimir
    (13) instrucciones_funct_sent -> . sentencia_if
    (14) instrucciones_funct_sent -> . sentencia_switch
    (15) instrucciones_funct_sent -> . PUNTOYCOMA
    (16) instrucciones_funct_sent -> . llamada_funcion
    (17) instrucciones_funct_sent -> . empty
    (18) instrucciones_funct_sent -> . error
    (49) asignacion -> . ID DOSPUNTOS IGUAL expresion PUNTOYCOMA
    (50) declaracion -> . ID tipo DOSPUNTOS IGUAL expresion PUNTOYCOMA
    (51) declaracion -> . ID tipo PUNTOYCOMA
    (52) declaracion -> . ID tipo DEFAULT expresion PUNTOYCOMA
    (45) imprimir -> . RAISE lista_imprimir PUNTOYCOMA
    (41) sentencia_if -> . IF expresion THEN instrucciones_funct_list else END IF PUNTOYCOMA
    (36) sentencia_switch -> . CASE expresion case_list END CASE PUNTOYCOMA
    (27) llamada_funcion -> . SELECT ID PARA params PARC PUNTOYCOMA
    (28) llamada_funcion -> . CALL ID PARA params PARC PUNTOYCOMA
    (105) empty -> .

  ! shift/reduce conflict for END resolved as shift
  ! shift/reduce conflict for PUNTOYCOMA resolved as shift
  ! shift/reduce conflict for error resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for RAISE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for SELECT resolved as shift
  ! shift/reduce conflict for CALL resolved as shift
    END             shift and go to state 259
    PUNTOYCOMA      shift and go to state 164
    error           shift and go to state 173
    ID              shift and go to state 162
    RAISE           shift and go to state 174
    IF              shift and go to state 175
    CASE            shift and go to state 176
    SELECT          shift and go to state 9
    CALL            shift and go to state 10

  ! END             [ reduce using rule 105 (empty -> .) ]
  ! PUNTOYCOMA      [ reduce using rule 105 (empty -> .) ]
  ! error           [ reduce using rule 105 (empty -> .) ]
  ! ID              [ reduce using rule 105 (empty -> .) ]
  ! RAISE           [ reduce using rule 105 (empty -> .) ]
  ! IF              [ reduce using rule 105 (empty -> .) ]
  ! CASE            [ reduce using rule 105 (empty -> .) ]
  ! SELECT          [ reduce using rule 105 (empty -> .) ]
  ! CALL            [ reduce using rule 105 (empty -> .) ]

    instrucciones_funct_sent       shift and go to state 185
    asignacion                     shift and go to state 166
    declaracion                    shift and go to state 167
    imprimir                       shift and go to state 168
    sentencia_if                   shift and go to state 169
    sentencia_switch               shift and go to state 170
    llamada_funcion                shift and go to state 171
    empty                          shift and go to state 172

state 246

    (25) funcion -> CREATE OR REPLACE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PUNTOYCOMA . DOLAR DOLAR LANGUAGE PLPGSQL PUNTOYCOMA

    DOLAR           shift and go to state 260


state 247

    (26) funcion -> CREATE OR REPLACE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list . END PUNTOYCOMA DOLAR DOLAR LANGUAGE PLPGSQL PUNTOYCOMA
    (8) instrucciones_funct_list -> instrucciones_funct_list . instrucciones_funct_sent
    (10) instrucciones_funct_sent -> . asignacion
    (11) instrucciones_funct_sent -> . declaracion
    (12) instrucciones_funct_sent -> . imprimir
    (13) instrucciones_funct_sent -> . sentencia_if
    (14) instrucciones_funct_sent -> . sentencia_switch
    (15) instrucciones_funct_sent -> . PUNTOYCOMA
    (16) instrucciones_funct_sent -> . llamada_funcion
    (17) instrucciones_funct_sent -> . empty
    (18) instrucciones_funct_sent -> . error
    (49) asignacion -> . ID DOSPUNTOS IGUAL expresion PUNTOYCOMA
    (50) declaracion -> . ID tipo DOSPUNTOS IGUAL expresion PUNTOYCOMA
    (51) declaracion -> . ID tipo PUNTOYCOMA
    (52) declaracion -> . ID tipo DEFAULT expresion PUNTOYCOMA
    (45) imprimir -> . RAISE lista_imprimir PUNTOYCOMA
    (41) sentencia_if -> . IF expresion THEN instrucciones_funct_list else END IF PUNTOYCOMA
    (36) sentencia_switch -> . CASE expresion case_list END CASE PUNTOYCOMA
    (27) llamada_funcion -> . SELECT ID PARA params PARC PUNTOYCOMA
    (28) llamada_funcion -> . CALL ID PARA params PARC PUNTOYCOMA
    (105) empty -> .

  ! shift/reduce conflict for END resolved as shift
  ! shift/reduce conflict for PUNTOYCOMA resolved as shift
  ! shift/reduce conflict for error resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for RAISE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for SELECT resolved as shift
  ! shift/reduce conflict for CALL resolved as shift
    END             shift and go to state 261
    PUNTOYCOMA      shift and go to state 164
    error           shift and go to state 173
    ID              shift and go to state 162
    RAISE           shift and go to state 174
    IF              shift and go to state 175
    CASE            shift and go to state 176
    SELECT          shift and go to state 9
    CALL            shift and go to state 10

  ! END             [ reduce using rule 105 (empty -> .) ]
  ! PUNTOYCOMA      [ reduce using rule 105 (empty -> .) ]
  ! error           [ reduce using rule 105 (empty -> .) ]
  ! ID              [ reduce using rule 105 (empty -> .) ]
  ! RAISE           [ reduce using rule 105 (empty -> .) ]
  ! IF              [ reduce using rule 105 (empty -> .) ]
  ! CASE            [ reduce using rule 105 (empty -> .) ]
  ! SELECT          [ reduce using rule 105 (empty -> .) ]
  ! CALL            [ reduce using rule 105 (empty -> .) ]

    instrucciones_funct_sent       shift and go to state 185
    asignacion                     shift and go to state 166
    declaracion                    shift and go to state 167
    imprimir                       shift and go to state 168
    sentencia_if                   shift and go to state 169
    sentencia_switch               shift and go to state 170
    llamada_funcion                shift and go to state 171
    empty                          shift and go to state 172

state 248

    (23) funcion -> CREATE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PUNTOYCOMA DOLAR DOLAR . LANGUAGE PLPGSQL PUNTOYCOMA

    LANGUAGE        shift and go to state 262


state 249

    (24) funcion -> CREATE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PUNTOYCOMA . DOLAR DOLAR LANGUAGE PLPGSQL PUNTOYCOMA

    DOLAR           shift and go to state 263


state 250

    (50) declaracion -> ID tipo DOSPUNTOS IGUAL expresion PUNTOYCOMA .

    END             reduce using rule 50 (declaracion -> ID tipo DOSPUNTOS IGUAL expresion PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 50 (declaracion -> ID tipo DOSPUNTOS IGUAL expresion PUNTOYCOMA .)
    error           reduce using rule 50 (declaracion -> ID tipo DOSPUNTOS IGUAL expresion PUNTOYCOMA .)
    ID              reduce using rule 50 (declaracion -> ID tipo DOSPUNTOS IGUAL expresion PUNTOYCOMA .)
    RAISE           reduce using rule 50 (declaracion -> ID tipo DOSPUNTOS IGUAL expresion PUNTOYCOMA .)
    IF              reduce using rule 50 (declaracion -> ID tipo DOSPUNTOS IGUAL expresion PUNTOYCOMA .)
    CASE            reduce using rule 50 (declaracion -> ID tipo DOSPUNTOS IGUAL expresion PUNTOYCOMA .)
    SELECT          reduce using rule 50 (declaracion -> ID tipo DOSPUNTOS IGUAL expresion PUNTOYCOMA .)
    CALL            reduce using rule 50 (declaracion -> ID tipo DOSPUNTOS IGUAL expresion PUNTOYCOMA .)
    BEGIN           reduce using rule 50 (declaracion -> ID tipo DOSPUNTOS IGUAL expresion PUNTOYCOMA .)
    ELSE            reduce using rule 50 (declaracion -> ID tipo DOSPUNTOS IGUAL expresion PUNTOYCOMA .)
    ELSEIF          reduce using rule 50 (declaracion -> ID tipo DOSPUNTOS IGUAL expresion PUNTOYCOMA .)
    WHEN            reduce using rule 50 (declaracion -> ID tipo DOSPUNTOS IGUAL expresion PUNTOYCOMA .)


state 251

    (19) funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PUNTOYCOMA DOLAR DOLAR LANGUAGE . PLPGSQL PUNTOYCOMA

    PLPGSQL         shift and go to state 264


state 252

    (41) sentencia_if -> IF expresion THEN instrucciones_funct_list else END . IF PUNTOYCOMA

    IF              shift and go to state 265


state 253

    (42) else -> ELSE instrucciones_funct_list .
    (8) instrucciones_funct_list -> instrucciones_funct_list . instrucciones_funct_sent
    (10) instrucciones_funct_sent -> . asignacion
    (11) instrucciones_funct_sent -> . declaracion
    (12) instrucciones_funct_sent -> . imprimir
    (13) instrucciones_funct_sent -> . sentencia_if
    (14) instrucciones_funct_sent -> . sentencia_switch
    (15) instrucciones_funct_sent -> . PUNTOYCOMA
    (16) instrucciones_funct_sent -> . llamada_funcion
    (17) instrucciones_funct_sent -> . empty
    (18) instrucciones_funct_sent -> . error
    (49) asignacion -> . ID DOSPUNTOS IGUAL expresion PUNTOYCOMA
    (50) declaracion -> . ID tipo DOSPUNTOS IGUAL expresion PUNTOYCOMA
    (51) declaracion -> . ID tipo PUNTOYCOMA
    (52) declaracion -> . ID tipo DEFAULT expresion PUNTOYCOMA
    (45) imprimir -> . RAISE lista_imprimir PUNTOYCOMA
    (41) sentencia_if -> . IF expresion THEN instrucciones_funct_list else END IF PUNTOYCOMA
    (36) sentencia_switch -> . CASE expresion case_list END CASE PUNTOYCOMA
    (27) llamada_funcion -> . SELECT ID PARA params PARC PUNTOYCOMA
    (28) llamada_funcion -> . CALL ID PARA params PARC PUNTOYCOMA
    (105) empty -> .

  ! shift/reduce conflict for PUNTOYCOMA resolved as shift
  ! shift/reduce conflict for error resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for RAISE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for SELECT resolved as shift
  ! shift/reduce conflict for CALL resolved as shift
  ! reduce/reduce conflict for END resolved using rule 42 (else -> ELSE instrucciones_funct_list .)
    END             reduce using rule 42 (else -> ELSE instrucciones_funct_list .)
    PUNTOYCOMA      shift and go to state 164
    error           shift and go to state 173
    ID              shift and go to state 162
    RAISE           shift and go to state 174
    IF              shift and go to state 175
    CASE            shift and go to state 176
    SELECT          shift and go to state 9
    CALL            shift and go to state 10

  ! PUNTOYCOMA      [ reduce using rule 105 (empty -> .) ]
  ! error           [ reduce using rule 105 (empty -> .) ]
  ! ID              [ reduce using rule 105 (empty -> .) ]
  ! RAISE           [ reduce using rule 105 (empty -> .) ]
  ! IF              [ reduce using rule 105 (empty -> .) ]
  ! CASE            [ reduce using rule 105 (empty -> .) ]
  ! SELECT          [ reduce using rule 105 (empty -> .) ]
  ! CALL            [ reduce using rule 105 (empty -> .) ]
  ! END             [ reduce using rule 105 (empty -> .) ]

    instrucciones_funct_sent       shift and go to state 185
    asignacion                     shift and go to state 166
    declaracion                    shift and go to state 167
    imprimir                       shift and go to state 168
    sentencia_if                   shift and go to state 169
    sentencia_switch               shift and go to state 170
    llamada_funcion                shift and go to state 171
    empty                          shift and go to state 172

state 254

    (43) else -> ELSEIF expresion . THEN instrucciones_funct_list else
    (75) log -> expresion . AND expresion
    (76) log -> expresion . ORR expresion

    THEN            shift and go to state 266
    AND             shift and go to state 53
    ORR             shift and go to state 54


state 255

    (36) sentencia_switch -> CASE expresion case_list END CASE PUNTOYCOMA .

    END             reduce using rule 36 (sentencia_switch -> CASE expresion case_list END CASE PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 36 (sentencia_switch -> CASE expresion case_list END CASE PUNTOYCOMA .)
    error           reduce using rule 36 (sentencia_switch -> CASE expresion case_list END CASE PUNTOYCOMA .)
    ID              reduce using rule 36 (sentencia_switch -> CASE expresion case_list END CASE PUNTOYCOMA .)
    RAISE           reduce using rule 36 (sentencia_switch -> CASE expresion case_list END CASE PUNTOYCOMA .)
    IF              reduce using rule 36 (sentencia_switch -> CASE expresion case_list END CASE PUNTOYCOMA .)
    CASE            reduce using rule 36 (sentencia_switch -> CASE expresion case_list END CASE PUNTOYCOMA .)
    SELECT          reduce using rule 36 (sentencia_switch -> CASE expresion case_list END CASE PUNTOYCOMA .)
    CALL            reduce using rule 36 (sentencia_switch -> CASE expresion case_list END CASE PUNTOYCOMA .)
    BEGIN           reduce using rule 36 (sentencia_switch -> CASE expresion case_list END CASE PUNTOYCOMA .)
    ELSE            reduce using rule 36 (sentencia_switch -> CASE expresion case_list END CASE PUNTOYCOMA .)
    ELSEIF          reduce using rule 36 (sentencia_switch -> CASE expresion case_list END CASE PUNTOYCOMA .)
    WHEN            reduce using rule 36 (sentencia_switch -> CASE expresion case_list END CASE PUNTOYCOMA .)


state 256

    (39) case -> WHEN expresion THEN instrucciones_funct_list .
    (8) instrucciones_funct_list -> instrucciones_funct_list . instrucciones_funct_sent
    (10) instrucciones_funct_sent -> . asignacion
    (11) instrucciones_funct_sent -> . declaracion
    (12) instrucciones_funct_sent -> . imprimir
    (13) instrucciones_funct_sent -> . sentencia_if
    (14) instrucciones_funct_sent -> . sentencia_switch
    (15) instrucciones_funct_sent -> . PUNTOYCOMA
    (16) instrucciones_funct_sent -> . llamada_funcion
    (17) instrucciones_funct_sent -> . empty
    (18) instrucciones_funct_sent -> . error
    (49) asignacion -> . ID DOSPUNTOS IGUAL expresion PUNTOYCOMA
    (50) declaracion -> . ID tipo DOSPUNTOS IGUAL expresion PUNTOYCOMA
    (51) declaracion -> . ID tipo PUNTOYCOMA
    (52) declaracion -> . ID tipo DEFAULT expresion PUNTOYCOMA
    (45) imprimir -> . RAISE lista_imprimir PUNTOYCOMA
    (41) sentencia_if -> . IF expresion THEN instrucciones_funct_list else END IF PUNTOYCOMA
    (36) sentencia_switch -> . CASE expresion case_list END CASE PUNTOYCOMA
    (27) llamada_funcion -> . SELECT ID PARA params PARC PUNTOYCOMA
    (28) llamada_funcion -> . CALL ID PARA params PARC PUNTOYCOMA
    (105) empty -> .

  ! shift/reduce conflict for PUNTOYCOMA resolved as shift
  ! shift/reduce conflict for error resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for RAISE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for SELECT resolved as shift
  ! shift/reduce conflict for CALL resolved as shift
  ! reduce/reduce conflict for END resolved using rule 39 (case -> WHEN expresion THEN instrucciones_funct_list .)
  ! reduce/reduce conflict for WHEN resolved using rule 39 (case -> WHEN expresion THEN instrucciones_funct_list .)
  ! reduce/reduce conflict for ELSE resolved using rule 39 (case -> WHEN expresion THEN instrucciones_funct_list .)
    END             reduce using rule 39 (case -> WHEN expresion THEN instrucciones_funct_list .)
    WHEN            reduce using rule 39 (case -> WHEN expresion THEN instrucciones_funct_list .)
    ELSE            reduce using rule 39 (case -> WHEN expresion THEN instrucciones_funct_list .)
    PUNTOYCOMA      shift and go to state 164
    error           shift and go to state 173
    ID              shift and go to state 162
    RAISE           shift and go to state 174
    IF              shift and go to state 175
    CASE            shift and go to state 176
    SELECT          shift and go to state 9
    CALL            shift and go to state 10

  ! PUNTOYCOMA      [ reduce using rule 105 (empty -> .) ]
  ! error           [ reduce using rule 105 (empty -> .) ]
  ! ID              [ reduce using rule 105 (empty -> .) ]
  ! RAISE           [ reduce using rule 105 (empty -> .) ]
  ! IF              [ reduce using rule 105 (empty -> .) ]
  ! CASE            [ reduce using rule 105 (empty -> .) ]
  ! SELECT          [ reduce using rule 105 (empty -> .) ]
  ! CALL            [ reduce using rule 105 (empty -> .) ]
  ! END             [ reduce using rule 105 (empty -> .) ]
  ! WHEN            [ reduce using rule 105 (empty -> .) ]
  ! ELSE            [ reduce using rule 105 (empty -> .) ]

    instrucciones_funct_sent       shift and go to state 185
    asignacion                     shift and go to state 166
    declaracion                    shift and go to state 167
    imprimir                       shift and go to state 168
    sentencia_if                   shift and go to state 169
    sentencia_switch               shift and go to state 170
    llamada_funcion                shift and go to state 171
    empty                          shift and go to state 172

state 257

    (20) funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PUNTOYCOMA DOLAR . DOLAR LANGUAGE PLPGSQL PUNTOYCOMA

    DOLAR           shift and go to state 267


state 258

    (21) funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PUNTOYCOMA DOLAR . DOLAR LANGUAGE PLPGSQL PUNTOYCOMA

    DOLAR           shift and go to state 268


state 259

    (22) funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END . PUNTOYCOMA DOLAR DOLAR LANGUAGE PLPGSQL PUNTOYCOMA

    PUNTOYCOMA      shift and go to state 269


state 260

    (25) funcion -> CREATE OR REPLACE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PUNTOYCOMA DOLAR . DOLAR LANGUAGE PLPGSQL PUNTOYCOMA

    DOLAR           shift and go to state 270


state 261

    (26) funcion -> CREATE OR REPLACE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END . PUNTOYCOMA DOLAR DOLAR LANGUAGE PLPGSQL PUNTOYCOMA

    PUNTOYCOMA      shift and go to state 271


state 262

    (23) funcion -> CREATE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PUNTOYCOMA DOLAR DOLAR LANGUAGE . PLPGSQL PUNTOYCOMA

    PLPGSQL         shift and go to state 272


state 263

    (24) funcion -> CREATE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PUNTOYCOMA DOLAR . DOLAR LANGUAGE PLPGSQL PUNTOYCOMA

    DOLAR           shift and go to state 273


state 264

    (19) funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PUNTOYCOMA DOLAR DOLAR LANGUAGE PLPGSQL . PUNTOYCOMA

    PUNTOYCOMA      shift and go to state 274


state 265

    (41) sentencia_if -> IF expresion THEN instrucciones_funct_list else END IF . PUNTOYCOMA

    PUNTOYCOMA      shift and go to state 275


state 266

    (43) else -> ELSEIF expresion THEN . instrucciones_funct_list else
    (8) instrucciones_funct_list -> . instrucciones_funct_list instrucciones_funct_sent
    (9) instrucciones_funct_list -> . instrucciones_funct_sent
    (10) instrucciones_funct_sent -> . asignacion
    (11) instrucciones_funct_sent -> . declaracion
    (12) instrucciones_funct_sent -> . imprimir
    (13) instrucciones_funct_sent -> . sentencia_if
    (14) instrucciones_funct_sent -> . sentencia_switch
    (15) instrucciones_funct_sent -> . PUNTOYCOMA
    (16) instrucciones_funct_sent -> . llamada_funcion
    (17) instrucciones_funct_sent -> . empty
    (18) instrucciones_funct_sent -> . error
    (49) asignacion -> . ID DOSPUNTOS IGUAL expresion PUNTOYCOMA
    (50) declaracion -> . ID tipo DOSPUNTOS IGUAL expresion PUNTOYCOMA
    (51) declaracion -> . ID tipo PUNTOYCOMA
    (52) declaracion -> . ID tipo DEFAULT expresion PUNTOYCOMA
    (45) imprimir -> . RAISE lista_imprimir PUNTOYCOMA
    (41) sentencia_if -> . IF expresion THEN instrucciones_funct_list else END IF PUNTOYCOMA
    (36) sentencia_switch -> . CASE expresion case_list END CASE PUNTOYCOMA
    (27) llamada_funcion -> . SELECT ID PARA params PARC PUNTOYCOMA
    (28) llamada_funcion -> . CALL ID PARA params PARC PUNTOYCOMA
    (105) empty -> .

  ! shift/reduce conflict for PUNTOYCOMA resolved as shift
  ! shift/reduce conflict for error resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for RAISE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for SELECT resolved as shift
  ! shift/reduce conflict for CALL resolved as shift
    PUNTOYCOMA      shift and go to state 164
    error           shift and go to state 173
    ID              shift and go to state 162
    RAISE           shift and go to state 174
    IF              shift and go to state 175
    CASE            shift and go to state 176
    SELECT          shift and go to state 9
    CALL            shift and go to state 10
    ELSE            reduce using rule 105 (empty -> .)
    ELSEIF          reduce using rule 105 (empty -> .)
    END             reduce using rule 105 (empty -> .)

  ! PUNTOYCOMA      [ reduce using rule 105 (empty -> .) ]
  ! error           [ reduce using rule 105 (empty -> .) ]
  ! ID              [ reduce using rule 105 (empty -> .) ]
  ! RAISE           [ reduce using rule 105 (empty -> .) ]
  ! IF              [ reduce using rule 105 (empty -> .) ]
  ! CASE            [ reduce using rule 105 (empty -> .) ]
  ! SELECT          [ reduce using rule 105 (empty -> .) ]
  ! CALL            [ reduce using rule 105 (empty -> .) ]

    instrucciones_funct_list       shift and go to state 276
    instrucciones_funct_sent       shift and go to state 165
    asignacion                     shift and go to state 166
    declaracion                    shift and go to state 167
    imprimir                       shift and go to state 168
    sentencia_if                   shift and go to state 169
    sentencia_switch               shift and go to state 170
    llamada_funcion                shift and go to state 171
    empty                          shift and go to state 172

state 267

    (20) funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PUNTOYCOMA DOLAR DOLAR . LANGUAGE PLPGSQL PUNTOYCOMA

    LANGUAGE        shift and go to state 277


state 268

    (21) funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PUNTOYCOMA DOLAR DOLAR . LANGUAGE PLPGSQL PUNTOYCOMA

    LANGUAGE        shift and go to state 278


state 269

    (22) funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PUNTOYCOMA . DOLAR DOLAR LANGUAGE PLPGSQL PUNTOYCOMA

    DOLAR           shift and go to state 279


state 270

    (25) funcion -> CREATE OR REPLACE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PUNTOYCOMA DOLAR DOLAR . LANGUAGE PLPGSQL PUNTOYCOMA

    LANGUAGE        shift and go to state 280


state 271

    (26) funcion -> CREATE OR REPLACE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PUNTOYCOMA . DOLAR DOLAR LANGUAGE PLPGSQL PUNTOYCOMA

    DOLAR           shift and go to state 281


state 272

    (23) funcion -> CREATE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PUNTOYCOMA DOLAR DOLAR LANGUAGE PLPGSQL . PUNTOYCOMA

    PUNTOYCOMA      shift and go to state 282


state 273

    (24) funcion -> CREATE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PUNTOYCOMA DOLAR DOLAR . LANGUAGE PLPGSQL PUNTOYCOMA

    LANGUAGE        shift and go to state 283


state 274

    (19) funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PUNTOYCOMA DOLAR DOLAR LANGUAGE PLPGSQL PUNTOYCOMA .

    error           reduce using rule 19 (funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PUNTOYCOMA DOLAR DOLAR LANGUAGE PLPGSQL PUNTOYCOMA .)
    CREATE          reduce using rule 19 (funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PUNTOYCOMA DOLAR DOLAR LANGUAGE PLPGSQL PUNTOYCOMA .)
    SELECT          reduce using rule 19 (funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PUNTOYCOMA DOLAR DOLAR LANGUAGE PLPGSQL PUNTOYCOMA .)
    CALL            reduce using rule 19 (funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PUNTOYCOMA DOLAR DOLAR LANGUAGE PLPGSQL PUNTOYCOMA .)
    $end            reduce using rule 19 (funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PUNTOYCOMA DOLAR DOLAR LANGUAGE PLPGSQL PUNTOYCOMA .)


state 275

    (41) sentencia_if -> IF expresion THEN instrucciones_funct_list else END IF PUNTOYCOMA .

    END             reduce using rule 41 (sentencia_if -> IF expresion THEN instrucciones_funct_list else END IF PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 41 (sentencia_if -> IF expresion THEN instrucciones_funct_list else END IF PUNTOYCOMA .)
    error           reduce using rule 41 (sentencia_if -> IF expresion THEN instrucciones_funct_list else END IF PUNTOYCOMA .)
    ID              reduce using rule 41 (sentencia_if -> IF expresion THEN instrucciones_funct_list else END IF PUNTOYCOMA .)
    RAISE           reduce using rule 41 (sentencia_if -> IF expresion THEN instrucciones_funct_list else END IF PUNTOYCOMA .)
    IF              reduce using rule 41 (sentencia_if -> IF expresion THEN instrucciones_funct_list else END IF PUNTOYCOMA .)
    CASE            reduce using rule 41 (sentencia_if -> IF expresion THEN instrucciones_funct_list else END IF PUNTOYCOMA .)
    SELECT          reduce using rule 41 (sentencia_if -> IF expresion THEN instrucciones_funct_list else END IF PUNTOYCOMA .)
    CALL            reduce using rule 41 (sentencia_if -> IF expresion THEN instrucciones_funct_list else END IF PUNTOYCOMA .)
    BEGIN           reduce using rule 41 (sentencia_if -> IF expresion THEN instrucciones_funct_list else END IF PUNTOYCOMA .)
    ELSE            reduce using rule 41 (sentencia_if -> IF expresion THEN instrucciones_funct_list else END IF PUNTOYCOMA .)
    ELSEIF          reduce using rule 41 (sentencia_if -> IF expresion THEN instrucciones_funct_list else END IF PUNTOYCOMA .)
    WHEN            reduce using rule 41 (sentencia_if -> IF expresion THEN instrucciones_funct_list else END IF PUNTOYCOMA .)


state 276

    (43) else -> ELSEIF expresion THEN instrucciones_funct_list . else
    (8) instrucciones_funct_list -> instrucciones_funct_list . instrucciones_funct_sent
    (42) else -> . ELSE instrucciones_funct_list
    (43) else -> . ELSEIF expresion THEN instrucciones_funct_list else
    (44) else -> .
    (10) instrucciones_funct_sent -> . asignacion
    (11) instrucciones_funct_sent -> . declaracion
    (12) instrucciones_funct_sent -> . imprimir
    (13) instrucciones_funct_sent -> . sentencia_if
    (14) instrucciones_funct_sent -> . sentencia_switch
    (15) instrucciones_funct_sent -> . PUNTOYCOMA
    (16) instrucciones_funct_sent -> . llamada_funcion
    (17) instrucciones_funct_sent -> . empty
    (18) instrucciones_funct_sent -> . error
    (49) asignacion -> . ID DOSPUNTOS IGUAL expresion PUNTOYCOMA
    (50) declaracion -> . ID tipo DOSPUNTOS IGUAL expresion PUNTOYCOMA
    (51) declaracion -> . ID tipo PUNTOYCOMA
    (52) declaracion -> . ID tipo DEFAULT expresion PUNTOYCOMA
    (45) imprimir -> . RAISE lista_imprimir PUNTOYCOMA
    (41) sentencia_if -> . IF expresion THEN instrucciones_funct_list else END IF PUNTOYCOMA
    (36) sentencia_switch -> . CASE expresion case_list END CASE PUNTOYCOMA
    (27) llamada_funcion -> . SELECT ID PARA params PARC PUNTOYCOMA
    (28) llamada_funcion -> . CALL ID PARA params PARC PUNTOYCOMA
    (105) empty -> .

  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for PUNTOYCOMA resolved as shift
  ! shift/reduce conflict for error resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for RAISE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for SELECT resolved as shift
  ! shift/reduce conflict for CALL resolved as shift
  ! reduce/reduce conflict for END resolved using rule 44 (else -> .)
    ELSE            shift and go to state 239
    ELSEIF          shift and go to state 240
    END             reduce using rule 44 (else -> .)
    PUNTOYCOMA      shift and go to state 164
    error           shift and go to state 173
    ID              shift and go to state 162
    RAISE           shift and go to state 174
    IF              shift and go to state 175
    CASE            shift and go to state 176
    SELECT          shift and go to state 9
    CALL            shift and go to state 10

  ! ELSE            [ reduce using rule 105 (empty -> .) ]
  ! ELSEIF          [ reduce using rule 105 (empty -> .) ]
  ! PUNTOYCOMA      [ reduce using rule 105 (empty -> .) ]
  ! error           [ reduce using rule 105 (empty -> .) ]
  ! ID              [ reduce using rule 105 (empty -> .) ]
  ! RAISE           [ reduce using rule 105 (empty -> .) ]
  ! IF              [ reduce using rule 105 (empty -> .) ]
  ! CASE            [ reduce using rule 105 (empty -> .) ]
  ! SELECT          [ reduce using rule 105 (empty -> .) ]
  ! CALL            [ reduce using rule 105 (empty -> .) ]
  ! END             [ reduce using rule 105 (empty -> .) ]

    else                           shift and go to state 284
    instrucciones_funct_sent       shift and go to state 185
    asignacion                     shift and go to state 166
    declaracion                    shift and go to state 167
    imprimir                       shift and go to state 168
    sentencia_if                   shift and go to state 169
    sentencia_switch               shift and go to state 170
    llamada_funcion                shift and go to state 171
    empty                          shift and go to state 172

state 277

    (20) funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PUNTOYCOMA DOLAR DOLAR LANGUAGE . PLPGSQL PUNTOYCOMA

    PLPGSQL         shift and go to state 285


state 278

    (21) funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PUNTOYCOMA DOLAR DOLAR LANGUAGE . PLPGSQL PUNTOYCOMA

    PLPGSQL         shift and go to state 286


state 279

    (22) funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PUNTOYCOMA DOLAR . DOLAR LANGUAGE PLPGSQL PUNTOYCOMA

    DOLAR           shift and go to state 287


state 280

    (25) funcion -> CREATE OR REPLACE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PUNTOYCOMA DOLAR DOLAR LANGUAGE . PLPGSQL PUNTOYCOMA

    PLPGSQL         shift and go to state 288


state 281

    (26) funcion -> CREATE OR REPLACE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PUNTOYCOMA DOLAR . DOLAR LANGUAGE PLPGSQL PUNTOYCOMA

    DOLAR           shift and go to state 289


state 282

    (23) funcion -> CREATE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PUNTOYCOMA DOLAR DOLAR LANGUAGE PLPGSQL PUNTOYCOMA .

    error           reduce using rule 23 (funcion -> CREATE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PUNTOYCOMA DOLAR DOLAR LANGUAGE PLPGSQL PUNTOYCOMA .)
    CREATE          reduce using rule 23 (funcion -> CREATE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PUNTOYCOMA DOLAR DOLAR LANGUAGE PLPGSQL PUNTOYCOMA .)
    SELECT          reduce using rule 23 (funcion -> CREATE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PUNTOYCOMA DOLAR DOLAR LANGUAGE PLPGSQL PUNTOYCOMA .)
    CALL            reduce using rule 23 (funcion -> CREATE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PUNTOYCOMA DOLAR DOLAR LANGUAGE PLPGSQL PUNTOYCOMA .)
    $end            reduce using rule 23 (funcion -> CREATE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PUNTOYCOMA DOLAR DOLAR LANGUAGE PLPGSQL PUNTOYCOMA .)


state 283

    (24) funcion -> CREATE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PUNTOYCOMA DOLAR DOLAR LANGUAGE . PLPGSQL PUNTOYCOMA

    PLPGSQL         shift and go to state 290


state 284

    (43) else -> ELSEIF expresion THEN instrucciones_funct_list else .

    END             reduce using rule 43 (else -> ELSEIF expresion THEN instrucciones_funct_list else .)


state 285

    (20) funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PUNTOYCOMA DOLAR DOLAR LANGUAGE PLPGSQL . PUNTOYCOMA

    PUNTOYCOMA      shift and go to state 291


state 286

    (21) funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PUNTOYCOMA DOLAR DOLAR LANGUAGE PLPGSQL . PUNTOYCOMA

    PUNTOYCOMA      shift and go to state 292


state 287

    (22) funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PUNTOYCOMA DOLAR DOLAR . LANGUAGE PLPGSQL PUNTOYCOMA

    LANGUAGE        shift and go to state 293


state 288

    (25) funcion -> CREATE OR REPLACE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PUNTOYCOMA DOLAR DOLAR LANGUAGE PLPGSQL . PUNTOYCOMA

    PUNTOYCOMA      shift and go to state 294


state 289

    (26) funcion -> CREATE OR REPLACE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PUNTOYCOMA DOLAR DOLAR . LANGUAGE PLPGSQL PUNTOYCOMA

    LANGUAGE        shift and go to state 295


state 290

    (24) funcion -> CREATE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PUNTOYCOMA DOLAR DOLAR LANGUAGE PLPGSQL . PUNTOYCOMA

    PUNTOYCOMA      shift and go to state 296


state 291

    (20) funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PUNTOYCOMA DOLAR DOLAR LANGUAGE PLPGSQL PUNTOYCOMA .

    error           reduce using rule 20 (funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PUNTOYCOMA DOLAR DOLAR LANGUAGE PLPGSQL PUNTOYCOMA .)
    CREATE          reduce using rule 20 (funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PUNTOYCOMA DOLAR DOLAR LANGUAGE PLPGSQL PUNTOYCOMA .)
    SELECT          reduce using rule 20 (funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PUNTOYCOMA DOLAR DOLAR LANGUAGE PLPGSQL PUNTOYCOMA .)
    CALL            reduce using rule 20 (funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PUNTOYCOMA DOLAR DOLAR LANGUAGE PLPGSQL PUNTOYCOMA .)
    $end            reduce using rule 20 (funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PUNTOYCOMA DOLAR DOLAR LANGUAGE PLPGSQL PUNTOYCOMA .)


state 292

    (21) funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PUNTOYCOMA DOLAR DOLAR LANGUAGE PLPGSQL PUNTOYCOMA .

    error           reduce using rule 21 (funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PUNTOYCOMA DOLAR DOLAR LANGUAGE PLPGSQL PUNTOYCOMA .)
    CREATE          reduce using rule 21 (funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PUNTOYCOMA DOLAR DOLAR LANGUAGE PLPGSQL PUNTOYCOMA .)
    SELECT          reduce using rule 21 (funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PUNTOYCOMA DOLAR DOLAR LANGUAGE PLPGSQL PUNTOYCOMA .)
    CALL            reduce using rule 21 (funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PUNTOYCOMA DOLAR DOLAR LANGUAGE PLPGSQL PUNTOYCOMA .)
    $end            reduce using rule 21 (funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PUNTOYCOMA DOLAR DOLAR LANGUAGE PLPGSQL PUNTOYCOMA .)


state 293

    (22) funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PUNTOYCOMA DOLAR DOLAR LANGUAGE . PLPGSQL PUNTOYCOMA

    PLPGSQL         shift and go to state 297


state 294

    (25) funcion -> CREATE OR REPLACE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PUNTOYCOMA DOLAR DOLAR LANGUAGE PLPGSQL PUNTOYCOMA .

    error           reduce using rule 25 (funcion -> CREATE OR REPLACE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PUNTOYCOMA DOLAR DOLAR LANGUAGE PLPGSQL PUNTOYCOMA .)
    CREATE          reduce using rule 25 (funcion -> CREATE OR REPLACE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PUNTOYCOMA DOLAR DOLAR LANGUAGE PLPGSQL PUNTOYCOMA .)
    SELECT          reduce using rule 25 (funcion -> CREATE OR REPLACE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PUNTOYCOMA DOLAR DOLAR LANGUAGE PLPGSQL PUNTOYCOMA .)
    CALL            reduce using rule 25 (funcion -> CREATE OR REPLACE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PUNTOYCOMA DOLAR DOLAR LANGUAGE PLPGSQL PUNTOYCOMA .)
    $end            reduce using rule 25 (funcion -> CREATE OR REPLACE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PUNTOYCOMA DOLAR DOLAR LANGUAGE PLPGSQL PUNTOYCOMA .)


state 295

    (26) funcion -> CREATE OR REPLACE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PUNTOYCOMA DOLAR DOLAR LANGUAGE . PLPGSQL PUNTOYCOMA

    PLPGSQL         shift and go to state 298


state 296

    (24) funcion -> CREATE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PUNTOYCOMA DOLAR DOLAR LANGUAGE PLPGSQL PUNTOYCOMA .

    error           reduce using rule 24 (funcion -> CREATE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PUNTOYCOMA DOLAR DOLAR LANGUAGE PLPGSQL PUNTOYCOMA .)
    CREATE          reduce using rule 24 (funcion -> CREATE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PUNTOYCOMA DOLAR DOLAR LANGUAGE PLPGSQL PUNTOYCOMA .)
    SELECT          reduce using rule 24 (funcion -> CREATE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PUNTOYCOMA DOLAR DOLAR LANGUAGE PLPGSQL PUNTOYCOMA .)
    CALL            reduce using rule 24 (funcion -> CREATE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PUNTOYCOMA DOLAR DOLAR LANGUAGE PLPGSQL PUNTOYCOMA .)
    $end            reduce using rule 24 (funcion -> CREATE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PUNTOYCOMA DOLAR DOLAR LANGUAGE PLPGSQL PUNTOYCOMA .)


state 297

    (22) funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PUNTOYCOMA DOLAR DOLAR LANGUAGE PLPGSQL . PUNTOYCOMA

    PUNTOYCOMA      shift and go to state 299


state 298

    (26) funcion -> CREATE OR REPLACE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PUNTOYCOMA DOLAR DOLAR LANGUAGE PLPGSQL . PUNTOYCOMA

    PUNTOYCOMA      shift and go to state 300


state 299

    (22) funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PUNTOYCOMA DOLAR DOLAR LANGUAGE PLPGSQL PUNTOYCOMA .

    error           reduce using rule 22 (funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PUNTOYCOMA DOLAR DOLAR LANGUAGE PLPGSQL PUNTOYCOMA .)
    CREATE          reduce using rule 22 (funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PUNTOYCOMA DOLAR DOLAR LANGUAGE PLPGSQL PUNTOYCOMA .)
    SELECT          reduce using rule 22 (funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PUNTOYCOMA DOLAR DOLAR LANGUAGE PLPGSQL PUNTOYCOMA .)
    CALL            reduce using rule 22 (funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PUNTOYCOMA DOLAR DOLAR LANGUAGE PLPGSQL PUNTOYCOMA .)
    $end            reduce using rule 22 (funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PUNTOYCOMA DOLAR DOLAR LANGUAGE PLPGSQL PUNTOYCOMA .)


state 300

    (26) funcion -> CREATE OR REPLACE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PUNTOYCOMA DOLAR DOLAR LANGUAGE PLPGSQL PUNTOYCOMA .

    error           reduce using rule 26 (funcion -> CREATE OR REPLACE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PUNTOYCOMA DOLAR DOLAR LANGUAGE PLPGSQL PUNTOYCOMA .)
    CREATE          reduce using rule 26 (funcion -> CREATE OR REPLACE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PUNTOYCOMA DOLAR DOLAR LANGUAGE PLPGSQL PUNTOYCOMA .)
    SELECT          reduce using rule 26 (funcion -> CREATE OR REPLACE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PUNTOYCOMA DOLAR DOLAR LANGUAGE PLPGSQL PUNTOYCOMA .)
    CALL            reduce using rule 26 (funcion -> CREATE OR REPLACE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PUNTOYCOMA DOLAR DOLAR LANGUAGE PLPGSQL PUNTOYCOMA .)
    $end            reduce using rule 26 (funcion -> CREATE OR REPLACE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PUNTOYCOMA DOLAR DOLAR LANGUAGE PLPGSQL PUNTOYCOMA .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for MAYOR in state 33 resolved as shift
WARNING: shift/reduce conflict for MENOR in state 33 resolved as shift
WARNING: shift/reduce conflict for MAYORIGUAL in state 33 resolved as shift
WARNING: shift/reduce conflict for MENORIGUAL in state 33 resolved as shift
WARNING: shift/reduce conflict for IGUALIGUAL in state 33 resolved as shift
WARNING: shift/reduce conflict for NOTIGUAL in state 33 resolved as shift
WARNING: shift/reduce conflict for POR in state 33 resolved as shift
WARNING: shift/reduce conflict for DIV in state 33 resolved as shift
WARNING: shift/reduce conflict for MAS in state 33 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 33 resolved as shift
WARNING: shift/reduce conflict for MOD in state 33 resolved as shift
WARNING: shift/reduce conflict for ANDB in state 33 resolved as shift
WARNING: shift/reduce conflict for SHIFTI in state 33 resolved as shift
WARNING: shift/reduce conflict for SHIFTD in state 33 resolved as shift
WARNING: shift/reduce conflict for XORB in state 33 resolved as shift
WARNING: shift/reduce conflict for ORB in state 33 resolved as shift
WARNING: shift/reduce conflict for PUNTOYCOMA in state 156 resolved as shift
WARNING: shift/reduce conflict for error in state 156 resolved as shift
WARNING: shift/reduce conflict for ID in state 156 resolved as shift
WARNING: shift/reduce conflict for RAISE in state 156 resolved as shift
WARNING: shift/reduce conflict for IF in state 156 resolved as shift
WARNING: shift/reduce conflict for CASE in state 156 resolved as shift
WARNING: shift/reduce conflict for SELECT in state 156 resolved as shift
WARNING: shift/reduce conflict for CALL in state 156 resolved as shift
WARNING: shift/reduce conflict for PUNTOYCOMA in state 157 resolved as shift
WARNING: shift/reduce conflict for error in state 157 resolved as shift
WARNING: shift/reduce conflict for ID in state 157 resolved as shift
WARNING: shift/reduce conflict for RAISE in state 157 resolved as shift
WARNING: shift/reduce conflict for IF in state 157 resolved as shift
WARNING: shift/reduce conflict for CASE in state 157 resolved as shift
WARNING: shift/reduce conflict for SELECT in state 157 resolved as shift
WARNING: shift/reduce conflict for CALL in state 157 resolved as shift
WARNING: shift/reduce conflict for PUNTOYCOMA in state 160 resolved as shift
WARNING: shift/reduce conflict for error in state 160 resolved as shift
WARNING: shift/reduce conflict for ID in state 160 resolved as shift
WARNING: shift/reduce conflict for RAISE in state 160 resolved as shift
WARNING: shift/reduce conflict for IF in state 160 resolved as shift
WARNING: shift/reduce conflict for CASE in state 160 resolved as shift
WARNING: shift/reduce conflict for SELECT in state 160 resolved as shift
WARNING: shift/reduce conflict for CALL in state 160 resolved as shift
WARNING: shift/reduce conflict for PUNTOYCOMA in state 161 resolved as shift
WARNING: shift/reduce conflict for error in state 161 resolved as shift
WARNING: shift/reduce conflict for ID in state 161 resolved as shift
WARNING: shift/reduce conflict for RAISE in state 161 resolved as shift
WARNING: shift/reduce conflict for IF in state 161 resolved as shift
WARNING: shift/reduce conflict for CASE in state 161 resolved as shift
WARNING: shift/reduce conflict for SELECT in state 161 resolved as shift
WARNING: shift/reduce conflict for CALL in state 161 resolved as shift
WARNING: shift/reduce conflict for END in state 163 resolved as shift
WARNING: shift/reduce conflict for PUNTOYCOMA in state 163 resolved as shift
WARNING: shift/reduce conflict for error in state 163 resolved as shift
WARNING: shift/reduce conflict for ID in state 163 resolved as shift
WARNING: shift/reduce conflict for RAISE in state 163 resolved as shift
WARNING: shift/reduce conflict for IF in state 163 resolved as shift
WARNING: shift/reduce conflict for CASE in state 163 resolved as shift
WARNING: shift/reduce conflict for SELECT in state 163 resolved as shift
WARNING: shift/reduce conflict for CALL in state 163 resolved as shift
WARNING: shift/reduce conflict for BEGIN in state 177 resolved as shift
WARNING: shift/reduce conflict for PUNTOYCOMA in state 177 resolved as shift
WARNING: shift/reduce conflict for error in state 177 resolved as shift
WARNING: shift/reduce conflict for ID in state 177 resolved as shift
WARNING: shift/reduce conflict for RAISE in state 177 resolved as shift
WARNING: shift/reduce conflict for IF in state 177 resolved as shift
WARNING: shift/reduce conflict for CASE in state 177 resolved as shift
WARNING: shift/reduce conflict for SELECT in state 177 resolved as shift
WARNING: shift/reduce conflict for CALL in state 177 resolved as shift
WARNING: shift/reduce conflict for END in state 180 resolved as shift
WARNING: shift/reduce conflict for PUNTOYCOMA in state 180 resolved as shift
WARNING: shift/reduce conflict for error in state 180 resolved as shift
WARNING: shift/reduce conflict for ID in state 180 resolved as shift
WARNING: shift/reduce conflict for RAISE in state 180 resolved as shift
WARNING: shift/reduce conflict for IF in state 180 resolved as shift
WARNING: shift/reduce conflict for CASE in state 180 resolved as shift
WARNING: shift/reduce conflict for SELECT in state 180 resolved as shift
WARNING: shift/reduce conflict for CALL in state 180 resolved as shift
WARNING: shift/reduce conflict for BEGIN in state 181 resolved as shift
WARNING: shift/reduce conflict for PUNTOYCOMA in state 181 resolved as shift
WARNING: shift/reduce conflict for error in state 181 resolved as shift
WARNING: shift/reduce conflict for ID in state 181 resolved as shift
WARNING: shift/reduce conflict for RAISE in state 181 resolved as shift
WARNING: shift/reduce conflict for IF in state 181 resolved as shift
WARNING: shift/reduce conflict for CASE in state 181 resolved as shift
WARNING: shift/reduce conflict for SELECT in state 181 resolved as shift
WARNING: shift/reduce conflict for CALL in state 181 resolved as shift
WARNING: shift/reduce conflict for PUNTOYCOMA in state 191 resolved as shift
WARNING: shift/reduce conflict for error in state 191 resolved as shift
WARNING: shift/reduce conflict for ID in state 191 resolved as shift
WARNING: shift/reduce conflict for RAISE in state 191 resolved as shift
WARNING: shift/reduce conflict for IF in state 191 resolved as shift
WARNING: shift/reduce conflict for CASE in state 191 resolved as shift
WARNING: shift/reduce conflict for SELECT in state 191 resolved as shift
WARNING: shift/reduce conflict for CALL in state 191 resolved as shift
WARNING: shift/reduce conflict for PUNTOYCOMA in state 192 resolved as shift
WARNING: shift/reduce conflict for error in state 192 resolved as shift
WARNING: shift/reduce conflict for ID in state 192 resolved as shift
WARNING: shift/reduce conflict for RAISE in state 192 resolved as shift
WARNING: shift/reduce conflict for IF in state 192 resolved as shift
WARNING: shift/reduce conflict for CASE in state 192 resolved as shift
WARNING: shift/reduce conflict for SELECT in state 192 resolved as shift
WARNING: shift/reduce conflict for CALL in state 192 resolved as shift
WARNING: shift/reduce conflict for PUNTOYCOMA in state 193 resolved as shift
WARNING: shift/reduce conflict for error in state 193 resolved as shift
WARNING: shift/reduce conflict for ID in state 193 resolved as shift
WARNING: shift/reduce conflict for RAISE in state 193 resolved as shift
WARNING: shift/reduce conflict for IF in state 193 resolved as shift
WARNING: shift/reduce conflict for CASE in state 193 resolved as shift
WARNING: shift/reduce conflict for SELECT in state 193 resolved as shift
WARNING: shift/reduce conflict for CALL in state 193 resolved as shift
WARNING: shift/reduce conflict for PUNTOYCOMA in state 194 resolved as shift
WARNING: shift/reduce conflict for error in state 194 resolved as shift
WARNING: shift/reduce conflict for ID in state 194 resolved as shift
WARNING: shift/reduce conflict for RAISE in state 194 resolved as shift
WARNING: shift/reduce conflict for IF in state 194 resolved as shift
WARNING: shift/reduce conflict for CASE in state 194 resolved as shift
WARNING: shift/reduce conflict for SELECT in state 194 resolved as shift
WARNING: shift/reduce conflict for CALL in state 194 resolved as shift
WARNING: shift/reduce conflict for PUNTOYCOMA in state 195 resolved as shift
WARNING: shift/reduce conflict for error in state 195 resolved as shift
WARNING: shift/reduce conflict for ID in state 195 resolved as shift
WARNING: shift/reduce conflict for RAISE in state 195 resolved as shift
WARNING: shift/reduce conflict for IF in state 195 resolved as shift
WARNING: shift/reduce conflict for CASE in state 195 resolved as shift
WARNING: shift/reduce conflict for SELECT in state 195 resolved as shift
WARNING: shift/reduce conflict for CALL in state 195 resolved as shift
WARNING: shift/reduce conflict for PUNTOYCOMA in state 197 resolved as shift
WARNING: shift/reduce conflict for error in state 197 resolved as shift
WARNING: shift/reduce conflict for ID in state 197 resolved as shift
WARNING: shift/reduce conflict for RAISE in state 197 resolved as shift
WARNING: shift/reduce conflict for IF in state 197 resolved as shift
WARNING: shift/reduce conflict for CASE in state 197 resolved as shift
WARNING: shift/reduce conflict for SELECT in state 197 resolved as shift
WARNING: shift/reduce conflict for CALL in state 197 resolved as shift
WARNING: shift/reduce conflict for PUNTOYCOMA in state 205 resolved as shift
WARNING: shift/reduce conflict for error in state 205 resolved as shift
WARNING: shift/reduce conflict for ID in state 205 resolved as shift
WARNING: shift/reduce conflict for RAISE in state 205 resolved as shift
WARNING: shift/reduce conflict for IF in state 205 resolved as shift
WARNING: shift/reduce conflict for CASE in state 205 resolved as shift
WARNING: shift/reduce conflict for SELECT in state 205 resolved as shift
WARNING: shift/reduce conflict for CALL in state 205 resolved as shift
WARNING: shift/reduce conflict for PUNTOYCOMA in state 209 resolved as shift
WARNING: shift/reduce conflict for error in state 209 resolved as shift
WARNING: shift/reduce conflict for ID in state 209 resolved as shift
WARNING: shift/reduce conflict for RAISE in state 209 resolved as shift
WARNING: shift/reduce conflict for IF in state 209 resolved as shift
WARNING: shift/reduce conflict for CASE in state 209 resolved as shift
WARNING: shift/reduce conflict for SELECT in state 209 resolved as shift
WARNING: shift/reduce conflict for CALL in state 209 resolved as shift
WARNING: shift/reduce conflict for END in state 210 resolved as shift
WARNING: shift/reduce conflict for PUNTOYCOMA in state 210 resolved as shift
WARNING: shift/reduce conflict for error in state 210 resolved as shift
WARNING: shift/reduce conflict for ID in state 210 resolved as shift
WARNING: shift/reduce conflict for RAISE in state 210 resolved as shift
WARNING: shift/reduce conflict for IF in state 210 resolved as shift
WARNING: shift/reduce conflict for CASE in state 210 resolved as shift
WARNING: shift/reduce conflict for SELECT in state 210 resolved as shift
WARNING: shift/reduce conflict for CALL in state 210 resolved as shift
WARNING: shift/reduce conflict for END in state 211 resolved as shift
WARNING: shift/reduce conflict for PUNTOYCOMA in state 211 resolved as shift
WARNING: shift/reduce conflict for error in state 211 resolved as shift
WARNING: shift/reduce conflict for ID in state 211 resolved as shift
WARNING: shift/reduce conflict for RAISE in state 211 resolved as shift
WARNING: shift/reduce conflict for IF in state 211 resolved as shift
WARNING: shift/reduce conflict for CASE in state 211 resolved as shift
WARNING: shift/reduce conflict for SELECT in state 211 resolved as shift
WARNING: shift/reduce conflict for CALL in state 211 resolved as shift
WARNING: shift/reduce conflict for BEGIN in state 212 resolved as shift
WARNING: shift/reduce conflict for PUNTOYCOMA in state 212 resolved as shift
WARNING: shift/reduce conflict for error in state 212 resolved as shift
WARNING: shift/reduce conflict for ID in state 212 resolved as shift
WARNING: shift/reduce conflict for RAISE in state 212 resolved as shift
WARNING: shift/reduce conflict for IF in state 212 resolved as shift
WARNING: shift/reduce conflict for CASE in state 212 resolved as shift
WARNING: shift/reduce conflict for SELECT in state 212 resolved as shift
WARNING: shift/reduce conflict for CALL in state 212 resolved as shift
WARNING: shift/reduce conflict for END in state 213 resolved as shift
WARNING: shift/reduce conflict for PUNTOYCOMA in state 213 resolved as shift
WARNING: shift/reduce conflict for error in state 213 resolved as shift
WARNING: shift/reduce conflict for ID in state 213 resolved as shift
WARNING: shift/reduce conflict for RAISE in state 213 resolved as shift
WARNING: shift/reduce conflict for IF in state 213 resolved as shift
WARNING: shift/reduce conflict for CASE in state 213 resolved as shift
WARNING: shift/reduce conflict for SELECT in state 213 resolved as shift
WARNING: shift/reduce conflict for CALL in state 213 resolved as shift
WARNING: shift/reduce conflict for BEGIN in state 214 resolved as shift
WARNING: shift/reduce conflict for PUNTOYCOMA in state 214 resolved as shift
WARNING: shift/reduce conflict for error in state 214 resolved as shift
WARNING: shift/reduce conflict for ID in state 214 resolved as shift
WARNING: shift/reduce conflict for RAISE in state 214 resolved as shift
WARNING: shift/reduce conflict for IF in state 214 resolved as shift
WARNING: shift/reduce conflict for CASE in state 214 resolved as shift
WARNING: shift/reduce conflict for SELECT in state 214 resolved as shift
WARNING: shift/reduce conflict for CALL in state 214 resolved as shift
WARNING: shift/reduce conflict for END in state 216 resolved as shift
WARNING: shift/reduce conflict for PUNTOYCOMA in state 216 resolved as shift
WARNING: shift/reduce conflict for error in state 216 resolved as shift
WARNING: shift/reduce conflict for ID in state 216 resolved as shift
WARNING: shift/reduce conflict for RAISE in state 216 resolved as shift
WARNING: shift/reduce conflict for IF in state 216 resolved as shift
WARNING: shift/reduce conflict for CASE in state 216 resolved as shift
WARNING: shift/reduce conflict for SELECT in state 216 resolved as shift
WARNING: shift/reduce conflict for CALL in state 216 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 222 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 222 resolved as shift
WARNING: shift/reduce conflict for PUNTOYCOMA in state 222 resolved as shift
WARNING: shift/reduce conflict for error in state 222 resolved as shift
WARNING: shift/reduce conflict for ID in state 222 resolved as shift
WARNING: shift/reduce conflict for RAISE in state 222 resolved as shift
WARNING: shift/reduce conflict for IF in state 222 resolved as shift
WARNING: shift/reduce conflict for CASE in state 222 resolved as shift
WARNING: shift/reduce conflict for SELECT in state 222 resolved as shift
WARNING: shift/reduce conflict for CALL in state 222 resolved as shift
WARNING: shift/reduce conflict for PUNTOYCOMA in state 226 resolved as shift
WARNING: shift/reduce conflict for error in state 226 resolved as shift
WARNING: shift/reduce conflict for ID in state 226 resolved as shift
WARNING: shift/reduce conflict for RAISE in state 226 resolved as shift
WARNING: shift/reduce conflict for IF in state 226 resolved as shift
WARNING: shift/reduce conflict for CASE in state 226 resolved as shift
WARNING: shift/reduce conflict for SELECT in state 226 resolved as shift
WARNING: shift/reduce conflict for CALL in state 226 resolved as shift
WARNING: shift/reduce conflict for PUNTOYCOMA in state 229 resolved as shift
WARNING: shift/reduce conflict for error in state 229 resolved as shift
WARNING: shift/reduce conflict for ID in state 229 resolved as shift
WARNING: shift/reduce conflict for RAISE in state 229 resolved as shift
WARNING: shift/reduce conflict for IF in state 229 resolved as shift
WARNING: shift/reduce conflict for CASE in state 229 resolved as shift
WARNING: shift/reduce conflict for SELECT in state 229 resolved as shift
WARNING: shift/reduce conflict for CALL in state 229 resolved as shift
WARNING: shift/reduce conflict for PUNTOYCOMA in state 231 resolved as shift
WARNING: shift/reduce conflict for error in state 231 resolved as shift
WARNING: shift/reduce conflict for ID in state 231 resolved as shift
WARNING: shift/reduce conflict for RAISE in state 231 resolved as shift
WARNING: shift/reduce conflict for IF in state 231 resolved as shift
WARNING: shift/reduce conflict for CASE in state 231 resolved as shift
WARNING: shift/reduce conflict for SELECT in state 231 resolved as shift
WARNING: shift/reduce conflict for CALL in state 231 resolved as shift
WARNING: shift/reduce conflict for PUNTOYCOMA in state 239 resolved as shift
WARNING: shift/reduce conflict for error in state 239 resolved as shift
WARNING: shift/reduce conflict for ID in state 239 resolved as shift
WARNING: shift/reduce conflict for RAISE in state 239 resolved as shift
WARNING: shift/reduce conflict for IF in state 239 resolved as shift
WARNING: shift/reduce conflict for CASE in state 239 resolved as shift
WARNING: shift/reduce conflict for SELECT in state 239 resolved as shift
WARNING: shift/reduce conflict for CALL in state 239 resolved as shift
WARNING: shift/reduce conflict for PUNTOYCOMA in state 242 resolved as shift
WARNING: shift/reduce conflict for error in state 242 resolved as shift
WARNING: shift/reduce conflict for ID in state 242 resolved as shift
WARNING: shift/reduce conflict for RAISE in state 242 resolved as shift
WARNING: shift/reduce conflict for IF in state 242 resolved as shift
WARNING: shift/reduce conflict for CASE in state 242 resolved as shift
WARNING: shift/reduce conflict for SELECT in state 242 resolved as shift
WARNING: shift/reduce conflict for CALL in state 242 resolved as shift
WARNING: shift/reduce conflict for END in state 245 resolved as shift
WARNING: shift/reduce conflict for PUNTOYCOMA in state 245 resolved as shift
WARNING: shift/reduce conflict for error in state 245 resolved as shift
WARNING: shift/reduce conflict for ID in state 245 resolved as shift
WARNING: shift/reduce conflict for RAISE in state 245 resolved as shift
WARNING: shift/reduce conflict for IF in state 245 resolved as shift
WARNING: shift/reduce conflict for CASE in state 245 resolved as shift
WARNING: shift/reduce conflict for SELECT in state 245 resolved as shift
WARNING: shift/reduce conflict for CALL in state 245 resolved as shift
WARNING: shift/reduce conflict for END in state 247 resolved as shift
WARNING: shift/reduce conflict for PUNTOYCOMA in state 247 resolved as shift
WARNING: shift/reduce conflict for error in state 247 resolved as shift
WARNING: shift/reduce conflict for ID in state 247 resolved as shift
WARNING: shift/reduce conflict for RAISE in state 247 resolved as shift
WARNING: shift/reduce conflict for IF in state 247 resolved as shift
WARNING: shift/reduce conflict for CASE in state 247 resolved as shift
WARNING: shift/reduce conflict for SELECT in state 247 resolved as shift
WARNING: shift/reduce conflict for CALL in state 247 resolved as shift
WARNING: shift/reduce conflict for PUNTOYCOMA in state 253 resolved as shift
WARNING: shift/reduce conflict for error in state 253 resolved as shift
WARNING: shift/reduce conflict for ID in state 253 resolved as shift
WARNING: shift/reduce conflict for RAISE in state 253 resolved as shift
WARNING: shift/reduce conflict for IF in state 253 resolved as shift
WARNING: shift/reduce conflict for CASE in state 253 resolved as shift
WARNING: shift/reduce conflict for SELECT in state 253 resolved as shift
WARNING: shift/reduce conflict for CALL in state 253 resolved as shift
WARNING: shift/reduce conflict for PUNTOYCOMA in state 256 resolved as shift
WARNING: shift/reduce conflict for error in state 256 resolved as shift
WARNING: shift/reduce conflict for ID in state 256 resolved as shift
WARNING: shift/reduce conflict for RAISE in state 256 resolved as shift
WARNING: shift/reduce conflict for IF in state 256 resolved as shift
WARNING: shift/reduce conflict for CASE in state 256 resolved as shift
WARNING: shift/reduce conflict for SELECT in state 256 resolved as shift
WARNING: shift/reduce conflict for CALL in state 256 resolved as shift
WARNING: shift/reduce conflict for PUNTOYCOMA in state 266 resolved as shift
WARNING: shift/reduce conflict for error in state 266 resolved as shift
WARNING: shift/reduce conflict for ID in state 266 resolved as shift
WARNING: shift/reduce conflict for RAISE in state 266 resolved as shift
WARNING: shift/reduce conflict for IF in state 266 resolved as shift
WARNING: shift/reduce conflict for CASE in state 266 resolved as shift
WARNING: shift/reduce conflict for SELECT in state 266 resolved as shift
WARNING: shift/reduce conflict for CALL in state 266 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 276 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 276 resolved as shift
WARNING: shift/reduce conflict for PUNTOYCOMA in state 276 resolved as shift
WARNING: shift/reduce conflict for error in state 276 resolved as shift
WARNING: shift/reduce conflict for ID in state 276 resolved as shift
WARNING: shift/reduce conflict for RAISE in state 276 resolved as shift
WARNING: shift/reduce conflict for IF in state 276 resolved as shift
WARNING: shift/reduce conflict for CASE in state 276 resolved as shift
WARNING: shift/reduce conflict for SELECT in state 276 resolved as shift
WARNING: shift/reduce conflict for CALL in state 276 resolved as shift
WARNING: reduce/reduce conflict in state 222 resolved using rule (else -> <empty>)
WARNING: rejected rule (empty -> <empty>) in state 222
WARNING: reduce/reduce conflict in state 226 resolved using rule (case -> ELSE instrucciones_funct_list)
WARNING: rejected rule (empty -> <empty>) in state 226
WARNING: reduce/reduce conflict in state 253 resolved using rule (else -> ELSE instrucciones_funct_list)
WARNING: rejected rule (empty -> <empty>) in state 253
WARNING: reduce/reduce conflict in state 256 resolved using rule (case -> WHEN expresion THEN instrucciones_funct_list)
WARNING: rejected rule (empty -> <empty>) in state 256
WARNING: reduce/reduce conflict in state 276 resolved using rule (else -> <empty>)
WARNING: rejected rule (empty -> <empty>) in state 276
