
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftORleftANDleftMAYORIGUALQUEMENORIGUALQUEMAYORQUEMENORQUEleftSIGNO_MASSIGNO_MENOSleftSIGNO_PORSIGNO_DIVISIONleftSIGNO_POTENCIASIGNO_MODULOACOS ACOSD ACOSH ACTION ADD ALL ALTER AND ANY AS ASC ASIN ASIND ASINH ATAN ATAN2 ATAN2D ATAND ATANH AVG BETWEEN BIGINT BOOLEAN BY CADENA CASCADE CASE CBRT CEIL CEILING CHAR CHARACTER CHECK COLUMN COMA COMILLA CONSTRAINT CONVERT CORCHETEABRE CORCHETECIERRE COS COSD COSH COT COTD COUNT CREATE CURRENT_DATE CURRENT_TIME DATABASE DATABASES DATE DATE_PART DAY DECIMAL DECODE DEFAULT DEGREES DELETE DESC DISTINCT DIV DOBLE DOBLE_DOSPUNTOS DROP ELSE ENCODE END ENUM EXCEPT EXIST EXISTS EXP EXTRACT FACTORIAL FALSE FECHA_HORA FIRST FLOOR FOREIGN FROM FULL F_HORA GCD GET_BYTE GREATEST GROUP HAVING HOUR ID IF ILIKE IN IN INNER INSERT INTEGER INTERSECT INTERVAL INTO IS ISNULL JOIN KEY LAST LEAST LEFT LENGTH LIKE LIMIT LLAVEABRE LLAVECIERRE LOG MAX MAYORIGUALQUE MAYORQUE MENORIGUALQUE MENORQUE MIN MINUTE MOD MOD5 MODE MONEY MONTH NATURAL NO NOT NOTNULL NOW NULL NULLS NUMERIC NUMERO NUM_DECIMAL OFFSET ON OR ORDER OUTER OWNER PARABRE PARCIERRE PI POWER PRECISION PRIMARY PUNTO PUNTO_COMA REAL REFERENCES RENAME REPLACE RETURNING RIGTH ROUND SECOND SELECT SET SET_BYTE SHA256 SHOW SIGNO_AND SIGNO_DIVISION SIGNO_DOBLE_MAYORQUE SIGNO_DOBLE_MENORQUE SIGNO_DOBLE_PIPE SIGNO_IGUAL SIGNO_MAS SIGNO_MENOS SIGNO_MODULO SIGNO_NUMERAL SIGNO_PIPE SIGNO_POR SIGNO_POTENCIA SIGNO_VIRGULILLA SIMILAR SIN SIND SINH SMALLINT SOME SUBSTR SUBSTRING SUM SYMMETRIC TABLE TAN TAND TANH TEXT THEN TIME TIMESTAMP TO TRIM TRUE TYPE UNION UNIQUE UNKNOWN UPDATE USE USING VALUES VARCHAR VARYING WHEN WHERE YEARinicio : instrucciones instrucciones : instrucciones instruccion \n                     | instruccion instruccion : ins_use\n                   | ins_show\n                   | ins_alter\n                   | ins_drop\n                   | ins_create\n                   | ins_insert\n                   | ins_selectins_use : USE IDins_show : SHOW DATABASESins_create : CREATE tipo_createtipo_create : ins_replace DATABASE if_exist ID create_opciones puntocoma\n                   | TABLE ID PARABRE definicion_columna PARCIERRE PUNTO_COMAdefinicion_columna : definicion_columna COMA columna \n                          | columna columna : ID tipo_dato definicion_valor_defecto ins_constrainttipo_dato : VARCHAR\n                 | INTEGER\n                 | CHAR\n                 | TEXT\n                 | BIGINT\n                 | DECIMAL\n                 | NUMERIC\n                 | REAL definicion_valor_defecto : DEFAULT tipo_default \n                                | ins_constraint : CONSTRAINT ID restriccion_columna \n                                | restriccion_columna : NOT NULL\n                           | NULL\n                           | PRIMARY KEY\n                           | UNIQUE\n                           | FOREIGN KEY ID PARABRE ID PARCIERRE ins_referencesins_references : ON DELETE accion\n                      | ON UPDATE accionaccion : CASCADE\n              | SET NULL\n              | SET DEFAULT\n              | NO ACTIONtipo_default : NUMERIC\n                    | DECIMAL\n                    | NULLins_replace : OR REPLACE puntocoma\n               | if_exist :  IF NOT EXIST puntocoma\n                |  IF EXIST\n                | create_opciones : OWNER SIGNO_IGUAL ID\n                       | MODE SIGNO_IGUAL NUMEROpuntocoma : PUNTO_COMA\n                 | ins_alter : ALTER tipo_alter tipo_alter : DATABASE ID alter_database PUNTO_COMA\n                  | TABLE ID alteracion_tabla PUNTO_COMAalteracion_tabla : alteracion_tabla COMA alterar_tabla\n                        | alterar_tablaalterar_tabla : ADD COLUMN columna\n                     | ALTER COLUMN columna\n                     | DROP COLUMN ID\n                     | DROP CONSTRAINT IDalter_database : RENAME TO ID\n                      | OWNER TO IDins_drop : DROP tipo_droptipo_drop : DATABASE if_exist ID PUNTO_COMA\n                 | TABLE ID PUNTO_COMAins_insert : INSERT INTO ID VALUES PARABRE list_vls PARCIERRE PUNTO_COMA list_vls : list_vls COMA val_value\n                | val_value val_value : CADENA\n                |   NUMERO\n                |   NUM_DECIMAL\n                |   FECHA_HORA\n                |   TRUE\n                |   FALSE ins_select : ins_select UNION option_all ins_select\n                    |    ins_select INTERSECT option_all ins_select\n                    |    ins_select EXCEPT option_all ins_select\n                    |   SELECT arg_distict colum_list FROM table_list arg_where option_all   :   ALL\n                    |    arg_distict :    DISTINCT\n                    |    colum_list   : colum_list COMA columns as_id\n                        |   columns as_id\n                        |   SIGNO_POR columns   : ID dot_table\n                    |   aggregates\n                    |   functions dot_table    :   PUNTO ID\n                    |    as_id    :   AS ID\n                    |   AS CADENA\n                    |   CADENA\n                    |   aggregates   :   COUNT PARABRE param PARCIERRE\n                    |   SUM PARABRE param PARCIERRE\n                    |   AVG PARABRE param PARCIERRE\n                    |   MAX PARABRE param PARCIERRE\n                    |   MIN PARABRE param PARCIERRE functions    :   math\n                    |   trig\n                    |   string_func\n                    |   time_func\n                     math :   AVG PARABRE NUMERO PARCIERRE\n                |   CBRT PARABRE NUMERO PARCIERRE\n                |   CEIL PARABRE NUMERO PARCIERRE\n                |   CEILING PARABRE NUMERO PARCIERRE\n                |   DEGREES PARABRE NUMERO PARCIERRE\n                |   DIV PARABRE NUMERO COMA NUMERO PARCIERRE\n                |   EXP PARABRE NUMERO PARCIERRE\n                |   FACTORIAL PARABRE NUMERO PARCIERRE\n                |   FLOOR PARABRE NUMERO PARCIERRE\n                |   GCD PARABRE NUMERO COMA NUMERO PARCIERRE\n                |   IN PARABRE NUMERO PARCIERRE\n                |   LOG PARABRE NUMERO PARCIERRE\n                |   MOD PARABRE NUMERO COMA NUMERO PARCIERRE\n                |   PI PARABRE  PARCIERRE\n                |   POWER PARABRE NUMERO COMA NUMERO PARCIERRE \n                |   ROUND PARABRE NUMERO PARCIERRE trig :   ACOS PARABRE NUMERO PARCIERRE\n                |   ACOSD PARABRE NUMERO PARCIERRE\n                |   ASIN PARABRE NUMERO PARCIERRE\n                |   ASIND PARABRE NUMERO PARCIERRE\n                |   ATAN PARABRE NUMERO PARCIERRE\n                |   ATAND PARABRE NUMERO PARCIERRE\n                |   ATAN2 PARABRE NUMERO COMA NUMERO PARCIERRE\n                |   ATAN2D PARABRE NUMERO COMA NUMERO PARCIERRE\n                |   COS PARABRE NUMERO PARCIERRE\n                |   COSD PARABRE NUMERO PARCIERRE\n                |   COT PARABRE NUMERO PARCIERRE\n                |   COTD PARABRE NUMERO PARCIERRE\n                |   SIN PARABRE NUMERO PARCIERRE\n                |   SIND PARABRE NUMERO PARCIERRE\n                |   TAN PARABRE NUMERO PARCIERRE\n                |   TAND PARABRE NUMERO PARCIERRE\n                |   SINH PARABRE NUMERO PARCIERRE\n                |   COSH PARABRE NUMERO PARCIERRE\n                |   TANH PARABRE NUMERO PARCIERRE\n                |   ASINH PARABRE NUMERO PARCIERRE\n                |   ACOSH PARABRE NUMERO PARCIERRE\n                |   ATANH PARABRE NUMERO PARCIERRE  string_func  :   LENGTH PARABRE s_param PARCIERRE\n                    |   SUBSTRING PARABRE s_param COMA NUMERO COMA NUMERO PARCIERRE\n                    |   SUBSTRING PARABRE s_param COMA s_param COMA CADENA PARCIERRE\n                    |   TRIM PARABRE s_param PARCIERRE\n                    |   GET_BYTE PARABRE s_param COMA NUMERO PARCIERRE\n                    |   MOD5 PARABRE s_param PARCIERRE\n                    |   SET_BYTE PARABRE COMA NUMERO COMA NUMERO s_param PARCIERRE\n                    |   SHA256 PARABRE s_param PARCIERRE\n                    |   SUBSTR PARABRE s_param COMA NUMERO COMA NUMERO PARCIERRE\n                    |   CONVERT PARABRE tipo_dato COMA ID dot_table PARCIERRE\n                    |   ENCODE PARABRE s_param COMA s_param PARCIERRE\n                    |   DECODE PARABRE s_param COMA s_param PARCIERRE s_param  :   s_param string_op CADENA\n                |   CADENA string_op    :   SIGNO_PIPE\n                    |   SIGNO_DOBLE_PIPE\n                    |   SIGNO_AND\n                    |   SIGNO_VIRGULILLA\n                    |   SIGNO_NUMERAL\n                    |   SIGNO_DOBLE_MENORQUE\n                    |   SIGNO_DOBLE_MAYORQUEtime_func    :   DATE_PART PARABRE COMILLA h_m_s COMILLA COMA INTERVAL F_HORA PARCIERRE \n                    |   NOW PARABRE PARCIERRE\n                    |   EXTRACT PARABRE reserv_time  FROM TIMESTAMP  PARCIERRE\n                    |   CURRENT_TIME\n                    |   CURRENT_DATEreserv_time  :   h_m_s \n                    |   YEAR\n                    |   MONTH\n                    |   DAYh_m_s    :   HOUR\n                    |   MINUTE\n                    |   SECOND param    :   ID dot_table\n                |   SIGNO_POR table_list   :   table_list COMA ID\n                    |   ID arg_where    :   WHERE list_exp\n                    |    list_exp    :    ID\n                    |    '
    
_lr_action_items = {'USE':([0,2,3,4,5,6,7,8,9,10,18,22,23,24,27,30,118,119,120,132,136,201,204,210,217,218,306,320,322,388,393,397,398,399,417,418,425,],[11,11,-3,-4,-5,-6,-7,-8,-9,-10,-2,-11,-12,-54,-65,-13,-77,-78,-79,-67,-52,-55,-56,-66,-182,-180,-53,-80,-184,-14,-15,-179,-181,-183,-50,-51,-68,]),'SHOW':([0,2,3,4,5,6,7,8,9,10,18,22,23,24,27,30,118,119,120,132,136,201,204,210,217,218,306,320,322,388,393,397,398,399,417,418,425,],[12,12,-3,-4,-5,-6,-7,-8,-9,-10,-2,-11,-12,-54,-65,-13,-77,-78,-79,-67,-52,-55,-56,-66,-182,-180,-53,-80,-184,-14,-15,-179,-181,-183,-50,-51,-68,]),'ALTER':([0,2,3,4,5,6,7,8,9,10,18,22,23,24,27,30,42,118,119,120,132,136,201,204,205,210,217,218,306,320,322,388,393,397,398,399,417,418,425,],[13,13,-3,-4,-5,-6,-7,-8,-9,-10,-2,-11,-12,-54,-65,-13,127,-77,-78,-79,-67,-52,-55,-56,127,-66,-182,-180,-53,-80,-184,-14,-15,-179,-181,-183,-50,-51,-68,]),'DROP':([0,2,3,4,5,6,7,8,9,10,18,22,23,24,27,30,42,118,119,120,132,136,201,204,205,210,217,218,306,320,322,388,393,397,398,399,417,418,425,],[14,14,-3,-4,-5,-6,-7,-8,-9,-10,-2,-11,-12,-54,-65,-13,128,-77,-78,-79,-67,-52,-55,-56,128,-66,-182,-180,-53,-80,-184,-14,-15,-179,-181,-183,-50,-51,-68,]),'CREATE':([0,2,3,4,5,6,7,8,9,10,18,22,23,24,27,30,118,119,120,132,136,201,204,210,217,218,306,320,322,388,393,397,398,399,417,418,425,],[15,15,-3,-4,-5,-6,-7,-8,-9,-10,-2,-11,-12,-54,-65,-13,-77,-78,-79,-67,-52,-55,-56,-66,-182,-180,-53,-80,-184,-14,-15,-179,-181,-183,-50,-51,-68,]),'INSERT':([0,2,3,4,5,6,7,8,9,10,18,22,23,24,27,30,118,119,120,132,136,201,204,210,217,218,306,320,322,388,393,397,398,399,417,418,425,],[16,16,-3,-4,-5,-6,-7,-8,-9,-10,-2,-11,-12,-54,-65,-13,-77,-78,-79,-67,-52,-55,-56,-66,-182,-180,-53,-80,-184,-14,-15,-179,-181,-183,-50,-51,-68,]),'SELECT':([0,2,3,4,5,6,7,8,9,10,18,19,20,21,22,23,24,27,30,37,38,39,40,118,119,120,132,136,201,204,210,217,218,306,320,322,388,393,397,398,399,417,418,425,],[17,17,-3,-4,-5,-6,-7,-8,-9,-10,-2,-82,-82,-82,-11,-12,-54,-65,-13,17,-81,17,17,-77,-78,-79,-67,-52,-55,-56,-66,-182,-180,-53,-80,-184,-14,-15,-179,-181,-183,-50,-51,-68,]),'$end':([1,2,3,4,5,6,7,8,9,10,18,22,23,24,27,30,118,119,120,132,136,201,204,210,217,218,306,320,322,388,393,397,398,399,417,418,425,],[0,-1,-3,-4,-5,-6,-7,-8,-9,-10,-2,-11,-12,-54,-65,-13,-77,-78,-79,-67,-52,-55,-56,-66,-182,-180,-53,-80,-184,-14,-15,-179,-181,-183,-50,-51,-68,]),'UNION':([10,118,119,120,217,218,320,322,397,398,399,],[19,19,19,19,-182,-180,-80,-184,-179,-181,-183,]),'INTERSECT':([10,118,119,120,217,218,320,322,397,398,399,],[20,20,20,20,-182,-180,-80,-184,-179,-181,-183,]),'EXCEPT':([10,118,119,120,217,218,320,322,397,398,399,],[21,21,21,21,-182,-180,-80,-184,-179,-181,-183,]),'ID':([11,17,25,26,28,29,32,34,35,36,43,46,131,133,134,136,138,139,141,144,145,146,147,148,149,202,203,206,207,208,209,211,305,311,321,322,383,389,420,463,466,],[22,-84,41,42,-49,45,47,49,53,-83,129,-49,-48,212,213,-52,218,53,220,222,224,224,224,224,224,298,299,213,213,303,304,-53,-47,213,397,399,412,417,443,465,467,]),'DATABASES':([12,],[23,]),'DATABASE':([13,14,15,31,48,135,136,],[25,28,-46,46,-53,-45,-52,]),'TABLE':([13,14,15,],[26,29,32,]),'OR':([15,],[33,]),'INTO':([16,],[34,]),'DISTINCT':([17,],[36,]),'SIGNO_POR':([17,35,36,145,146,147,148,149,],[-84,52,-83,225,225,225,225,225,]),'COUNT':([17,35,36,139,],[-84,56,-83,56,]),'SUM':([17,35,36,139,],[-84,57,-83,57,]),'AVG':([17,35,36,139,],[-84,58,-83,58,]),'MAX':([17,35,36,139,],[-84,59,-83,59,]),'MIN':([17,35,36,139,],[-84,60,-83,60,]),'CBRT':([17,35,36,139,],[-84,65,-83,65,]),'CEIL':([17,35,36,139,],[-84,66,-83,66,]),'CEILING':([17,35,36,139,],[-84,67,-83,67,]),'DEGREES':([17,35,36,139,],[-84,68,-83,68,]),'DIV':([17,35,36,139,],[-84,69,-83,69,]),'EXP':([17,35,36,139,],[-84,70,-83,70,]),'FACTORIAL':([17,35,36,139,],[-84,71,-83,71,]),'FLOOR':([17,35,36,139,],[-84,72,-83,72,]),'GCD':([17,35,36,139,],[-84,73,-83,73,]),'IN':([17,35,36,139,],[-84,74,-83,74,]),'LOG':([17,35,36,139,],[-84,75,-83,75,]),'MOD':([17,35,36,139,],[-84,76,-83,76,]),'PI':([17,35,36,139,],[-84,77,-83,77,]),'POWER':([17,35,36,139,],[-84,78,-83,78,]),'ROUND':([17,35,36,139,],[-84,79,-83,79,]),'ACOS':([17,35,36,139,],[-84,80,-83,80,]),'ACOSD':([17,35,36,139,],[-84,81,-83,81,]),'ASIN':([17,35,36,139,],[-84,82,-83,82,]),'ASIND':([17,35,36,139,],[-84,83,-83,83,]),'ATAN':([17,35,36,139,],[-84,84,-83,84,]),'ATAND':([17,35,36,139,],[-84,85,-83,85,]),'ATAN2':([17,35,36,139,],[-84,86,-83,86,]),'ATAN2D':([17,35,36,139,],[-84,87,-83,87,]),'COS':([17,35,36,139,],[-84,88,-83,88,]),'COSD':([17,35,36,139,],[-84,89,-83,89,]),'COT':([17,35,36,139,],[-84,90,-83,90,]),'COTD':([17,35,36,139,],[-84,91,-83,91,]),'SIN':([17,35,36,139,],[-84,92,-83,92,]),'SIND':([17,35,36,139,],[-84,93,-83,93,]),'TAN':([17,35,36,139,],[-84,94,-83,94,]),'TAND':([17,35,36,139,],[-84,95,-83,95,]),'SINH':([17,35,36,139,],[-84,96,-83,96,]),'COSH':([17,35,36,139,],[-84,97,-83,97,]),'TANH':([17,35,36,139,],[-84,98,-83,98,]),'ASINH':([17,35,36,139,],[-84,99,-83,99,]),'ACOSH':([17,35,36,139,],[-84,100,-83,100,]),'ATANH':([17,35,36,139,],[-84,101,-83,101,]),'LENGTH':([17,35,36,139,],[-84,102,-83,102,]),'SUBSTRING':([17,35,36,139,],[-84,103,-83,103,]),'TRIM':([17,35,36,139,],[-84,104,-83,104,]),'GET_BYTE':([17,35,36,139,],[-84,105,-83,105,]),'MOD5':([17,35,36,139,],[-84,106,-83,106,]),'SET_BYTE':([17,35,36,139,],[-84,107,-83,107,]),'SHA256':([17,35,36,139,],[-84,108,-83,108,]),'SUBSTR':([17,35,36,139,],[-84,109,-83,109,]),'CONVERT':([17,35,36,139,],[-84,110,-83,110,]),'ENCODE':([17,35,36,139,],[-84,111,-83,111,]),'DECODE':([17,35,36,139,],[-84,112,-83,112,]),'DATE_PART':([17,35,36,139,],[-84,113,-83,113,]),'NOW':([17,35,36,139,],[-84,114,-83,114,]),'EXTRACT':([17,35,36,139,],[-84,115,-83,115,]),'CURRENT_TIME':([17,35,36,139,],[-84,116,-83,116,]),'CURRENT_DATE':([17,35,36,139,],[-84,117,-83,117,]),'ALL':([19,20,21,],[38,38,38,]),'IF':([28,46,],[44,44,]),'REPLACE':([33,],[48,]),'RENAME':([41,],[122,]),'OWNER':([41,212,],[123,307,]),'ADD':([42,205,],[126,126,]),'NOT':([44,443,],[130,451,]),'EXIST':([44,130,],[131,211,]),'PUNTO_COMA':([45,48,121,124,125,129,211,278,279,280,281,282,283,284,285,298,299,300,301,302,303,304,306,309,310,391,395,417,418,419,421,422,423,424,450,452,454,461,462,469,473,474,477,478,479,480,],[132,136,201,204,-58,210,136,-19,-20,-21,-22,-23,-24,-25,-26,-63,-64,-57,-59,-60,-61,-62,136,-28,393,-30,425,-50,-51,-18,-27,-42,-43,-44,-29,-32,-34,-31,-33,-35,-36,-38,-37,-39,-40,-41,]),'PARABRE':([47,56,57,58,59,60,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,137,465,],[134,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,216,466,]),'VALUES':([49,],[137,]),'FROM':([50,51,52,53,54,55,61,62,63,64,116,117,140,142,143,219,220,221,222,243,289,290,291,292,293,294,295,296,297,323,324,326,327,328,329,330,331,332,333,334,336,337,338,340,341,344,345,346,347,348,349,350,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,377,379,381,427,428,429,430,431,432,435,439,440,442,448,456,457,458,459,464,],[138,-96,-87,-92,-89,-90,-102,-103,-104,-105,-168,-169,-86,-95,-88,-96,-93,-94,-91,-119,-166,387,-170,-171,-172,-173,-174,-175,-176,-85,-97,-98,-99,-106,-100,-101,-107,-108,-109,-110,-112,-113,-114,-116,-117,-121,-122,-123,-124,-125,-126,-127,-130,-131,-132,-133,-134,-135,-136,-137,-138,-139,-140,-141,-142,-143,-144,-147,-149,-151,-111,-115,-118,-120,-128,-129,-148,-154,-155,-167,-153,-146,-145,-150,-152,-165,]),'COMA':([50,51,52,53,54,55,61,62,63,64,116,117,124,125,140,142,143,192,214,215,217,218,219,220,221,222,235,239,242,243,244,252,253,269,270,272,276,277,278,279,280,281,282,283,284,285,286,287,289,300,301,302,303,304,309,312,313,314,315,316,317,318,319,323,324,326,327,328,329,330,331,332,333,334,336,337,338,340,341,344,345,346,347,348,349,350,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,377,379,380,381,391,394,397,406,407,408,411,415,419,421,422,423,424,426,427,428,429,430,431,432,435,439,440,442,448,450,452,454,456,457,458,459,461,462,464,469,473,474,477,478,479,480,],[139,-96,-87,-92,-89,-90,-102,-103,-104,-105,-168,-169,205,-58,-86,-95,-88,274,311,-17,321,-180,-96,-93,-94,-91,335,339,342,-119,343,351,352,-157,376,378,382,383,-19,-20,-21,-22,-23,-24,-25,-26,384,385,-166,-57,-59,-60,-61,-62,-28,396,-70,-71,-72,-73,-74,-75,-76,-85,-97,-98,-99,-106,-100,-101,-107,-108,-109,-110,-112,-113,-114,-116,-117,-121,-122,-123,-124,-125,-126,-127,-130,-131,-132,-133,-134,-135,-136,-137,-138,-139,-140,-141,-142,-143,-144,-147,-149,410,-151,-30,-16,-179,-156,433,434,437,441,-18,-27,-42,-43,-44,-69,-111,-115,-118,-120,-128,-129,-148,-154,-155,-167,-153,-29,-32,-34,-146,-145,-150,-152,-31,-33,-165,-35,-36,-38,-37,-39,-40,-41,]),'AS':([51,53,54,55,61,62,63,64,116,117,143,219,222,243,289,324,326,327,328,329,330,331,332,333,334,336,337,338,340,341,344,345,346,347,348,349,350,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,377,379,381,427,428,429,430,431,432,435,439,440,442,448,456,457,458,459,464,],[141,-92,-89,-90,-102,-103,-104,-105,-168,-169,-88,141,-91,-119,-166,-97,-98,-99,-106,-100,-101,-107,-108,-109,-110,-112,-113,-114,-116,-117,-121,-122,-123,-124,-125,-126,-127,-130,-131,-132,-133,-134,-135,-136,-137,-138,-139,-140,-141,-142,-143,-144,-147,-149,-151,-111,-115,-118,-120,-128,-129,-148,-154,-155,-167,-153,-146,-145,-150,-152,-165,]),'CADENA':([51,53,54,55,61,62,63,64,116,117,141,143,187,188,189,190,191,193,194,196,197,216,219,222,243,289,324,326,327,328,329,330,331,332,333,334,336,337,338,340,341,344,345,346,347,348,349,350,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,379,381,384,385,396,427,428,429,430,431,432,433,435,436,439,440,442,448,456,457,458,459,464,],[142,-92,-89,-90,-102,-103,-104,-105,-168,-169,221,-88,269,269,269,269,269,269,269,269,269,314,142,-91,-119,-166,-97,-98,-99,-106,-100,-101,-107,-108,-109,-110,-112,-113,-114,-116,-117,-121,-122,-123,-124,-125,-126,-127,-130,-131,-132,-133,-134,-135,-136,-137,-138,-139,-140,-141,-142,-143,-144,406,-158,-159,-160,-161,-162,-163,-164,269,-147,-149,-151,269,269,314,-111,-115,-118,-120,-128,-129,444,-148,269,-154,-155,-167,-153,-146,-145,-150,-152,-165,]),'PUNTO':([53,224,412,],[144,144,144,]),'TO':([122,123,],[202,203,]),'COLUMN':([126,127,128,],[206,207,208,]),'CONSTRAINT':([128,278,279,280,281,282,283,284,285,309,391,421,422,423,424,],[209,-19,-20,-21,-22,-23,-24,-25,-26,-28,420,-27,-42,-43,-44,]),'NUMERO':([147,150,151,152,153,154,155,156,157,158,159,160,161,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,216,274,335,339,342,343,351,352,376,378,382,390,396,410,434,437,],[228,231,232,233,234,235,236,237,238,239,240,241,242,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,315,380,400,401,402,403,404,405,408,409,411,418,315,436,445,447,]),'PARCIERRE':([162,199,214,215,222,223,224,225,226,227,228,229,230,231,232,233,234,236,237,238,240,241,245,246,247,248,249,250,251,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,271,273,275,278,279,280,281,282,283,284,285,309,312,313,314,315,316,317,318,319,325,391,394,400,401,402,403,404,405,406,409,412,413,414,416,419,421,422,423,424,426,438,444,445,446,447,450,452,454,460,461,462,467,469,473,474,477,478,479,480,],[243,289,310,-17,-91,324,-92,-178,326,327,328,329,330,331,332,333,334,336,337,338,340,341,344,345,346,347,348,349,350,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,-157,377,379,381,-19,-20,-21,-22,-23,-24,-25,-26,-28,395,-70,-71,-72,-73,-74,-75,-76,-177,-30,-16,427,428,429,430,431,432,-156,435,-92,439,440,442,-18,-27,-42,-43,-44,-69,448,456,457,458,459,-29,-32,-34,464,-31,-33,468,-35,-36,-38,-37,-39,-40,-41,]),'VARCHAR':([195,213,],[278,278,]),'INTEGER':([195,213,],[279,279,]),'CHAR':([195,213,],[280,280,]),'TEXT':([195,213,],[281,281,]),'BIGINT':([195,213,],[282,282,]),'DECIMAL':([195,213,392,],[283,283,423,]),'NUMERIC':([195,213,392,],[284,284,422,]),'REAL':([195,213,],[285,285,]),'COMILLA':([198,295,296,297,386,],[288,-174,-175,-176,415,]),'YEAR':([200,],[292,]),'MONTH':([200,],[293,]),'DAY':([200,],[294,]),'HOUR':([200,288,],[295,295,]),'MINUTE':([200,288,],[296,296,]),'SECOND':([200,288,],[297,297,]),'MODE':([212,],[308,]),'NUM_DECIMAL':([216,396,],[316,316,]),'FECHA_HORA':([216,396,],[317,317,]),'TRUE':([216,396,],[318,318,]),'FALSE':([216,396,],[319,319,]),'WHERE':([217,218,397,],[322,-180,-179,]),'SIGNO_PIPE':([268,269,270,271,272,273,275,276,286,287,406,407,413,414,446,],[369,-157,369,369,369,369,369,369,369,369,-156,369,369,369,369,]),'SIGNO_DOBLE_PIPE':([268,269,270,271,272,273,275,276,286,287,406,407,413,414,446,],[370,-157,370,370,370,370,370,370,370,370,-156,370,370,370,370,]),'SIGNO_AND':([268,269,270,271,272,273,275,276,286,287,406,407,413,414,446,],[371,-157,371,371,371,371,371,371,371,371,-156,371,371,371,371,]),'SIGNO_VIRGULILLA':([268,269,270,271,272,273,275,276,286,287,406,407,413,414,446,],[372,-157,372,372,372,372,372,372,372,372,-156,372,372,372,372,]),'SIGNO_NUMERAL':([268,269,270,271,272,273,275,276,286,287,406,407,413,414,446,],[373,-157,373,373,373,373,373,373,373,373,-156,373,373,373,373,]),'SIGNO_DOBLE_MENORQUE':([268,269,270,271,272,273,275,276,286,287,406,407,413,414,446,],[374,-157,374,374,374,374,374,374,374,374,-156,374,374,374,374,]),'SIGNO_DOBLE_MAYORQUE':([268,269,270,271,272,273,275,276,286,287,406,407,413,414,446,],[375,-157,375,375,375,375,375,375,375,375,-156,375,375,375,375,]),'DEFAULT':([278,279,280,281,282,283,284,285,309,475,],[-19,-20,-21,-22,-23,-24,-25,-26,392,479,]),'SIGNO_IGUAL':([307,308,],[389,390,]),'TIMESTAMP':([387,],[416,]),'NULL':([392,443,451,475,],[424,452,461,478,]),'INTERVAL':([441,],[449,]),'PRIMARY':([443,],[453,]),'UNIQUE':([443,],[454,]),'FOREIGN':([443,],[455,]),'F_HORA':([449,],[460,]),'KEY':([453,455,],[462,463,]),'ON':([468,],[470,]),'DELETE':([470,],[471,]),'UPDATE':([470,],[472,]),'CASCADE':([471,472,],[474,474,]),'SET':([471,472,],[475,475,]),'NO':([471,472,],[476,476,]),'ACTION':([476,],[480,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'inicio':([0,],[1,]),'instrucciones':([0,],[2,]),'instruccion':([0,2,],[3,18,]),'ins_use':([0,2,],[4,4,]),'ins_show':([0,2,],[5,5,]),'ins_alter':([0,2,],[6,6,]),'ins_drop':([0,2,],[7,7,]),'ins_create':([0,2,],[8,8,]),'ins_insert':([0,2,],[9,9,]),'ins_select':([0,2,37,39,40,],[10,10,118,119,120,]),'tipo_alter':([13,],[24,]),'tipo_drop':([14,],[27,]),'tipo_create':([15,],[30,]),'ins_replace':([15,],[31,]),'arg_distict':([17,],[35,]),'option_all':([19,20,21,],[37,39,40,]),'if_exist':([28,46,],[43,133,]),'colum_list':([35,],[50,]),'columns':([35,139,],[51,219,]),'aggregates':([35,139,],[54,54,]),'functions':([35,139,],[55,55,]),'math':([35,139,],[61,61,]),'trig':([35,139,],[62,62,]),'string_func':([35,139,],[63,63,]),'time_func':([35,139,],[64,64,]),'alter_database':([41,],[121,]),'alteracion_tabla':([42,],[124,]),'alterar_tabla':([42,205,],[125,300,]),'puntocoma':([48,211,306,],[135,305,388,]),'as_id':([51,219,],[140,323,]),'dot_table':([53,224,412,],[143,325,438,]),'definicion_columna':([134,],[214,]),'columna':([134,206,207,311,],[215,301,302,394,]),'table_list':([138,],[217,]),'param':([145,146,147,148,149,],[223,226,227,229,230,]),'s_param':([187,188,189,190,191,193,194,196,197,376,384,385,436,],[268,270,271,272,273,275,276,286,287,407,413,414,446,]),'tipo_dato':([195,213,],[277,309,]),'reserv_time':([200,],[290,]),'h_m_s':([200,288,],[291,386,]),'create_opciones':([212,],[306,]),'list_vls':([216,],[312,]),'val_value':([216,396,],[313,426,]),'arg_where':([217,],[320,]),'string_op':([268,270,271,272,273,275,276,286,287,407,413,414,446,],[368,368,368,368,368,368,368,368,368,368,368,368,368,]),'definicion_valor_defecto':([309,],[391,]),'list_exp':([322,],[398,]),'ins_constraint':([391,],[419,]),'tipo_default':([392,],[421,]),'restriccion_columna':([443,],[450,]),'ins_references':([468,],[469,]),'accion':([471,472,],[473,477,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> inicio","S'",1,None,None,None),
  ('inicio -> instrucciones','inicio',1,'p_inicio','Lexico.py',180),
  ('instrucciones -> instrucciones instruccion','instrucciones',2,'p_instrucciones_lista','Lexico.py',183),
  ('instrucciones -> instruccion','instrucciones',1,'p_instrucciones_lista','Lexico.py',184),
  ('instruccion -> ins_use','instruccion',1,'p_instrucciones_evaluar','Lexico.py',187),
  ('instruccion -> ins_show','instruccion',1,'p_instrucciones_evaluar','Lexico.py',188),
  ('instruccion -> ins_alter','instruccion',1,'p_instrucciones_evaluar','Lexico.py',189),
  ('instruccion -> ins_drop','instruccion',1,'p_instrucciones_evaluar','Lexico.py',190),
  ('instruccion -> ins_create','instruccion',1,'p_instrucciones_evaluar','Lexico.py',191),
  ('instruccion -> ins_insert','instruccion',1,'p_instrucciones_evaluar','Lexico.py',192),
  ('instruccion -> ins_select','instruccion',1,'p_instrucciones_evaluar','Lexico.py',193),
  ('ins_use -> USE ID','ins_use',2,'p_instruccion_use','Lexico.py',196),
  ('ins_show -> SHOW DATABASES','ins_show',2,'p_instruccion_show','Lexico.py',200),
  ('ins_create -> CREATE tipo_create','ins_create',2,'p_instruccion_create','Lexico.py',204),
  ('tipo_create -> ins_replace DATABASE if_exist ID create_opciones puntocoma','tipo_create',6,'p_tipo_create','Lexico.py',208),
  ('tipo_create -> TABLE ID PARABRE definicion_columna PARCIERRE PUNTO_COMA','tipo_create',6,'p_tipo_create','Lexico.py',209),
  ('definicion_columna -> definicion_columna COMA columna','definicion_columna',3,'p_definicion_columna','Lexico.py',212),
  ('definicion_columna -> columna','definicion_columna',1,'p_definicion_columna','Lexico.py',213),
  ('columna -> ID tipo_dato definicion_valor_defecto ins_constraint','columna',4,'p_columna','Lexico.py',216),
  ('tipo_dato -> VARCHAR','tipo_dato',1,'p_tipo_dato','Lexico.py',219),
  ('tipo_dato -> INTEGER','tipo_dato',1,'p_tipo_dato','Lexico.py',220),
  ('tipo_dato -> CHAR','tipo_dato',1,'p_tipo_dato','Lexico.py',221),
  ('tipo_dato -> TEXT','tipo_dato',1,'p_tipo_dato','Lexico.py',222),
  ('tipo_dato -> BIGINT','tipo_dato',1,'p_tipo_dato','Lexico.py',223),
  ('tipo_dato -> DECIMAL','tipo_dato',1,'p_tipo_dato','Lexico.py',224),
  ('tipo_dato -> NUMERIC','tipo_dato',1,'p_tipo_dato','Lexico.py',225),
  ('tipo_dato -> REAL','tipo_dato',1,'p_tipo_dato','Lexico.py',226),
  ('definicion_valor_defecto -> DEFAULT tipo_default','definicion_valor_defecto',2,'p_definicion_valor_defecto','Lexico.py',230),
  ('definicion_valor_defecto -> <empty>','definicion_valor_defecto',0,'p_definicion_valor_defecto','Lexico.py',231),
  ('ins_constraint -> CONSTRAINT ID restriccion_columna','ins_constraint',3,'p_ins_constraint','Lexico.py',234),
  ('ins_constraint -> <empty>','ins_constraint',0,'p_ins_constraint','Lexico.py',235),
  ('restriccion_columna -> NOT NULL','restriccion_columna',2,'p_restriccion_columna','Lexico.py',238),
  ('restriccion_columna -> NULL','restriccion_columna',1,'p_restriccion_columna','Lexico.py',239),
  ('restriccion_columna -> PRIMARY KEY','restriccion_columna',2,'p_restriccion_columna','Lexico.py',240),
  ('restriccion_columna -> UNIQUE','restriccion_columna',1,'p_restriccion_columna','Lexico.py',241),
  ('restriccion_columna -> FOREIGN KEY ID PARABRE ID PARCIERRE ins_references','restriccion_columna',7,'p_restriccion_columna','Lexico.py',242),
  ('ins_references -> ON DELETE accion','ins_references',3,'p_references','Lexico.py',246),
  ('ins_references -> ON UPDATE accion','ins_references',3,'p_references','Lexico.py',247),
  ('accion -> CASCADE','accion',1,'p_accion','Lexico.py',250),
  ('accion -> SET NULL','accion',2,'p_accion','Lexico.py',251),
  ('accion -> SET DEFAULT','accion',2,'p_accion','Lexico.py',252),
  ('accion -> NO ACTION','accion',2,'p_accion','Lexico.py',253),
  ('tipo_default -> NUMERIC','tipo_default',1,'p_tipo_default','Lexico.py',256),
  ('tipo_default -> DECIMAL','tipo_default',1,'p_tipo_default','Lexico.py',257),
  ('tipo_default -> NULL','tipo_default',1,'p_tipo_default','Lexico.py',258),
  ('ins_replace -> OR REPLACE puntocoma','ins_replace',3,'p_ins_replace','Lexico.py',261),
  ('ins_replace -> <empty>','ins_replace',0,'p_ins_replace','Lexico.py',262),
  ('if_exist -> IF NOT EXIST puntocoma','if_exist',4,'p_if_exist','Lexico.py',265),
  ('if_exist -> IF EXIST','if_exist',2,'p_if_exist','Lexico.py',266),
  ('if_exist -> <empty>','if_exist',0,'p_if_exist','Lexico.py',267),
  ('create_opciones -> OWNER SIGNO_IGUAL ID','create_opciones',3,'p_create_opciones','Lexico.py',270),
  ('create_opciones -> MODE SIGNO_IGUAL NUMERO','create_opciones',3,'p_create_opciones','Lexico.py',271),
  ('puntocoma -> PUNTO_COMA','puntocoma',1,'p_puntocoma','Lexico.py',274),
  ('puntocoma -> <empty>','puntocoma',0,'p_puntocoma','Lexico.py',275),
  ('ins_alter -> ALTER tipo_alter','ins_alter',2,'p_alter','Lexico.py',278),
  ('tipo_alter -> DATABASE ID alter_database PUNTO_COMA','tipo_alter',4,'p_tipo_alter','Lexico.py',282),
  ('tipo_alter -> TABLE ID alteracion_tabla PUNTO_COMA','tipo_alter',4,'p_tipo_alter','Lexico.py',283),
  ('alteracion_tabla -> alteracion_tabla COMA alterar_tabla','alteracion_tabla',3,'p_alteracion_tabla','Lexico.py',286),
  ('alteracion_tabla -> alterar_tabla','alteracion_tabla',1,'p_alteracion_tabla','Lexico.py',287),
  ('alterar_tabla -> ADD COLUMN columna','alterar_tabla',3,'p_alterar_tabla','Lexico.py',290),
  ('alterar_tabla -> ALTER COLUMN columna','alterar_tabla',3,'p_alterar_tabla','Lexico.py',291),
  ('alterar_tabla -> DROP COLUMN ID','alterar_tabla',3,'p_alterar_tabla','Lexico.py',292),
  ('alterar_tabla -> DROP CONSTRAINT ID','alterar_tabla',3,'p_alterar_tabla','Lexico.py',293),
  ('alter_database -> RENAME TO ID','alter_database',3,'p_alter_database','Lexico.py',296),
  ('alter_database -> OWNER TO ID','alter_database',3,'p_alter_database','Lexico.py',297),
  ('ins_drop -> DROP tipo_drop','ins_drop',2,'p_drop','Lexico.py',300),
  ('tipo_drop -> DATABASE if_exist ID PUNTO_COMA','tipo_drop',4,'p_tipo_drop','Lexico.py',303),
  ('tipo_drop -> TABLE ID PUNTO_COMA','tipo_drop',3,'p_tipo_drop','Lexico.py',304),
  ('ins_insert -> INSERT INTO ID VALUES PARABRE list_vls PARCIERRE PUNTO_COMA','ins_insert',8,'p_ins_insert','Lexico.py',310),
  ('list_vls -> list_vls COMA val_value','list_vls',3,'p_list_vls','Lexico.py',315),
  ('list_vls -> val_value','list_vls',1,'p_list_vls','Lexico.py',316),
  ('val_value -> CADENA','val_value',1,'p_val_value','Lexico.py',319),
  ('val_value -> NUMERO','val_value',1,'p_val_value','Lexico.py',320),
  ('val_value -> NUM_DECIMAL','val_value',1,'p_val_value','Lexico.py',321),
  ('val_value -> FECHA_HORA','val_value',1,'p_val_value','Lexico.py',322),
  ('val_value -> TRUE','val_value',1,'p_val_value','Lexico.py',323),
  ('val_value -> FALSE','val_value',1,'p_val_value','Lexico.py',324),
  ('ins_select -> ins_select UNION option_all ins_select','ins_select',4,'p_ins_select','Lexico.py',327),
  ('ins_select -> ins_select INTERSECT option_all ins_select','ins_select',4,'p_ins_select','Lexico.py',328),
  ('ins_select -> ins_select EXCEPT option_all ins_select','ins_select',4,'p_ins_select','Lexico.py',329),
  ('ins_select -> SELECT arg_distict colum_list FROM table_list arg_where','ins_select',6,'p_ins_select','Lexico.py',330),
  ('option_all -> ALL','option_all',1,'p_option_all','Lexico.py',333),
  ('option_all -> <empty>','option_all',0,'p_option_all','Lexico.py',334),
  ('arg_distict -> DISTINCT','arg_distict',1,'p_arg_distict','Lexico.py',337),
  ('arg_distict -> <empty>','arg_distict',0,'p_arg_distict','Lexico.py',338),
  ('colum_list -> colum_list COMA columns as_id','colum_list',4,'p_colum_list','Lexico.py',341),
  ('colum_list -> columns as_id','colum_list',2,'p_colum_list','Lexico.py',342),
  ('colum_list -> SIGNO_POR','colum_list',1,'p_colum_list','Lexico.py',343),
  ('columns -> ID dot_table','columns',2,'p_columns','Lexico.py',347),
  ('columns -> aggregates','columns',1,'p_columns','Lexico.py',348),
  ('columns -> functions','columns',1,'p_columns','Lexico.py',349),
  ('dot_table -> PUNTO ID','dot_table',2,'p_dot_table','Lexico.py',352),
  ('dot_table -> <empty>','dot_table',0,'p_dot_table','Lexico.py',353),
  ('as_id -> AS ID','as_id',2,'p_as_id','Lexico.py',356),
  ('as_id -> AS CADENA','as_id',2,'p_as_id','Lexico.py',357),
  ('as_id -> CADENA','as_id',1,'p_as_id','Lexico.py',358),
  ('as_id -> <empty>','as_id',0,'p_as_id','Lexico.py',359),
  ('aggregates -> COUNT PARABRE param PARCIERRE','aggregates',4,'p_aggregates','Lexico.py',363),
  ('aggregates -> SUM PARABRE param PARCIERRE','aggregates',4,'p_aggregates','Lexico.py',364),
  ('aggregates -> AVG PARABRE param PARCIERRE','aggregates',4,'p_aggregates','Lexico.py',365),
  ('aggregates -> MAX PARABRE param PARCIERRE','aggregates',4,'p_aggregates','Lexico.py',366),
  ('aggregates -> MIN PARABRE param PARCIERRE','aggregates',4,'p_aggregates','Lexico.py',367),
  ('functions -> math','functions',1,'p_functions','Lexico.py',370),
  ('functions -> trig','functions',1,'p_functions','Lexico.py',371),
  ('functions -> string_func','functions',1,'p_functions','Lexico.py',372),
  ('functions -> time_func','functions',1,'p_functions','Lexico.py',373),
  ('math -> AVG PARABRE NUMERO PARCIERRE','math',4,'p_math','Lexico.py',378),
  ('math -> CBRT PARABRE NUMERO PARCIERRE','math',4,'p_math','Lexico.py',379),
  ('math -> CEIL PARABRE NUMERO PARCIERRE','math',4,'p_math','Lexico.py',380),
  ('math -> CEILING PARABRE NUMERO PARCIERRE','math',4,'p_math','Lexico.py',381),
  ('math -> DEGREES PARABRE NUMERO PARCIERRE','math',4,'p_math','Lexico.py',382),
  ('math -> DIV PARABRE NUMERO COMA NUMERO PARCIERRE','math',6,'p_math','Lexico.py',383),
  ('math -> EXP PARABRE NUMERO PARCIERRE','math',4,'p_math','Lexico.py',384),
  ('math -> FACTORIAL PARABRE NUMERO PARCIERRE','math',4,'p_math','Lexico.py',385),
  ('math -> FLOOR PARABRE NUMERO PARCIERRE','math',4,'p_math','Lexico.py',386),
  ('math -> GCD PARABRE NUMERO COMA NUMERO PARCIERRE','math',6,'p_math','Lexico.py',387),
  ('math -> IN PARABRE NUMERO PARCIERRE','math',4,'p_math','Lexico.py',388),
  ('math -> LOG PARABRE NUMERO PARCIERRE','math',4,'p_math','Lexico.py',389),
  ('math -> MOD PARABRE NUMERO COMA NUMERO PARCIERRE','math',6,'p_math','Lexico.py',390),
  ('math -> PI PARABRE PARCIERRE','math',3,'p_math','Lexico.py',391),
  ('math -> POWER PARABRE NUMERO COMA NUMERO PARCIERRE','math',6,'p_math','Lexico.py',392),
  ('math -> ROUND PARABRE NUMERO PARCIERRE','math',4,'p_math','Lexico.py',393),
  ('trig -> ACOS PARABRE NUMERO PARCIERRE','trig',4,'p_trig','Lexico.py',396),
  ('trig -> ACOSD PARABRE NUMERO PARCIERRE','trig',4,'p_trig','Lexico.py',397),
  ('trig -> ASIN PARABRE NUMERO PARCIERRE','trig',4,'p_trig','Lexico.py',398),
  ('trig -> ASIND PARABRE NUMERO PARCIERRE','trig',4,'p_trig','Lexico.py',399),
  ('trig -> ATAN PARABRE NUMERO PARCIERRE','trig',4,'p_trig','Lexico.py',400),
  ('trig -> ATAND PARABRE NUMERO PARCIERRE','trig',4,'p_trig','Lexico.py',401),
  ('trig -> ATAN2 PARABRE NUMERO COMA NUMERO PARCIERRE','trig',6,'p_trig','Lexico.py',402),
  ('trig -> ATAN2D PARABRE NUMERO COMA NUMERO PARCIERRE','trig',6,'p_trig','Lexico.py',403),
  ('trig -> COS PARABRE NUMERO PARCIERRE','trig',4,'p_trig','Lexico.py',404),
  ('trig -> COSD PARABRE NUMERO PARCIERRE','trig',4,'p_trig','Lexico.py',405),
  ('trig -> COT PARABRE NUMERO PARCIERRE','trig',4,'p_trig','Lexico.py',406),
  ('trig -> COTD PARABRE NUMERO PARCIERRE','trig',4,'p_trig','Lexico.py',407),
  ('trig -> SIN PARABRE NUMERO PARCIERRE','trig',4,'p_trig','Lexico.py',408),
  ('trig -> SIND PARABRE NUMERO PARCIERRE','trig',4,'p_trig','Lexico.py',409),
  ('trig -> TAN PARABRE NUMERO PARCIERRE','trig',4,'p_trig','Lexico.py',410),
  ('trig -> TAND PARABRE NUMERO PARCIERRE','trig',4,'p_trig','Lexico.py',411),
  ('trig -> SINH PARABRE NUMERO PARCIERRE','trig',4,'p_trig','Lexico.py',412),
  ('trig -> COSH PARABRE NUMERO PARCIERRE','trig',4,'p_trig','Lexico.py',413),
  ('trig -> TANH PARABRE NUMERO PARCIERRE','trig',4,'p_trig','Lexico.py',414),
  ('trig -> ASINH PARABRE NUMERO PARCIERRE','trig',4,'p_trig','Lexico.py',415),
  ('trig -> ACOSH PARABRE NUMERO PARCIERRE','trig',4,'p_trig','Lexico.py',416),
  ('trig -> ATANH PARABRE NUMERO PARCIERRE','trig',4,'p_trig','Lexico.py',417),
  ('string_func -> LENGTH PARABRE s_param PARCIERRE','string_func',4,'p_string_func','Lexico.py',420),
  ('string_func -> SUBSTRING PARABRE s_param COMA NUMERO COMA NUMERO PARCIERRE','string_func',8,'p_string_func','Lexico.py',421),
  ('string_func -> SUBSTRING PARABRE s_param COMA s_param COMA CADENA PARCIERRE','string_func',8,'p_string_func','Lexico.py',422),
  ('string_func -> TRIM PARABRE s_param PARCIERRE','string_func',4,'p_string_func','Lexico.py',423),
  ('string_func -> GET_BYTE PARABRE s_param COMA NUMERO PARCIERRE','string_func',6,'p_string_func','Lexico.py',424),
  ('string_func -> MOD5 PARABRE s_param PARCIERRE','string_func',4,'p_string_func','Lexico.py',425),
  ('string_func -> SET_BYTE PARABRE COMA NUMERO COMA NUMERO s_param PARCIERRE','string_func',8,'p_string_func','Lexico.py',426),
  ('string_func -> SHA256 PARABRE s_param PARCIERRE','string_func',4,'p_string_func','Lexico.py',427),
  ('string_func -> SUBSTR PARABRE s_param COMA NUMERO COMA NUMERO PARCIERRE','string_func',8,'p_string_func','Lexico.py',428),
  ('string_func -> CONVERT PARABRE tipo_dato COMA ID dot_table PARCIERRE','string_func',7,'p_string_func','Lexico.py',429),
  ('string_func -> ENCODE PARABRE s_param COMA s_param PARCIERRE','string_func',6,'p_string_func','Lexico.py',430),
  ('string_func -> DECODE PARABRE s_param COMA s_param PARCIERRE','string_func',6,'p_string_func','Lexico.py',431),
  ('s_param -> s_param string_op CADENA','s_param',3,'p_s_param','Lexico.py',434),
  ('s_param -> CADENA','s_param',1,'p_s_param','Lexico.py',435),
  ('string_op -> SIGNO_PIPE','string_op',1,'p_string_op','Lexico.py',438),
  ('string_op -> SIGNO_DOBLE_PIPE','string_op',1,'p_string_op','Lexico.py',439),
  ('string_op -> SIGNO_AND','string_op',1,'p_string_op','Lexico.py',440),
  ('string_op -> SIGNO_VIRGULILLA','string_op',1,'p_string_op','Lexico.py',441),
  ('string_op -> SIGNO_NUMERAL','string_op',1,'p_string_op','Lexico.py',442),
  ('string_op -> SIGNO_DOBLE_MENORQUE','string_op',1,'p_string_op','Lexico.py',443),
  ('string_op -> SIGNO_DOBLE_MAYORQUE','string_op',1,'p_string_op','Lexico.py',444),
  ('time_func -> DATE_PART PARABRE COMILLA h_m_s COMILLA COMA INTERVAL F_HORA PARCIERRE','time_func',9,'p_time_func','Lexico.py',448),
  ('time_func -> NOW PARABRE PARCIERRE','time_func',3,'p_time_func','Lexico.py',449),
  ('time_func -> EXTRACT PARABRE reserv_time FROM TIMESTAMP PARCIERRE','time_func',6,'p_time_func','Lexico.py',450),
  ('time_func -> CURRENT_TIME','time_func',1,'p_time_func','Lexico.py',451),
  ('time_func -> CURRENT_DATE','time_func',1,'p_time_func','Lexico.py',452),
  ('reserv_time -> h_m_s','reserv_time',1,'p_reserv_time','Lexico.py',455),
  ('reserv_time -> YEAR','reserv_time',1,'p_reserv_time','Lexico.py',456),
  ('reserv_time -> MONTH','reserv_time',1,'p_reserv_time','Lexico.py',457),
  ('reserv_time -> DAY','reserv_time',1,'p_reserv_time','Lexico.py',458),
  ('h_m_s -> HOUR','h_m_s',1,'p_h_m_s','Lexico.py',461),
  ('h_m_s -> MINUTE','h_m_s',1,'p_h_m_s','Lexico.py',462),
  ('h_m_s -> SECOND','h_m_s',1,'p_h_m_s','Lexico.py',463),
  ('param -> ID dot_table','param',2,'p_param','Lexico.py',466),
  ('param -> SIGNO_POR','param',1,'p_param','Lexico.py',467),
  ('table_list -> table_list COMA ID','table_list',3,'p_table_list','Lexico.py',470),
  ('table_list -> ID','table_list',1,'p_table_list','Lexico.py',471),
  ('arg_where -> WHERE list_exp','arg_where',2,'p_arg_where','Lexico.py',474),
  ('arg_where -> <empty>','arg_where',0,'p_arg_where','Lexico.py',475),
  ('list_exp -> ID','list_exp',1,'p_list_expressions','Lexico.py',478),
  ('list_exp -> <empty>','list_exp',0,'p_list_expressions','Lexico.py',479),
]
